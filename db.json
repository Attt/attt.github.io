{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/fonts/JetBrainsMono-Regular.eot","path":"fonts/JetBrainsMono-Regular.eot","modified":1,"renderable":0},{"_id":"source/fonts/JetBrainsMono-Regular.ttf","path":"fonts/JetBrainsMono-Regular.ttf","modified":1,"renderable":0},{"_id":"source/fonts/JetBrainsMono-Regular.woff","path":"fonts/JetBrainsMono-Regular.woff","modified":1,"renderable":0},{"_id":"source/fonts/JetBrainsMono-Regular.woff2","path":"fonts/JetBrainsMono-Regular.woff2","modified":1,"renderable":0},{"_id":"source/fonts/LXGWWenKaiMono-Regular.woff2","path":"fonts/LXGWWenKaiMono-Regular.woff2","modified":1,"renderable":0},{"_id":"source/fonts/LXGWWenKaiScreenR.woff2","path":"fonts/LXGWWenKaiScreenR.woff2","modified":1,"renderable":0},{"_id":"source/images/eye.webp","path":"images/eye.webp","modified":1,"renderable":0},{"_id":"source/images/jojo.webp","path":"images/jojo.webp","modified":1,"renderable":0},{"_id":"source/images/me.png","path":"images/me.png","modified":1,"renderable":0},{"_id":"source/images/wechat.jpg","path":"images/wechat.jpg","modified":1,"renderable":0},{"_id":"source/images/raw/0.jpg","path":"images/raw/0.jpg","modified":1,"renderable":0},{"_id":"source/images/raw/eye0.jpg","path":"images/raw/eye0.jpg","modified":1,"renderable":0},{"_id":"source/images/raw/eye1.jpg","path":"images/raw/eye1.jpg","modified":1,"renderable":0},{"_id":"source/images/raw/jojo.jpg","path":"images/raw/jojo.jpg","modified":1,"renderable":0},{"_id":"source/images/raw/takadanobaba.jpg","path":"images/raw/takadanobaba.jpg","modified":1,"renderable":0},{"_id":"source/images/raw/takadanobaba1.jpg","path":"images/raw/takadanobaba1.jpg","modified":1,"renderable":0}],"Cache":[{"_id":"source/about/index.md","hash":"161e0572c8037dededffa9ac96cb69d98dddf62c","modified":1679020247745},{"_id":"source/categories/index.md","hash":"6ccd1de20346e08e0a76785ae7628524f934a9be","modified":1679020247745},{"_id":"source/css/fix-input-shadow.css","hash":"fd7938b34f69b350d67487925f6817caaff8ee0f","modified":1679020247745},{"_id":"source/css/fonts.css","hash":"a186af6d7f9eca1ae0bcad904b9a3da50d9d3170","modified":1679020247745},{"_id":"source/_posts/arch-linux-setup-guide.md","hash":"afc716a391d3b94445df348c64d41fcc80bc839c","modified":1679020247683},{"_id":"source/_posts/asynchronization.md","hash":"e15a7f37019247e757f5163d36aab70ef37bc990","modified":1679020247683},{"_id":"source/_posts/blender-learning-memo0.md","hash":"acac6e1ab4c94e1a32a65f440d8ad80e95cd45ed","modified":1679020247683},{"_id":"source/.DS_Store","hash":"d23ebc64a8b194fd4df59d91c7441ddd6538438d","modified":1679045514018},{"_id":"source/_posts/case-sensitive-collation-in-mysql.md","hash":"d94e419d1f887ec751fc7a451f8a8565e9b81129","modified":1679020247688},{"_id":"source/_posts/fgo-frida-il2cpp-bridge.md","hash":"d95ac7f63e053bbec7823eb0a05cf759f97bb04a","modified":1679020247688},{"_id":"source/_posts/hystrix.md","hash":"8e77f932036758f09dc1962fdf83907fe22ee252","modified":1679020247689},{"_id":"source/_posts/java-log-components.md.tmp","hash":"8fa622737cb5dd965259cdf5f3d3ff0ed0b56e83","modified":1679020247689},{"_id":"source/_posts/.DS_Store","hash":"8b7d887bb93882af3d47b73b65baa0549f4e39b4","modified":1679045514017},{"_id":"source/_posts/java-security-issue.md","hash":"d8f48b8da40fed8372c798b1e3b5bdf42cb98665","modified":1679020247689},{"_id":"source/_posts/jp-ni-de-basyou.md","hash":"62c41b8eae64829d81daa72f74396968b62fb6db","modified":1679020247695},{"_id":"source/_posts/jp-tokoro.md","hash":"e071ea053e6c5b86f39f8600db29facc623a772f","modified":1679020247695},{"_id":"source/_posts/jvm-metaspace-leakage-caused-by-loading-dynamic-class.md","hash":"aedaff7e3fdb0011ff5e0f94621ab4f35d77aad1","modified":1679020247695},{"_id":"source/_posts/lc-hash-table.md","hash":"b123147b05970cafd5dc8217308402c636ac8345","modified":1679020247717},{"_id":"source/_posts/lc-heap.md","hash":"2e0d86a67382da8237cb4bccc0d5ea2415288d3e","modified":1679020247717},{"_id":"source/_posts/lc-skip-list.md","hash":"25b25a7195813cbc399fc65f2ebbac0f138faf9e","modified":1679020247719},{"_id":"source/_posts/lmax-disruptor.md.tmp","hash":"a5c649c1e1eb78aa4a0506a2596d24bc44f843e7","modified":1679020247719},{"_id":"source/_posts/project-loom-preview.md","hash":"88a1f28e6ed270a54bc04d5ba80955038a874e2f","modified":1679020247719},{"_id":"source/_posts/reading-memo-networking-top-down-ch1.md","hash":"fd31857670f87e88e3c79fc0324e41f4503b2e8e","modified":1679039640783},{"_id":"source/_posts/reading-memo-networking-top-down-ch2.md","hash":"a3ffec64601e2099ce228782b3db016290751b12","modified":1679039639319},{"_id":"source/_posts/rust-notes.md","hash":"5af64cabcb5846cf97b7813f79750e28b3bcb203","modified":1687920684355},{"_id":"source/_posts/shell-some-memos-for-shell-script.md","hash":"55515b394570cf37891a9c69f429fc1c0f08d410","modified":1679020247732},{"_id":"source/_posts/spring-rabbitmq-binding-trap.md","hash":"b993554c9935f7b3e05018635529cf5bd59a7109","modified":1679020247732},{"_id":"source/_posts/tcp.md.tmp","hash":"1fc18288959c66ab0c40e156b028126ea658dd85","modified":1679020247732},{"_id":"source/_posts/todo-list.md","hash":"0b67146f2577daefed35962d88826c373c48db85","modified":1679020247736},{"_id":"source/_posts/url-parsing-issue.md","hash":"4cea8458306991b0829efdfd03bcd4a1fdf092bd","modified":1679020247736},{"_id":"source/_posts/useful-utils.md","hash":"8fb9444a1d04326883464bef3c5b8339ef7a7986","modified":1679020247744},{"_id":"source/search/index.md","hash":"4f8bb9b39afe7d8aee13227987999f9fefdeb200","modified":1679020247786},{"_id":"source/tags/index.md","hash":"1c60e5c61c112001eccf9ff4e35958a47d4de0be","modified":1679020247786},{"_id":"source/_data/languages/ja.yml","hash":"ccdb9d56b4f4546e5dad1b4d0b891f46c4cd2687","modified":1679020247683},{"_id":"source/_data/languages/zh-CN.yml","hash":"91c081b9b92246cd2525b7afef07a9c23b05920e","modified":1679020247683},{"_id":"source/_posts/arch-linux-setup-guide/archlinux.png","hash":"d51d79f737cffad66eb7b839b777b91a2e6dbb9f","modified":1679020247683},{"_id":"source/_posts/blender-learning-memo0/render_shader-nodes_shader_principled_node.png","hash":"823db2a3c9e25f0f073583f868fadda954f3d5d3","modified":1679020247688},{"_id":"source/_posts/hystrix/hystrix.webp","hash":"b57b4dd1b58f571b783037b0e73cb4330574170c","modified":1679020247689},{"_id":"source/_posts/jvm-metaspace-leakage-caused-by-loading-dynamic-class/6.png","hash":"9066953c0c3dda2e33b7196e2c76607df9031842","modified":1679020247717},{"_id":"source/_posts/lc-heap/max-heap-example.drawio.png","hash":"4d277854984aa2c877c3d84efa6f63f0361e78c0","modified":1679020247717},{"_id":"source/_posts/lc-heap/min-heap-deletion-opt.0.drawio.png","hash":"fd27b9e8caa3994f0984dcc73fc38a74547f91c0","modified":1679020247717},{"_id":"source/_posts/lc-heap/min-heap-deletion-opt.1.drawio.png","hash":"2bda33bd7e2f8cf8b0585ae305200f95972ceaee","modified":1679020247717},{"_id":"source/_posts/lc-heap/min-heap-deletion-opt.2.drawio.png","hash":"049c0f9589143ae52cdc6b596a556be5c0dc9771","modified":1679020247718},{"_id":"source/_posts/lc-heap/min-heap-deletion-opt.3.drawio.png","hash":"0b3de87a3e39e18902d2c1e0535324b5bdc887df","modified":1679020247718},{"_id":"source/_posts/lc-heap/min-heap-deletion.0.drawio.png","hash":"d9bee18c6346966a55fc23cff8bbd9cd5c62a469","modified":1679020247718},{"_id":"source/_posts/lc-heap/min-heap-deletion.1.drawio.png","hash":"bd1c1edd95dd40f89fa03bbe9b85eca040178b72","modified":1679020247718},{"_id":"source/_posts/lc-heap/min-heap-insertion.0.drawio.png","hash":"92264757289839cf011226ce55f9ad111665bd48","modified":1679020247718},{"_id":"source/_posts/lc-heap/min-heap-insertion.1.drawio.png","hash":"d0a469b6f72f7edab3c9f51d3744a1c9519ab237","modified":1679020247718},{"_id":"source/_posts/lc-heap/min-heap-insertion.2.drawio.png","hash":"613b41319d6e423de979195bb6572d7bd30c11d7","modified":1679020247719},{"_id":"source/_posts/lc-heap/min-heap-insertion.3.drawio.png","hash":"93b4c66ee8d2cc05efe499d0d3bae3facd347d06","modified":1679020247719},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-14 22.06.50.png","hash":"e445a73b07272d62f4691d99a69a6505df8f56dc","modified":1679020247721},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-16 14.23.27.png","hash":"3991676e63440b19cdff59a8bd2a8daf826f1b2b","modified":1679020247727},{"_id":"source/_posts/rust-notes/char-size-1.png","hash":"18dd3bf8d27ae7b1151c029ead00ab4dfc08a3eb","modified":1686898749192},{"_id":"source/fonts/JetBrainsMono-Regular.woff","hash":"d99399b52fe266b11094ba29c83d678d46c685f2","modified":1679020247746},{"_id":"source/fonts/JetBrainsMono-Regular.woff2","hash":"1480a0985d69c0dc288fef6f3220684cc0f626d8","modified":1679020247746},{"_id":"source/images/me.png","hash":"0a5449222d1957e9b69dabca1db65b51c53798ea","modified":1679020247766},{"_id":"source/_posts/jvm-metaspace-leakage-caused-by-loading-dynamic-class/0.png","hash":"622a8e751c216e4020cb319f9e0ca67f462d5208","modified":1679020247695},{"_id":"source/_posts/reading-memo-networking-top-down-ch2/截屏2023-03-17 11.07.13.png","hash":"c53f51beba43a0d036dc7e6f1961b9f7472b9613","modified":1679022439022},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-14 21.51.57.png","hash":"fcd8bd54bf02f4d1e513ed7d2afd409a0902f322","modified":1679020247721},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 14.01.32.png","hash":"f512cf4ae73bc2b6ce8609164ec9402f4691dd38","modified":1679020247723},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 14.25.06.png","hash":"4b3e2147ee4bdef9f59c540e32fee4d0a81275f8","modified":1679020247724},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 20.37.43.png","hash":"667e34807f7d7d98b32f3e1bf27e83229ff15970","modified":1679020247725},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 20.38.01.png","hash":"365bfb600972a020cc24f2fdb8898ce8988b1d0c","modified":1679020247725},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 14.35.29.png","hash":"e97c570b23dc7b0f4a81067a15e2d2e92a317a3d","modified":1679020247724},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 21.40.53.png","hash":"84ef6446b51ad7ef22abb4fc0803ea3f8d31804e","modified":1679020247727},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-16 20.41.47.png","hash":"507c78b803088c381bbdfcaddfb596ab117d79d9","modified":1679020247731},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-16 22.29.19.png","hash":"35cd44f1ae43027c00f7331e769045f91a4ecbe4","modified":1679020247732},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-16 22.17.56.png","hash":"2e70a79780ecfe521fe82ab306f7dfa863c90fd3","modified":1679020247732},{"_id":"source/images/raw/eye0.jpg","hash":"7ecd3ae249dfa1d2285ef3b8c6a4637487416f49","modified":1679020247766},{"_id":"source/fonts/JetBrainsMono-Regular.eot","hash":"de7cbb342a8599b728665a3c2b6fecf15f97ccde","modified":1679020247745},{"_id":"source/images/wechat.jpg","hash":"0f58bc98fcf489da3fd675de82191e77f7392dba","modified":1679020247786},{"_id":"source/_posts/blender-learning-memo0/render_shader-nodes_shader_principled_example-2a.jpg","hash":"e8e64ec36f4ec09f525f0dc83616e3b76df2d470","modified":1679020247687},{"_id":"source/_posts/blender-learning-memo0/render_shader-nodes_shader_principled_example-2b.jpg","hash":"2b2455bd1ece8f59b10f11339ca9989e52415da4","modified":1679020247688},{"_id":"source/_posts/jvm-metaspace-leakage-caused-by-loading-dynamic-class/5.png","hash":"32d8635ee433032162bc323cc0c7a9e1388649dc","modified":1679020247716},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 14.22.39.png","hash":"0cd76989b511cf06b4b6a1b8f22c560126e9df0a","modified":1679020247723},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-16 21.46.11.png","hash":"4bd03f41fc56d52f65eb7ab0aa1a3f94db991556","modified":1679020247731},{"_id":"source/_posts/tcp/tcp_header_format.png","hash":"bc35cec45c525f915c96a7e57c5f0e6698787f0a","modified":1679020247733},{"_id":"source/fonts/JetBrainsMono-Regular.ttf","hash":"f3d265699f2e9dad7947a68b6d6d734c631a3372","modified":1679020247746},{"_id":"source/_posts/blender-learning-memo0/render_shader-nodes_shader_principled_example-1a.jpg","hash":"b866b92697a4cf06ab9b94e9ea83eddea6567fee","modified":1679020247684},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 21.37.10.png","hash":"b86c51c41ff41f335cabbc4444397f824a618759","modified":1679020247726},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-16 15.00.39.png","hash":"ed131a18a43c328fa10a4a7515beb1636262d2fe","modified":1679020247729},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-16 15.16.17.png","hash":"0783fd9ffedba85230099a60a4ca02dbc198a696","modified":1679020247730},{"_id":"source/images/raw/takadanobaba1.jpg","hash":"c94442a686c825fca464db1e9dd660d029652d63","modified":1679020247785},{"_id":"source/_posts/fgo-frida-il2cpp-bridge/0.jpg","hash":"974145668d7657911d0fee01f816868293fe2e4f","modified":1679020247689},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-14 21.10.56.png","hash":"39122acc8980dd7598624114f78112cd542a48fa","modified":1679020247721},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 10.57.16.png","hash":"f20117af6083da1427cc3375cca6fd91a8a6f4b1","modified":1679020247722},{"_id":"source/images/raw/0.jpg","hash":"974145668d7657911d0fee01f816868293fe2e4f","modified":1679020247766},{"_id":"source/images/jojo.webp","hash":"aa0ddcfb93ba4d3336b247d53f208ebd032edf50","modified":1679020247765},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-16 14.27.20.png","hash":"221969abc8e2ea2af48f382cc74ef56c74804bd7","modified":1679020247728},{"_id":"source/_posts/url-parsing-issue/rfc3986_url_segments.png","hash":"487fe9017c1ecec422fcc17748c1261d63372aae","modified":1679020247739},{"_id":"source/images/eye.webp","hash":"5a15bab9b01e622f06ca0cce1be07a57e4f975fc","modified":1679020247764},{"_id":"source/_posts/rust-notes/char-size-2.png","hash":"bad4c68d07362af37f56fa60d4d1473bbf54d4e9","modified":1686898585671},{"_id":"source/_posts/tcp/tcpip_4_layers.png","hash":"501007fe46a21dccda0b68779609afeaa3a10d58","modified":1679020247736},{"_id":"source/_posts/url-parsing-issue/uriComponents_parsing_regex.png","hash":"f4283137d9a27058c864d17366f903c1d1a09c98","modified":1679020247744},{"_id":"source/_posts/url-parsing-issue/spring-issue-commit.png","hash":"80af7107d38230b31a64eb117f60cb555e61f38b","modified":1679020247742},{"_id":"source/images/raw/takadanobaba.jpg","hash":"c6f00d8d38492a0abd090ecb2a97163140d17210","modified":1679020247785},{"_id":"source/_posts/jvm-metaspace-leakage-caused-by-loading-dynamic-class/3.png","hash":"68a5a7ff36fe2e3e8288a954ff9df6ba038234a1","modified":1679020247709},{"_id":"source/_posts/jvm-metaspace-leakage-caused-by-loading-dynamic-class/2.png","hash":"5e49a6750f7235e6581109f549aba4720b0b4e1e","modified":1679020247706},{"_id":"source/_posts/reading-memo-networking-top-down-ch2/截屏2023-03-17 10.42.56.png","hash":"b268e046a9a1959747cbd545abe5de4d405ef753","modified":1679020982449},{"_id":"source/images/raw/eye1.jpg","hash":"3666a0e84e2850954a97b31ccc9a48ba46217d12","modified":1679020247774},{"_id":"source/_posts/java-security-issue/scrshot0.png","hash":"998926de4ff0af21176d3aaff502f18f0d7846a4","modified":1679020247694},{"_id":"source/_posts/jvm-metaspace-leakage-caused-by-loading-dynamic-class/4.png","hash":"3734fddc126b1b739525b7298ca463a8e167c2c3","modified":1679020247716},{"_id":"source/_posts/jvm-metaspace-leakage-caused-by-loading-dynamic-class/1.png","hash":"070e8c7d6bb1139c83822c0148cac0135ec4c448","modified":1679020247700},{"_id":"source/images/raw/jojo.jpg","hash":"6ef9f06fc7c823ce4527755e10b168321a6aadcd","modified":1679020247784},{"_id":"source/fonts/LXGWWenKaiMono-Regular.woff2","hash":"8dd926f9f75ee6fd1dc719b9c72fa7be53debfa8","modified":1679020247754},{"_id":"source/fonts/LXGWWenKaiScreenR.woff2","hash":"ce09459e5d0fb377ad0ec2c7fb628819c57f06f9","modified":1679020247764},{"_id":"public/css/fonts.css","hash":"a186af6d7f9eca1ae0bcad904b9a3da50d9d3170","modified":1687920832374},{"_id":"public/css/fix-input-shadow.css","hash":"fd7938b34f69b350d67487925f6817caaff8ee0f","modified":1687920832374},{"_id":"public/local-search.xml","hash":"d98bd8c08bac2760eebaa14d9af8b37be86c38db","modified":1687920832374},{"_id":"public/about/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/search/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2023/06/16/rust-notes/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2023/03/16/reading-memo-networking-top-down-ch2/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/08/01/lc-hash-table/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/08/02/lc-heap/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/07/27/lc-skip-list/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/07/20/url-parsing-issue/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/07/25/todo-list/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/07/14/project-loom-preview/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/07/14/java-security-issue/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/07/10/asynchronization/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/06/29/jp-ni-de-basyou/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/06/23/jp-tokoro/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/06/22/hystrix/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/06/18/blender-learning-memo0/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/06/17/case-sensitive-collation-in-mysql/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/06/14/useful-utils/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/06/14/spring-rabbitmq-binding-trap/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/03/19/shell-some-memos-for-shell-script/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/03/17/fgo-frida-il2cpp-bridge/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/04/19/arch-linux-setup-guide/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/archives/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/archives/page/2/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/archives/page/3/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/archives/2022/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/archives/2022/03/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/archives/2022/page/2/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/archives/2022/04/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/archives/2022/07/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/archives/2022/08/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/archives/2023/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/archives/2022/06/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/archives/2023/03/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/archives/2023/06/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/基础姿势/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/基础姿势/page/2/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/伸展运动/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/基础姿势/并发编程/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/群英荟萃/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/デスノート/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/伸展运动/linux/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/基础姿势/日语/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/基础姿势/微服务/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/伸展运动/数据结构/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/伸展运动/3d渲染/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/群英荟萃/bug草集/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/デスノート/wallhack/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/基础姿势/读书笔记/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/基础姿势/中间件/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/基础姿势/框架和组件/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/基础姿势/工具/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/categories/草稿/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/page/2/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/java/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/asynchronization/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/page/3/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/concurrency/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/setup/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/arch-linux/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/guide/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/linux/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/mysql/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/charset/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/collation/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/blender/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/shading/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/render/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/cycles/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/eevee/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/bsdf/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/maven/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/dependencies-confliction/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/class-load/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/class-security-check/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/bug/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/injection/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/reverse-engineering/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/wallhack/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/fgo/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/language/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/japanese/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/文法/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/netflix-hystrix/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/spring-cloud/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/microservice/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/data-structures/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/distributed-services/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/leetcode/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/algorithm/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/grammar/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/jvm/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/jvm-memory/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/virtual-threads/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/fiber/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/continuations/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/networking/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/rust/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/programing/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/shell-script/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/rabbitmq/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/spring/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/http/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/issue/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/uri/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/todo-list/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/tags/tcp-ip/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687920832374},{"_id":"public/2022/04/19/arch-linux-setup-guide/archlinux.png","hash":"d51d79f737cffad66eb7b839b777b91a2e6dbb9f","modified":1687920832374},{"_id":"public/2022/06/18/blender-learning-memo0/render_shader-nodes_shader_principled_node.png","hash":"823db2a3c9e25f0f073583f868fadda954f3d5d3","modified":1687920832374},{"_id":"public/2022/06/22/hystrix/hystrix.webp","hash":"b57b4dd1b58f571b783037b0e73cb4330574170c","modified":1687920832374},{"_id":"public/2022/08/02/lc-heap/max-heap-example.drawio.png","hash":"4d277854984aa2c877c3d84efa6f63f0361e78c0","modified":1687920832374},{"_id":"public/2023/06/16/rust-notes/char-size-1.png","hash":"18dd3bf8d27ae7b1151c029ead00ab4dfc08a3eb","modified":1687920832374},{"_id":"public/2022/08/02/lc-heap/min-heap-deletion-opt.0.drawio.png","hash":"fd27b9e8caa3994f0984dcc73fc38a74547f91c0","modified":1687920832374},{"_id":"public/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/6.png","hash":"9066953c0c3dda2e33b7196e2c76607df9031842","modified":1687920832374},{"_id":"public/2022/08/02/lc-heap/min-heap-deletion-opt.1.drawio.png","hash":"2bda33bd7e2f8cf8b0585ae305200f95972ceaee","modified":1687920832374},{"_id":"public/2022/08/02/lc-heap/min-heap-deletion-opt.2.drawio.png","hash":"049c0f9589143ae52cdc6b596a556be5c0dc9771","modified":1687920832374},{"_id":"public/2022/08/02/lc-heap/min-heap-deletion-opt.3.drawio.png","hash":"0b3de87a3e39e18902d2c1e0535324b5bdc887df","modified":1687920832374},{"_id":"public/2022/08/02/lc-heap/min-heap-deletion.0.drawio.png","hash":"d9bee18c6346966a55fc23cff8bbd9cd5c62a469","modified":1687920832374},{"_id":"public/2022/08/02/lc-heap/min-heap-insertion.0.drawio.png","hash":"92264757289839cf011226ce55f9ad111665bd48","modified":1687920832374},{"_id":"public/2022/08/02/lc-heap/min-heap-insertion.1.drawio.png","hash":"d0a469b6f72f7edab3c9f51d3744a1c9519ab237","modified":1687920832374},{"_id":"public/2022/08/02/lc-heap/min-heap-insertion.3.drawio.png","hash":"93b4c66ee8d2cc05efe499d0d3bae3facd347d06","modified":1687920832374},{"_id":"public/2022/08/02/lc-heap/min-heap-insertion.2.drawio.png","hash":"613b41319d6e423de979195bb6572d7bd30c11d7","modified":1687920832374},{"_id":"public/2022/08/02/lc-heap/min-heap-deletion.1.drawio.png","hash":"bd1c1edd95dd40f89fa03bbe9b85eca040178b72","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-14 22.06.50.png","hash":"e445a73b07272d62f4691d99a69a6505df8f56dc","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-16 14.23.27.png","hash":"3991676e63440b19cdff59a8bd2a8daf826f1b2b","modified":1687920832374},{"_id":"public/lib/hbe.js","hash":"136dba00826bdd086153bf0acb5473aea7183ad1","modified":1687920832374},{"_id":"public/css/hbe.style.css","hash":"b0a0077cb588c0941823905fcc383aa7509ade73","modified":1687920832374},{"_id":"public/fonts/JetBrainsMono-Regular.woff2","hash":"1480a0985d69c0dc288fef6f3220684cc0f626d8","modified":1687920832374},{"_id":"public/images/me.png","hash":"0a5449222d1957e9b69dabca1db65b51c53798ea","modified":1687920832374},{"_id":"public/images/raw/eye0.jpg","hash":"7ecd3ae249dfa1d2285ef3b8c6a4637487416f49","modified":1687920832374},{"_id":"public/fonts/JetBrainsMono-Regular.woff","hash":"d99399b52fe266b11094ba29c83d678d46c685f2","modified":1687920832374},{"_id":"public/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/0.png","hash":"622a8e751c216e4020cb319f9e0ca67f462d5208","modified":1687920832374},{"_id":"public/2023/03/16/reading-memo-networking-top-down-ch2/截屏2023-03-17 11.07.13.png","hash":"c53f51beba43a0d036dc7e6f1961b9f7472b9613","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-14 21.51.57.png","hash":"fcd8bd54bf02f4d1e513ed7d2afd409a0902f322","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-15 14.35.29.png","hash":"e97c570b23dc7b0f4a81067a15e2d2e92a317a3d","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-15 14.25.06.png","hash":"4b3e2147ee4bdef9f59c540e32fee4d0a81275f8","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-15 20.37.43.png","hash":"667e34807f7d7d98b32f3e1bf27e83229ff15970","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-15 20.38.01.png","hash":"365bfb600972a020cc24f2fdb8898ce8988b1d0c","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-15 21.40.53.png","hash":"84ef6446b51ad7ef22abb4fc0803ea3f8d31804e","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-15 14.01.32.png","hash":"f512cf4ae73bc2b6ce8609164ec9402f4691dd38","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-16 22.29.19.png","hash":"35cd44f1ae43027c00f7331e769045f91a4ecbe4","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-16 22.17.56.png","hash":"2e70a79780ecfe521fe82ab306f7dfa863c90fd3","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-16 20.41.47.png","hash":"507c78b803088c381bbdfcaddfb596ab117d79d9","modified":1687920832374},{"_id":"public/fonts/JetBrainsMono-Regular.eot","hash":"de7cbb342a8599b728665a3c2b6fecf15f97ccde","modified":1687920832374},{"_id":"public/images/wechat.jpg","hash":"0f58bc98fcf489da3fd675de82191e77f7392dba","modified":1687920832374},{"_id":"public/2022/06/18/blender-learning-memo0/render_shader-nodes_shader_principled_example-2a.jpg","hash":"e8e64ec36f4ec09f525f0dc83616e3b76df2d470","modified":1687920832374},{"_id":"public/2022/06/18/blender-learning-memo0/render_shader-nodes_shader_principled_example-2b.jpg","hash":"2b2455bd1ece8f59b10f11339ca9989e52415da4","modified":1687920832374},{"_id":"public/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/5.png","hash":"32d8635ee433032162bc323cc0c7a9e1388649dc","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-15 14.22.39.png","hash":"0cd76989b511cf06b4b6a1b8f22c560126e9df0a","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-16 21.46.11.png","hash":"4bd03f41fc56d52f65eb7ab0aa1a3f94db991556","modified":1687920832374},{"_id":"public/fonts/JetBrainsMono-Regular.ttf","hash":"f3d265699f2e9dad7947a68b6d6d734c631a3372","modified":1687920832374},{"_id":"public/images/raw/takadanobaba1.jpg","hash":"c94442a686c825fca464db1e9dd660d029652d63","modified":1687920832374},{"_id":"public/2022/06/18/blender-learning-memo0/render_shader-nodes_shader_principled_example-1a.jpg","hash":"b866b92697a4cf06ab9b94e9ea83eddea6567fee","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-15 21.37.10.png","hash":"b86c51c41ff41f335cabbc4444397f824a618759","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-16 15.00.39.png","hash":"ed131a18a43c328fa10a4a7515beb1636262d2fe","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-16 15.16.17.png","hash":"0783fd9ffedba85230099a60a4ca02dbc198a696","modified":1687920832374},{"_id":"public/images/raw/0.jpg","hash":"974145668d7657911d0fee01f816868293fe2e4f","modified":1687920832374},{"_id":"public/2022/03/17/fgo-frida-il2cpp-bridge/0.jpg","hash":"974145668d7657911d0fee01f816868293fe2e4f","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-14 21.10.56.png","hash":"39122acc8980dd7598624114f78112cd542a48fa","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-15 10.57.16.png","hash":"f20117af6083da1427cc3375cca6fd91a8a6f4b1","modified":1687920832374},{"_id":"public/images/jojo.webp","hash":"aa0ddcfb93ba4d3336b247d53f208ebd032edf50","modified":1687920832374},{"_id":"public/2022/07/20/url-parsing-issue/rfc3986_url_segments.png","hash":"487fe9017c1ecec422fcc17748c1261d63372aae","modified":1687920832374},{"_id":"public/2023/03/13/reading-memo-networking-top-down-ch1/截屏2023-03-16 14.27.20.png","hash":"221969abc8e2ea2af48f382cc74ef56c74804bd7","modified":1687920832374},{"_id":"public/images/eye.webp","hash":"5a15bab9b01e622f06ca0cce1be07a57e4f975fc","modified":1687920832374},{"_id":"public/2023/06/16/rust-notes/char-size-2.png","hash":"bad4c68d07362af37f56fa60d4d1473bbf54d4e9","modified":1687920832374},{"_id":"public/2022/07/20/url-parsing-issue/uriComponents_parsing_regex.png","hash":"f4283137d9a27058c864d17366f903c1d1a09c98","modified":1687920832374},{"_id":"public/images/raw/takadanobaba.jpg","hash":"c6f00d8d38492a0abd090ecb2a97163140d17210","modified":1687920832374},{"_id":"public/2022/07/20/url-parsing-issue/spring-issue-commit.png","hash":"80af7107d38230b31a64eb117f60cb555e61f38b","modified":1687920832374},{"_id":"public/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/3.png","hash":"68a5a7ff36fe2e3e8288a954ff9df6ba038234a1","modified":1687920832374},{"_id":"public/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/2.png","hash":"5e49a6750f7235e6581109f549aba4720b0b4e1e","modified":1687920832374},{"_id":"public/2023/03/16/reading-memo-networking-top-down-ch2/截屏2023-03-17 10.42.56.png","hash":"b268e046a9a1959747cbd545abe5de4d405ef753","modified":1687920832374},{"_id":"public/images/raw/eye1.jpg","hash":"3666a0e84e2850954a97b31ccc9a48ba46217d12","modified":1687920832374},{"_id":"public/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/4.png","hash":"3734fddc126b1b739525b7298ca463a8e167c2c3","modified":1687920832374},{"_id":"public/2022/07/14/java-security-issue/scrshot0.png","hash":"998926de4ff0af21176d3aaff502f18f0d7846a4","modified":1687920832374},{"_id":"public/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/1.png","hash":"070e8c7d6bb1139c83822c0148cac0135ec4c448","modified":1687920832374},{"_id":"public/images/raw/jojo.jpg","hash":"6ef9f06fc7c823ce4527755e10b168321a6aadcd","modified":1687920832374},{"_id":"public/fonts/LXGWWenKaiMono-Regular.woff2","hash":"8dd926f9f75ee6fd1dc719b9c72fa7be53debfa8","modified":1687920832374},{"_id":"public/fonts/LXGWWenKaiScreenR.woff2","hash":"ce09459e5d0fb377ad0ec2c7fb628819c57f06f9","modified":1687920832374}],"Category":[{"name":"基础姿势","_id":"cljf4hdt30004xtujht6bfunm"},{"name":"伸展运动","_id":"cljf4hdt5000cxtujexwjfl6d"},{"name":"并发编程","parent":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdt8000qxtuje9vr0ut3"},{"name":"群英荟萃","_id":"cljf4hdt8000wxtuj78l3em3e"},{"name":"デスノート","_id":"cljf4hdt9000zxtujcstxbbtj"},{"name":"Linux","parent":"cljf4hdt5000cxtujexwjfl6d","_id":"cljf4hdt90013xtujej25cdic"},{"name":"日语","parent":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdt90017xtujf1r3fd60"},{"name":"微服务","parent":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdt9001dxtuj3e18chpp"},{"name":"中间件","parent":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdta001hxtujgu3bhcih"},{"name":"数据结构","parent":"cljf4hdt5000cxtujexwjfl6d","_id":"cljf4hdta001rxtujeg5aeclq"},{"name":"3D渲染","parent":"cljf4hdt5000cxtujexwjfl6d","_id":"cljf4hdta001wxtujh86772o5"},{"name":"BUG草集","parent":"cljf4hdt8000wxtuj78l3em3e","_id":"cljf4hdtb0027xtuj630ia7fg"},{"name":"wallhack","parent":"cljf4hdt9000zxtujcstxbbtj","_id":"cljf4hdtb002cxtuj37gmd9vh"},{"name":"读书笔记","parent":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdtg004qxtuj3hm57axh"},{"name":"框架和组件","parent":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdth004wxtujfnccglbh"},{"name":"工具","parent":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdti0057xtuj8t8h6en1"},{"name":"草稿","_id":"cljf4hdti005dxtuj1j2109ta"}],"Data":[{"_id":"languages/zh-CN","data":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"}},{"_id":"languages/ja","data":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}],"Page":[{"title":"categories","date":"2022-06-13T14:09:39.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-06-13 22:09:39\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2023-03-17T02:30:47.745Z","path":"categories/index.html","comments":1,"_id":"cljf4hdsz0000xtujaags97kn","content":"","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":""},{"_content":"/* @font-face\n{\n    font-family: \"LXGWWenKaiScreenR\";\n    font-style: normal;\n    src: local(\"\"),\n        url(\"../fonts/LXGWWenKaiScreenR.woff2\") format(\"woff2\"); \n}\n\n@font-face\n{\n    font-family: \"LXGWWenKaiMono\";\n    font-style: normal;\n    src: local(\"\"),\n        url(\"../fonts/LXGWWenKaiMono-Regular.woff2\") format(\"woff2\"); \n} */\n\n@font-face {\n    font-family: \"JetBrains Mono\";\n    src: url(\"../fonts/JetBrainsMono-Regular.eot\");\n    src: url(\"../fonts/JetBrainsMono-Regular.eot?#iefix\") format(\"embedded-opentype\"),\n        url(\"../fonts/JetBrainsMono-Regular.woff2\") format(\"woff2\"),\n        url(\"../fonts/JetBrainsMono-Regular.woff\") format(\"woff\"),\n        url(\"../fonts/JetBrainsMono-Regular.ttf\") format(\"truetype\");\n    font-weight: 400;\n    font-style: normal;\n}\n\n.hljs{\n    font-family: 'JetBrains Mono', \"Source Code Pro\", Monaco, Menlo, Consolas, \"Courier New\", Courier, monospace !important;\n}\n\ncode{\n    font-family: 'JetBrains Mono', \"Source Code Pro\", Monaco, Menlo, Consolas, \"Courier New\", Courier, monospace !important;\n}","source":"css/fonts.css","raw":"/* @font-face\n{\n    font-family: \"LXGWWenKaiScreenR\";\n    font-style: normal;\n    src: local(\"\"),\n        url(\"../fonts/LXGWWenKaiScreenR.woff2\") format(\"woff2\"); \n}\n\n@font-face\n{\n    font-family: \"LXGWWenKaiMono\";\n    font-style: normal;\n    src: local(\"\"),\n        url(\"../fonts/LXGWWenKaiMono-Regular.woff2\") format(\"woff2\"); \n} */\n\n@font-face {\n    font-family: \"JetBrains Mono\";\n    src: url(\"../fonts/JetBrainsMono-Regular.eot\");\n    src: url(\"../fonts/JetBrainsMono-Regular.eot?#iefix\") format(\"embedded-opentype\"),\n        url(\"../fonts/JetBrainsMono-Regular.woff2\") format(\"woff2\"),\n        url(\"../fonts/JetBrainsMono-Regular.woff\") format(\"woff\"),\n        url(\"../fonts/JetBrainsMono-Regular.ttf\") format(\"truetype\");\n    font-weight: 400;\n    font-style: normal;\n}\n\n.hljs{\n    font-family: 'JetBrains Mono', \"Source Code Pro\", Monaco, Menlo, Consolas, \"Courier New\", Courier, monospace !important;\n}\n\ncode{\n    font-family: 'JetBrains Mono', \"Source Code Pro\", Monaco, Menlo, Consolas, \"Courier New\", Courier, monospace !important;\n}","date":"2023-03-17T02:30:47.745Z","updated":"2023-03-17T02:30:47.745Z","path":"css/fonts.css","layout":"false","title":"","comments":1,"_id":"cljf4hdt20002xtujgl5h281n","content":"/* @font-face\n{\n    font-family: \"LXGWWenKaiScreenR\";\n    font-style: normal;\n    src: local(\"\"),\n        url(\"../fonts/LXGWWenKaiScreenR.woff2\") format(\"woff2\"); \n}\n\n@font-face\n{\n    font-family: \"LXGWWenKaiMono\";\n    font-style: normal;\n    src: local(\"\"),\n        url(\"../fonts/LXGWWenKaiMono-Regular.woff2\") format(\"woff2\"); \n} */\n\n@font-face {\n    font-family: \"JetBrains Mono\";\n    src: url(\"../fonts/JetBrainsMono-Regular.eot\");\n    src: url(\"../fonts/JetBrainsMono-Regular.eot?#iefix\") format(\"embedded-opentype\"),\n        url(\"../fonts/JetBrainsMono-Regular.woff2\") format(\"woff2\"),\n        url(\"../fonts/JetBrainsMono-Regular.woff\") format(\"woff\"),\n        url(\"../fonts/JetBrainsMono-Regular.ttf\") format(\"truetype\");\n    font-weight: 400;\n    font-style: normal;\n}\n\n.hljs{\n    font-family: 'JetBrains Mono', \"Source Code Pro\", Monaco, Menlo, Consolas, \"Courier New\", Courier, monospace !important;\n}\n\ncode{\n    font-family: 'JetBrains Mono', \"Source Code Pro\", Monaco, Menlo, Consolas, \"Courier New\", Courier, monospace !important;\n}","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"/* @font-face\n{\n    font-family: \"LXGWWenKaiScreenR\";\n    font-style: normal;\n    src: local(\"\"),\n        url(\"../fonts/LXGWWenKaiScreenR.woff2\") format(\"woff2\"); \n}\n\n@font-face\n{\n    font-family: \"LXGWWenKaiMono\";\n    font-style: normal;\n    src: local(\"\"),\n        url(\"../fonts/LXGWWenKaiMono-Regular.woff2\") format(\"woff2\"); \n} */\n\n@font-face {\n    font-family: \"JetBrains Mono\";\n    src: url(\"../fonts/JetBrainsMono-Regular.eot\");\n    src: url(\"../fonts/JetBrainsMono-Regular.eot?#iefix\") format(\"embedded-opentype\"),\n        url(\"../fonts/JetBrainsMono-Regular.woff2\") format(\"woff2\"),\n        url(\"../fonts/JetBrainsMono-Regular.woff\") format(\"woff\"),\n        url(\"../fonts/JetBrainsMono-Regular.ttf\") format(\"truetype\");\n    font-weight: 400;\n    font-style: normal;\n}\n\n.hljs{\n    font-family: 'JetBrains Mono', \"Source Code Pro\", Monaco, Menlo, Consolas, \"Courier New\", Courier, monospace !important;\n}\n\ncode{\n    font-family: 'JetBrains Mono', \"Source Code Pro\", Monaco, Menlo, Consolas, \"Courier New\", Courier, monospace !important;\n}"},{"_content":".md-form input[type]:focus:not([readonly]) {\n    border-bottom: 1px solid #4285f4;\n    -webkit-box-shadow: none;\n    box-shadow: none;\n}","source":"css/fix-input-shadow.css","raw":".md-form input[type]:focus:not([readonly]) {\n    border-bottom: 1px solid #4285f4;\n    -webkit-box-shadow: none;\n    box-shadow: none;\n}","date":"2023-03-17T02:30:47.745Z","updated":"2023-03-17T02:30:47.745Z","path":"css/fix-input-shadow.css","layout":"false","title":"","comments":1,"_id":"cljf4hdt30006xtuj7k3idpfv","content":".md-form input[type]:focus:not([readonly]) {\n    border-bottom: 1px solid #4285f4;\n    -webkit-box-shadow: none;\n    box-shadow: none;\n}","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":".md-form input[type]:focus:not([readonly]) {\n    border-bottom: 1px solid #4285f4;\n    -webkit-box-shadow: none;\n    box-shadow: none;\n}"},{"title":"about","date":"2022-03-17T07:10:42.000Z","type":"page","layout":"about","_content":"\n- 资源来源\n    - 代码字体：[JetBrains Mono](https://www.jetbrains.com/lp/mono/)\n    - 首页图：[JoJo manga wallpaper](https://www.google.com/search?q=jojo+manga+wallpaper)\n    - 帖头图：[Anime eyes black and white](https://www.google.com/search?q=anime+eyes+black+and+white)","source":"about/index.md","raw":"---\ntitle: about\ndate: 2022-03-17 15:10:42\ntype: \"page\"\nlayout: \"about\"\n---\n\n- 资源来源\n    - 代码字体：[JetBrains Mono](https://www.jetbrains.com/lp/mono/)\n    - 首页图：[JoJo manga wallpaper](https://www.google.com/search?q=jojo+manga+wallpaper)\n    - 帖头图：[Anime eyes black and white](https://www.google.com/search?q=anime+eyes+black+and+white)","updated":"2023-03-17T02:30:47.745Z","path":"about/index.html","comments":1,"_id":"cljf4hdt40008xtujdoz762aj","content":"<ul>\n<li>资源来源<ul>\n<li>代码字体：<a href=\"https://www.jetbrains.com/lp/mono/\">JetBrains Mono</a></li>\n<li>首页图：<a href=\"https://www.google.com/search?q=jojo+manga+wallpaper\">JoJo manga wallpaper</a></li>\n<li>帖头图：<a href=\"https://www.google.com/search?q=anime+eyes+black+and+white\">Anime eyes black and white</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<ul>\n<li>资源来源<ul>\n<li>代码字体：<a href=\"https://www.jetbrains.com/lp/mono/\">JetBrains Mono</a></li>\n<li>首页图：<a href=\"https://www.google.com/search?q=jojo+manga+wallpaper\">JoJo manga wallpaper</a></li>\n<li>帖头图：<a href=\"https://www.google.com/search?q=anime+eyes+black+and+white\">Anime eyes black and white</a></li>\n</ul>\n</li>\n</ul>\n"},{"title":"search","date":"2022-06-14T03:29:59.000Z","type":"page","layout":"search","_content":"","source":"search/index.md","raw":"---\ntitle: search\ndate: 2022-06-14 11:29:59\ntype: \"page\"\nlayout: \"search\"\n---\n","updated":"2023-03-17T02:30:47.786Z","path":"search/index.html","comments":1,"_id":"cljf4hdt4000axtuj8ukq9vwx","content":"","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":""},{"title":"tags","date":"2022-06-13T15:06:11.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-06-13 23:06:11\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2023-03-17T02:30:47.786Z","path":"tags/index.html","comments":1,"_id":"cljf4hdt5000extuj8tu3bthg","content":"","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":""}],"Post":[{"title":"Java中的异步和并发手段","date":"2022-07-10T13:06:58.000Z","_content":"## Future\n基本的异步模型，主要方法有`get()`、`get(time,timeUnit)`、`isDone()`等。\n\n## CompletableFuture\n支持回调，更好的支持多个异步任务的流程控制，比如先后顺序，成功或失败之后的流转。\n\n### 假如有A、B两个任务，B需要在A之后执行：\n```java\nCompletableFuture<String> aQuery = CompletableFuture.supplyAsync(() -> {\n    return queryA();\n}).exceptionally(e -> {\n    System.out.println(\"failed to execute aQuery\");\n    e.printStackTrace();\n    return null;\n});\n//aQuery成功后继续执行bQuery\nCompletableFuture<Double> bQuery = cfQuery.thenApplyAsync(aResult -> {\n    if(aResult == null){\n        return null;\n    }\n    return queryB(aResult);\n}).exceptionally(e -> {\n    System.out.println(\"failed to execute bQuery\");\n    e.printStackTrace();\n    return null;\n});\n// bQuery成功后打印结果\nbQuery.thenAccept(System.out::println);\n```\n\n如果不依赖CompletableFuture的话：\n```java\nFuture<String> aFuture = asyncQueryA();\nString aResult = null;\ntry{\n    aResult = aFuture.get();\n}catch(Exception e){\n    System.out.println(\"failed to execute asyncQueryA\");\n    e.printStackTrace();\n}\n\nString bResult = null;\nif(aResult != null){\n    Future<String> bFuture = asyncQueryB(aResult);\n    try{\n        bResult = bFuture.get();\n    }catch(Exception e){\n        System.out.println(\"failed to execute asyncQueryB\");\n        e.printStackTrace();\n    }\n}\nSystem.out.println(bResult);\n```\n\n### 假如有A、B两个任务，A或B任意一个任务执行完成就结束：\n```java\n//aQuery\nCompletableFuture<String> aQuery = CompletableFuture.supplyAsync(() -> {\n    return queryA();\n}).exceptionally(e -> {\n    System.out.println(\"failed to execute aQuery\");\n    e.printStackTrace();\n    return null;\n});\n//bQuery\nCompletableFuture<Double> bQuery = cfQuery.thenApplyAsync(() -> {\n    return queryB();\n}).exceptionally(e -> {\n    System.out.println(\"failed to execute bQuery\");\n    e.printStackTrace();\n    return null;\n});\n\nCompletableFuture<Object> aOrBQuery = CompletableFuture.anyOf(aQuery, bQuery);\n\n// 任意一个任务成功后打印结果\naOrBQuery.thenAccept(System.out::println);\n```\n\n这种情况如果不依赖CompletableFuture的话……：\n```java\nFuture<String> aFuture = asyncQueryA();\nFuture<String> bFuture = asyncQueryB();\nint failedTask = 0;\nString result = null;\nwhile(true){\n    if(aFuture.isDone()){\n        try{\n            result = aFuture.get();\n            break;\n        }catch(Exception e){\n            System.out.println(\"failed to execute asyncQueryA\");\n            e.printStackTrace();\n            failedTask++;\n        }\n    } else if(bFuture.isDone()){\n        try{\n            result = bFuture.get();\n            break;\n        }catch(Exception e){\n            System.out.println(\"failed to execute asyncQueryB\");\n            e.printStackTrace();\n            failedTask++;\n        }\n    }\n    // 不写==2, 防止以后加任务cdef等等时忘记修改这个判断值引起死循环\n    if(failedTask > 1) break;\n}\n```\n### 实现细节和注意点\n1. `thenAccept`或者`exceptionally`这种方法是在调用线程中执行的，会阻塞调用线程，`supplyAsync`或者`thenApplyAsync`这种名字里带Async的会被提交到线程池执行。\n2. 如果不指定线程池的话，默认使用的是`ForkJoinPool`的`CommonPool`线程池（默认的coreSize和poolSize是8还是几来着，反正很少），可能会和其他的任务共享线程池，也许会互相抢占线程资源。\n3. `CompletionStage`定义流程控制的能力，各种流程组合的实际动作都基于`CompletableFuture.Completion`实现的类\n\n## Fiber/Coroutines\n[Project Loom Preview](/2022/07/14/project-loom-preview/index.html)","source":"_posts/asynchronization.md","raw":"---\ntitle: Java中的异步和并发手段\ndate: 2022-07-10 21:06:58\ncategories:\n    - 基础姿势\n    - 并发编程\ntags:\n    - Java\n    - asynchronization\n    - concurrency\n---\n## Future\n基本的异步模型，主要方法有`get()`、`get(time,timeUnit)`、`isDone()`等。\n\n## CompletableFuture\n支持回调，更好的支持多个异步任务的流程控制，比如先后顺序，成功或失败之后的流转。\n\n### 假如有A、B两个任务，B需要在A之后执行：\n```java\nCompletableFuture<String> aQuery = CompletableFuture.supplyAsync(() -> {\n    return queryA();\n}).exceptionally(e -> {\n    System.out.println(\"failed to execute aQuery\");\n    e.printStackTrace();\n    return null;\n});\n//aQuery成功后继续执行bQuery\nCompletableFuture<Double> bQuery = cfQuery.thenApplyAsync(aResult -> {\n    if(aResult == null){\n        return null;\n    }\n    return queryB(aResult);\n}).exceptionally(e -> {\n    System.out.println(\"failed to execute bQuery\");\n    e.printStackTrace();\n    return null;\n});\n// bQuery成功后打印结果\nbQuery.thenAccept(System.out::println);\n```\n\n如果不依赖CompletableFuture的话：\n```java\nFuture<String> aFuture = asyncQueryA();\nString aResult = null;\ntry{\n    aResult = aFuture.get();\n}catch(Exception e){\n    System.out.println(\"failed to execute asyncQueryA\");\n    e.printStackTrace();\n}\n\nString bResult = null;\nif(aResult != null){\n    Future<String> bFuture = asyncQueryB(aResult);\n    try{\n        bResult = bFuture.get();\n    }catch(Exception e){\n        System.out.println(\"failed to execute asyncQueryB\");\n        e.printStackTrace();\n    }\n}\nSystem.out.println(bResult);\n```\n\n### 假如有A、B两个任务，A或B任意一个任务执行完成就结束：\n```java\n//aQuery\nCompletableFuture<String> aQuery = CompletableFuture.supplyAsync(() -> {\n    return queryA();\n}).exceptionally(e -> {\n    System.out.println(\"failed to execute aQuery\");\n    e.printStackTrace();\n    return null;\n});\n//bQuery\nCompletableFuture<Double> bQuery = cfQuery.thenApplyAsync(() -> {\n    return queryB();\n}).exceptionally(e -> {\n    System.out.println(\"failed to execute bQuery\");\n    e.printStackTrace();\n    return null;\n});\n\nCompletableFuture<Object> aOrBQuery = CompletableFuture.anyOf(aQuery, bQuery);\n\n// 任意一个任务成功后打印结果\naOrBQuery.thenAccept(System.out::println);\n```\n\n这种情况如果不依赖CompletableFuture的话……：\n```java\nFuture<String> aFuture = asyncQueryA();\nFuture<String> bFuture = asyncQueryB();\nint failedTask = 0;\nString result = null;\nwhile(true){\n    if(aFuture.isDone()){\n        try{\n            result = aFuture.get();\n            break;\n        }catch(Exception e){\n            System.out.println(\"failed to execute asyncQueryA\");\n            e.printStackTrace();\n            failedTask++;\n        }\n    } else if(bFuture.isDone()){\n        try{\n            result = bFuture.get();\n            break;\n        }catch(Exception e){\n            System.out.println(\"failed to execute asyncQueryB\");\n            e.printStackTrace();\n            failedTask++;\n        }\n    }\n    // 不写==2, 防止以后加任务cdef等等时忘记修改这个判断值引起死循环\n    if(failedTask > 1) break;\n}\n```\n### 实现细节和注意点\n1. `thenAccept`或者`exceptionally`这种方法是在调用线程中执行的，会阻塞调用线程，`supplyAsync`或者`thenApplyAsync`这种名字里带Async的会被提交到线程池执行。\n2. 如果不指定线程池的话，默认使用的是`ForkJoinPool`的`CommonPool`线程池（默认的coreSize和poolSize是8还是几来着，反正很少），可能会和其他的任务共享线程池，也许会互相抢占线程资源。\n3. `CompletionStage`定义流程控制的能力，各种流程组合的实际动作都基于`CompletableFuture.Completion`实现的类\n\n## Fiber/Coroutines\n[Project Loom Preview](/2022/07/14/project-loom-preview/index.html)","slug":"asynchronization","published":1,"updated":"2023-03-17T02:30:47.683Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdt00001xtuj1mbc4ge5","content":"<h2 id=\"Future\"><a href=\"#Future\" class=\"headerlink\" title=\"Future\"></a>Future</h2><p>基本的异步模型，主要方法有<code>get()</code>、<code>get(time,timeUnit)</code>、<code>isDone()</code>等。</p>\n<h2 id=\"CompletableFuture\"><a href=\"#CompletableFuture\" class=\"headerlink\" title=\"CompletableFuture\"></a>CompletableFuture</h2><p>支持回调，更好的支持多个异步任务的流程控制，比如先后顺序，成功或失败之后的流转。</p>\n<h3 id=\"假如有A、B两个任务，B需要在A之后执行：\"><a href=\"#假如有A、B两个任务，B需要在A之后执行：\" class=\"headerlink\" title=\"假如有A、B两个任务，B需要在A之后执行：\"></a>假如有A、B两个任务，B需要在A之后执行：</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">CompletableFuture</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> aQuery <span class=\"token operator\">=</span> <span class=\"token class-name\">CompletableFuture</span><span class=\"token punctuation\">.</span><span class=\"token function\">supplyAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">queryA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to execute aQuery\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//aQuery成功后继续执行bQuery</span>\n<span class=\"token class-name\">CompletableFuture</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Double</span><span class=\"token punctuation\">></span></span> bQuery <span class=\"token operator\">=</span> cfQuery<span class=\"token punctuation\">.</span><span class=\"token function\">thenApplyAsync</span><span class=\"token punctuation\">(</span>aResult <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>aResult <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">queryB</span><span class=\"token punctuation\">(</span>aResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to execute bQuery\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// bQuery成功后打印结果</span>\nbQuery<span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果不依赖CompletableFuture的话：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> aFuture <span class=\"token operator\">=</span> <span class=\"token function\">asyncQueryA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> aResult <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span>\n    aResult <span class=\"token operator\">=</span> aFuture<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to execute asyncQueryA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token class-name\">String</span> bResult <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>aResult <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> bFuture <span class=\"token operator\">=</span> <span class=\"token function\">asyncQueryB</span><span class=\"token punctuation\">(</span>aResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span>\n        bResult <span class=\"token operator\">=</span> bFuture<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to execute asyncQueryB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"假如有A、B两个任务，A或B任意一个任务执行完成就结束：\"><a href=\"#假如有A、B两个任务，A或B任意一个任务执行完成就结束：\" class=\"headerlink\" title=\"假如有A、B两个任务，A或B任意一个任务执行完成就结束：\"></a>假如有A、B两个任务，A或B任意一个任务执行完成就结束：</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//aQuery</span>\n<span class=\"token class-name\">CompletableFuture</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> aQuery <span class=\"token operator\">=</span> <span class=\"token class-name\">CompletableFuture</span><span class=\"token punctuation\">.</span><span class=\"token function\">supplyAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">queryA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to execute aQuery\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//bQuery</span>\n<span class=\"token class-name\">CompletableFuture</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Double</span><span class=\"token punctuation\">></span></span> bQuery <span class=\"token operator\">=</span> cfQuery<span class=\"token punctuation\">.</span><span class=\"token function\">thenApplyAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">queryB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to execute bQuery\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">CompletableFuture</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> aOrBQuery <span class=\"token operator\">=</span> <span class=\"token class-name\">CompletableFuture</span><span class=\"token punctuation\">.</span><span class=\"token function\">anyOf</span><span class=\"token punctuation\">(</span>aQuery<span class=\"token punctuation\">,</span> bQuery<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 任意一个任务成功后打印结果</span>\naOrBQuery<span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这种情况如果不依赖CompletableFuture的话……：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> aFuture <span class=\"token operator\">=</span> <span class=\"token function\">asyncQueryA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> bFuture <span class=\"token operator\">=</span> <span class=\"token function\">asyncQueryB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> failedTask <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>aFuture<span class=\"token punctuation\">.</span><span class=\"token function\">isDone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span>\n            result <span class=\"token operator\">=</span> aFuture<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to execute asyncQueryA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            failedTask<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bFuture<span class=\"token punctuation\">.</span><span class=\"token function\">isDone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span>\n            result <span class=\"token operator\">=</span> bFuture<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to execute asyncQueryB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            failedTask<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 不写==2, 防止以后加任务cdef等等时忘记修改这个判断值引起死循环</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>failedTask <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"实现细节和注意点\"><a href=\"#实现细节和注意点\" class=\"headerlink\" title=\"实现细节和注意点\"></a>实现细节和注意点</h3><ol>\n<li><code>thenAccept</code>或者<code>exceptionally</code>这种方法是在调用线程中执行的，会阻塞调用线程，<code>supplyAsync</code>或者<code>thenApplyAsync</code>这种名字里带Async的会被提交到线程池执行。</li>\n<li>如果不指定线程池的话，默认使用的是<code>ForkJoinPool</code>的<code>CommonPool</code>线程池（默认的coreSize和poolSize是8还是几来着，反正很少），可能会和其他的任务共享线程池，也许会互相抢占线程资源。</li>\n<li><code>CompletionStage</code>定义流程控制的能力，各种流程组合的实际动作都基于<code>CompletableFuture.Completion</code>实现的类</li>\n</ol>\n<h2 id=\"Fiber-x2F-Coroutines\"><a href=\"#Fiber-x2F-Coroutines\" class=\"headerlink\" title=\"Fiber&#x2F;Coroutines\"></a>Fiber&#x2F;Coroutines</h2><p><a href=\"/2022/07/14/project-loom-preview/index.html\">Project Loom Preview</a></p>\n","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<h2 id=\"Future\"><a href=\"#Future\" class=\"headerlink\" title=\"Future\"></a>Future</h2><p>基本的异步模型，主要方法有<code>get()</code>、<code>get(time,timeUnit)</code>、<code>isDone()</code>等。</p>\n<h2 id=\"CompletableFuture\"><a href=\"#CompletableFuture\" class=\"headerlink\" title=\"CompletableFuture\"></a>CompletableFuture</h2><p>支持回调，更好的支持多个异步任务的流程控制，比如先后顺序，成功或失败之后的流转。</p>\n<h3 id=\"假如有A、B两个任务，B需要在A之后执行：\"><a href=\"#假如有A、B两个任务，B需要在A之后执行：\" class=\"headerlink\" title=\"假如有A、B两个任务，B需要在A之后执行：\"></a>假如有A、B两个任务，B需要在A之后执行：</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">CompletableFuture</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> aQuery <span class=\"token operator\">=</span> <span class=\"token class-name\">CompletableFuture</span><span class=\"token punctuation\">.</span><span class=\"token function\">supplyAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">queryA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to execute aQuery\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//aQuery成功后继续执行bQuery</span>\n<span class=\"token class-name\">CompletableFuture</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Double</span><span class=\"token punctuation\">></span></span> bQuery <span class=\"token operator\">=</span> cfQuery<span class=\"token punctuation\">.</span><span class=\"token function\">thenApplyAsync</span><span class=\"token punctuation\">(</span>aResult <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>aResult <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">queryB</span><span class=\"token punctuation\">(</span>aResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to execute bQuery\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// bQuery成功后打印结果</span>\nbQuery<span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果不依赖CompletableFuture的话：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> aFuture <span class=\"token operator\">=</span> <span class=\"token function\">asyncQueryA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> aResult <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span>\n    aResult <span class=\"token operator\">=</span> aFuture<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to execute asyncQueryA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token class-name\">String</span> bResult <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>aResult <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> bFuture <span class=\"token operator\">=</span> <span class=\"token function\">asyncQueryB</span><span class=\"token punctuation\">(</span>aResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span>\n        bResult <span class=\"token operator\">=</span> bFuture<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to execute asyncQueryB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"假如有A、B两个任务，A或B任意一个任务执行完成就结束：\"><a href=\"#假如有A、B两个任务，A或B任意一个任务执行完成就结束：\" class=\"headerlink\" title=\"假如有A、B两个任务，A或B任意一个任务执行完成就结束：\"></a>假如有A、B两个任务，A或B任意一个任务执行完成就结束：</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//aQuery</span>\n<span class=\"token class-name\">CompletableFuture</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> aQuery <span class=\"token operator\">=</span> <span class=\"token class-name\">CompletableFuture</span><span class=\"token punctuation\">.</span><span class=\"token function\">supplyAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">queryA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to execute aQuery\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//bQuery</span>\n<span class=\"token class-name\">CompletableFuture</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Double</span><span class=\"token punctuation\">></span></span> bQuery <span class=\"token operator\">=</span> cfQuery<span class=\"token punctuation\">.</span><span class=\"token function\">thenApplyAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">queryB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to execute bQuery\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">CompletableFuture</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> aOrBQuery <span class=\"token operator\">=</span> <span class=\"token class-name\">CompletableFuture</span><span class=\"token punctuation\">.</span><span class=\"token function\">anyOf</span><span class=\"token punctuation\">(</span>aQuery<span class=\"token punctuation\">,</span> bQuery<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 任意一个任务成功后打印结果</span>\naOrBQuery<span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这种情况如果不依赖CompletableFuture的话……：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> aFuture <span class=\"token operator\">=</span> <span class=\"token function\">asyncQueryA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> bFuture <span class=\"token operator\">=</span> <span class=\"token function\">asyncQueryB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> failedTask <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>aFuture<span class=\"token punctuation\">.</span><span class=\"token function\">isDone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span>\n            result <span class=\"token operator\">=</span> aFuture<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to execute asyncQueryA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            failedTask<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bFuture<span class=\"token punctuation\">.</span><span class=\"token function\">isDone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span>\n            result <span class=\"token operator\">=</span> bFuture<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to execute asyncQueryB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            failedTask<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 不写==2, 防止以后加任务cdef等等时忘记修改这个判断值引起死循环</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>failedTask <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"实现细节和注意点\"><a href=\"#实现细节和注意点\" class=\"headerlink\" title=\"实现细节和注意点\"></a>实现细节和注意点</h3><ol>\n<li><code>thenAccept</code>或者<code>exceptionally</code>这种方法是在调用线程中执行的，会阻塞调用线程，<code>supplyAsync</code>或者<code>thenApplyAsync</code>这种名字里带Async的会被提交到线程池执行。</li>\n<li>如果不指定线程池的话，默认使用的是<code>ForkJoinPool</code>的<code>CommonPool</code>线程池（默认的coreSize和poolSize是8还是几来着，反正很少），可能会和其他的任务共享线程池，也许会互相抢占线程资源。</li>\n<li><code>CompletionStage</code>定义流程控制的能力，各种流程组合的实际动作都基于<code>CompletableFuture.Completion</code>实现的类</li>\n</ol>\n<h2 id=\"Fiber-x2F-Coroutines\"><a href=\"#Fiber-x2F-Coroutines\" class=\"headerlink\" title=\"Fiber&#x2F;Coroutines\"></a>Fiber&#x2F;Coroutines</h2><p><a href=\"/2022/07/14/project-loom-preview/index.html\">Project Loom Preview</a></p>\n"},{"title":"Arch Linux 安装笔记","date":"2022-04-19T03:23:08.000Z","_content":"> https://wiki.archlinux.org/\n\n## 基本系统安装\n### 前置准备\n- 检查网络\n  ```bash \n  ip link\n  ```\n- 更新系统时间\n  ```bash\n  timedatectl set-ntp true\n  ```\n### 准备磁盘\n- 分区\n  - 查看当前磁盘信息\n  ```bash\n  fdisk -l\n  ```\n  - 进入分区\n  ```bash\n  fdisk /dev/the_disk_to_be_partitioned（要被分区的磁盘）\n  ```\n  uefi参考：\n  | 挂载点 | 分区 | 分区类型 | 大小 |\n  | -- | -- | -- | -- |\n  | /mnt/boot/EFI| /dev/efi_system_partition | EFI系统分区 | 300M |\n  | \\[swap\\] **移动设备建议不要**| /dev/swap_partition/ |Linux swap (交换空间) | > 512M (2G if physical ram > 4G) |\n  | /mnt| /dev/root_partition | Linux x86-64 根目录 (/) | 剩余空间 |\n\n  - *移动设备的情况下:*\n    | 挂载点 | 分区 | 分区类型 | 大小 |\n    | -- | -- | -- | -- |\n    | *none* | *none* | BIOS启动分区 | 1M |\n    | /mnt/boot/EFI| /dev/efi_system_partition | EFI系统分区 | 300M |\n    | /mnt| /dev/root_partition | Linux x86-64 根目录 (/) | 剩余空间 |\n\n  - 格式化分区\n  ```bash\n   mkfs.ext4 /dev/root_partition（根分区）\n   # 移动设备关闭日志 mkfs.ext4 -O \"^has_journal\" /dev/root_partition（根分区）\n   mkswap /dev/swap_partition（交换空间分区）\n   mkfs.fat -F 32 /dev/efi_system_partition\n  ```\n  - 挂载分区&启用交换空间\n  ```bash\n  mount /dev/root_partition（根分区） /mnt\n  mount /dev/efi_system_partition /mnt/boot/efi\n  swapon /dev/swap_partition（交换空间分区）\n  ```\n### 安装系统\n  - 设置cn源\n    \n    第一种方法\n      ```bash\n      #!/bin/bash\n      curl 'https://archlinux.org/mirrorlist/?country=CN&prototcol=http&protocol=https&ip_version=4' > /etc/pacman.d/mirrorlist && \\\n      echo /etc/pacman.d/mirrorlist && \\\n      sudo vim /etc/pacman.d/mirrorlist && \\\n      echo 'pacman mirror list updated'\n      ```\n      然后将`/etc/pacman.d/mirrorlist`中注释去掉\n        \n    第二种方法\n\n    在`/etc/pacman.d/mirrorlist`中搜索CN，放到最前面，推荐aliyun的源\n\n  - 安装系统&软件包\n  ```bash\n  pacstrap /mnt base base-devel linux linux-firmware vim vi sudo git\n  # 移动设备 可以使用基于BFQ的io调度内核linux-zen，把linux换成linux-zen\n  ```\n  *参考：[BFQ](https://www.kernel.org/doc/html/latest/block/bfq-iosched.html)*\n\n## 系统配置\n### 系统引导\n  - 配置fstab\n  ```bash\n  genfstab -U /mnt >> /mnt/etc/fstab\n  ```\n  - 安装grub\n  ```bash\n  pacman -S efibootmgr grub\n\n  # uefi\n  grub-install --target=x86_64-efi --efi-directory={挂载点,如/mnt/boot/EFI} --bootloader-id=GRUB\n\n  # bios(非GPT分区无需其他空间，但GPT分区需要有一块1M的BIOS boot分区)\n  grub-install --target=i386-pc /dev/sdX\n  ```\n  *移动设备的情况下*\n\n  假设分区顺序是：\n    - BIOS\n    - EFI\n    - root\n  要先在这块设备上写入引导信息，运行`gdisk /dev/sdX`\n\n  ```bash\n  # gdisk /dev/sdX\n\n  Command (? for help): r\n  Recovery/transformation command (? for help): h\n\n  WARNING! Hybrid MBRs are flaky and dangerous! If you decide not to use one,\n  just hit the Enter key at the below prompt and your MBR partition table will\n  be untouched.\n\n  Type from one to three GPT partition numbers, separated by spaces, to be added to the hybrid MBR, in sequence: 1 2 3\n  Place EFI GPT (0xEE) partition first in MBR (good for GRUB)? (Y/N): N\n\n  Creating entry for GPT partition #1 (MBR partition #1)\n  Enter an MBR hex code (default EF): \n  Set the bootable flag? (Y/N): N\n\n  Creating entry for GPT partition #2 (MBR partition #2)\n  Enter an MBR hex code (default EF): \n  Set the bootable flag? (Y/N): N\n\n  Creating entry for GPT partition #3 (MBR partition #3)\n  Enter an MBR hex code (default 83): \n  Set the bootable flag? (Y/N): Y\n\n  Recovery/transformation command (? for help): x\n  Expert command (? for help): h\n  Expert command (? for help): w\n\n  Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING\n  PARTITIONS!!\n\n  Do you want to proceed? (Y/N): Y\n  ```\n  \n  > **如果不需要兼容，不用做这一步，混合分区会在设备上存在两个分区表，系统识别这个设备分区的时候具体的行为完全依赖于系统的实现，非常不稳定**\n\n  > **注意：写完hybrid之后，默认的windows中就只认MBR分区，假设分区按上面的例子，且还有一个4号分区，那么由于MBR的限制**\n  > **在windows中第四个分区是无法正确识别文件系统的，如果要使用第四个分区且要通过MBR引导，那么这里就要在MBR写入134分区**\n  > **ESP分区可以不用写到MBR里**\n\n\n  ```bash\n  pacman -S efibootmgr grub amd-ucode intel-ucode\n\n  # uefi + MBR(BIOS)混合启动\n  grub-install --target=x86_64-efi --efi-directory={挂载点,如/mnt/boot/EFI} --removable\n   --bootloader-id=GRUB --boot-directory={root挂载点,如/mnt}/boot\n\n  grub-install --target=i386-pc --recheck --boot-directory=/DATA_MOUNTPOINT/boot /dev/sdX #注意这里是整个设备\n\n  # 作为保险\n  grub-install --target=i386-pc --recheck --boot-directory=/DATA_MOUNTPOINT/boot /dev/{root的那个分区}\n  ```\n  - 切换到已经安装的系统\n  ```bash\n  arch-chroot /mnt\n  ```\n\n  - 配置grub.cfg\n  ```bash\n  grub-mkconfig -o /boot/grub/grub.cfg\n  ```\n### 系统初始化设置\n\n  - 设置时区\n  ```bash\n  ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n  hwclock --systohc\n  ```\n  - 本地化\n  ```bash\n  locale-gen\n  ```\n\n  -- 移动设备最小化磁盘访问,把日志放到内存\n  修改`/etc/systemd/journald.conf.d/usbstick.conf`\n  写入\n  ```bash\n  [Journal]\n  Storage=volatile\n  RuntimeMaxUse=30M\n  ```\n\n  - initramfs\n  如果是移动设备，将`/etc/mkinitcpio.conf`中`HOOKS`里面的`block`和`keyboard`放到`autodetect`前面，然后\n  ```bash\n  mkinitcpio -P\n  ```\n\n  创建`/etc/locale.conf`,设置`LANG=en_US.UTF-8`\n  - hostname\n  创建`/etc/hostname`,写入主机名\n  - root密码\n  ```bash\n  passwd\n  ```\n  - hosts\n  向`/etc/hosts`写入\n  ```bash\n  127.0.0.1 localhost\n  ::1 localhost\n  127.0.0.1 {hostname}\n  ```\n\n  - 安装网络工具\n  \n  *networkmanager已经不使用dhcpcd, 因此需要安装dhclient\n  ```bash\n  pacman -S iw wpa_supplicant dialog dhcpcd dhclient netctl networkmanager network-manager-applet gnome-keyring\n  # 设置网络开机启动\n  systemctl enable NetworkManager.service\n  ```\n  - 新增用户\n  ```bash\n  useradd -m -G users,audio,lp,optical,storage,video,wheel,power -s /bin/bash 普通用户名\n  passwd 普通用户名\n  ```\n  运行`visudo`, 去掉`%wheel ALL=(ALL) ALL`注释\n\n**到这里基本已经完成最小系统的配置和安装，在继续之前，改启动项然后reboot**\n\n## DE/WM/DM\n\n  - 安装xorg\n  ```bash\n  sudo pacman -S xorg xorg-xinit\n  ## 移动设备要安装\n  # xf86-input-synaptics 支持触控板\n  # xf86-video-vesa, xf86-video-ati, xf86-video-intel, xf86-video-amdgpu, xf86-video-nouveau and xf86-video-fbdev. 大多数的开源显卡驱动\n  #  libeatmydata  可以禁用fsync，比如对于firefox：eatmydata firefox\n  ```\n  - 安装字体\n  ```bash\n  sudo pacman -S terminus-font \n  ```\n  - 安装DE\n    - Mate\n      - 安装mate\n      ```bash\n      sudo pacman -S mate mate-extra\n      ```\n      - 配置xinitrc\n      ```bash\n      cp /etc/X11/xinit/xinitrc ~/.xinitrc\n      ```\n      把最后的启动换成`exec mate-session`\n    - XFCE\n      - 安装xfce\n      ```bash\n      sudo pacman -S xfce4 xfce4-goodies\n      ```\n      - 配置xinitrc\n      ```bash\n      cp /etc/X11/xinit/xinitrc ~/.xinitrc\n      ```\n      把最后的启动换成`exec startxfce4`\n\n  - 仅安装WM\n    \n    *(略)*\n    \n  - 安装DM\n    - lightdm\n    ```bash\n      sudo pacman -S lightdm-gtk-greeter\n    ```\n\n## 其他\n### 支持hyper-v增强模式\n  ```bash\n  git clone https://www.github.com/Microsoft/linux-vm-tools\n  cd linux-vm-tools/arch\n  # 要先开代理\n  ./make...\n  ./install...\n  ```\n然后记得在win中用管理员设置\n```cmd\nSet-VM -VMName <your_vm_name>  -EnhancedSessionTransportType HvSocket\n```\n\n  **如果无法通过增强模式连接**\n\n  [arch wiki [loginctl or systemctl --user not working]](https://wiki.archlinux.org/title/Xrdp#loginctl_or_systemctl_--user_not_working)\n  \n  Try commenting out all the references to `systemd-home` in `/etc/pam.d/system-auth`, see [github issue](https://github.com/neutrinolabs/xrdp/issues/1684)\n\n### alias\n```bash\nalias s='sudo'\nalias ls='ls --color=auto'\nalias la='ls -a --color=auto'\nalias ll='ls -l --color=auto'\nalias lla='ls -l -a --color=auto'\nalias pac='pacman -S'\nalias pacyu='pacman -Syu'\nalias spac='sudo pacman -S'\nalias spacyu='sudo pacman -Syu'\nalias v='vim'\nalias sv='sudo vim'\n\n```\n### rsync备份\n- 安装rsync\n```bash\nsudo pacman -S rsync\n```\n- backup.sh\n```bash\n#!/bin/bash\necho '==> start to backup... type device:' && \\\n\tread device && \\\n\techo '==> type mount dir:' && \\\n\tread mount_dir && \\\n\techo '==> umount $device...'; \\\n\tumount $device;\\\n\techo '==> umount /mnt/$mount_dir...'; \\\n\tumount /mnt/$mount_dir; \n\techo '==> remove /mnt/$mount_dir...'; \\\n\trm -rf /mnt/$mount_dir && \\\n\techo '==> create directory /mnt/$mount_dir...'; \\\n\tmkdir /mnt/$mount_dir; \\\n\techo '==> mount $device to /mnt/$mount_dir...'; \\\n\tmount $device /mnt/$mount_dir; \\\n\techo '==> create direcotry /mnt/$mount_dir/system_bakcup...'; \\\n\tmkdir /mnt/$mount_dir/system_backup;\n\techo '==> start to sync files to /mnt/$mount_dir/system_backup...'; \\\n\trsync --archive --one-file-system --hard-links \\\n\t--acls --xattrs --sparse \\\n\t--human-readable --numeric-ids --delete --delete-excluded \\\n\t--itemize-changes --verbose --progress \\\n\t--exclude='*~' \\\n\t--exclude='$device' \\\n\t--exclude='/mnt' \\\n\t--exclude='/dev' \\\n\t--exclude='/var/tmp' \\\n\t--exclude='/tmp' \\\n\t/ /mnt/$mount_dir/system_backup && \\\necho '==> finished.'\n```\n\n### 中文及字体设置\n- 语言配置\n去掉`/etc/locale.gen`中的`zh_CN.UTF-8 UTF-8`和`en_US.UTF-8 UTF-8`的注释\n\n根据需要在`~/.xinitrc`或者`~/.bashrc`配置\n\n**在`~/.xinitrc`中配置要注意在`exec xxx`之前**\n```bash\nexport LANG=zh_CN.UTF-8\nexport LANGUAGE=zh_CN:en_US\n```\n- 字体配置\n```bash\nsudo pacman -S wqy-bitmapfont wqy-microhei noto-fonts noto-fonts-emoji\n```\n设置`~/.config/fontconfig/fonts.conf`\n```xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>\n<fontconfig>\n\n  <!-- 显示器使用的像素排列方式 -->\n  <match target=\"font\">\n    <edit mode=\"assign\" name=\"rgba\">\n      <const>rgb</const>\n    </edit>\n  </match>\n\n  <!-- 字体微调的程度, 可选 hintnone, hintslight (默认), hintmedium, hintfull. -->\n  <!-- 更高的 hinting 等级可使字体更锐利，同时也会损失更多的细节 -->\n  <!-- 如果显示器的 DPI 高得不像话 (>=300), 可关闭 hinting, 字体会自然对齐像素 -->\n  <match target=\"font\">\n    <edit mode=\"assign\" name=\"hintstyle\">\n      <const>hintslight</const>\n    </edit>\n  </match>\n\n  <!-- 抗锯齿. 除非屏幕DPI奇高否则建议开启 -->\n  <match target=\"font\">\n    <edit mode=\"assign\" name=\"antialias\">\n      <bool>true</bool>\n    </edit>\n  </match>\n\n\n<!-- 全局默认字体　-->\n  <match>\n    <edit mode=\"prepend\" name=\"family\">\n      <string>Terminus</string>\n    </edit>\n  </match>\n\n<!-- 全局默认英文字体 -->\n  <match>\n    <test compare=\"contains\" name=\"lang\">\n      <string>en</string>\n    </test>\n    <edit mode=\"prepend\" name=\"family\">\n      <string>Terminus</string>\n    </edit>\n  </match>\n\n<!-- 全局默认中文字体 -->\n  <match>\n    <test compare=\"contains\" name=\"lang\">\n      <string>zh</string>\n    </test>\n    <edit mode=\"prepend\" name=\"family\">\n      <string>WenQuanYi WenQuanYi Bitmap Song</string>\n    </edit>\n  </match>\n\n<!-- 默认无衬线字体 -->\n  <match target=\"pattern\">\n    <test qual=\"any\" name=\"family\">\n      <string>sans-serif</string></test>\n    <edit name=\"family\" mode=\"prepend\" binding=\"same\">\n      <string>Terminus</string>\n    </edit>\n  </match>\n\n<!-- 默认衬线字体 -->\n  <match target=\"pattern\">\n    <test qual=\"any\" name=\"family\">\n      <string>serif</string>\n    </test>\n    <edit name=\"family\" mode=\"prepend\" binding=\"same\">\n      <string>Terminus</string>\n    </edit>\n  </match>\n\n<!-- 默认等宽字体 -->\n  <match target=\"pattern\">\n    <test qual=\"any\" name=\"family\">\n      <string>monospace</string>\n    </test>\n    <edit name=\"family\" mode=\"prepend\" binding=\"same\">\n      <string>Terminus</string>\n    </edit>\n  </match>\n\n  <!-- 字体替换 -->\n  <!--SimSun, Microsoft YaHei, SimHei -> WenQuanYi Micro Hei -->\n  <match target=\"pattern\">\n      <test name=\"family\">\n          <string>宋体</string>\n      </test>\n      <edit name=\"family\" mode=\"assign\" binding=\"strong\">\n          <string>WenQuanYi WenQuanYi Bitmap Song</string>\n          <!-- <string>Noto Serif CJK SC</string> -->\n      </edit>\n  </match>\n  <match target=\"pattern\">\n      <test name=\"family\">\n          <string>SimSun</string>\n      </test>\n      <edit name=\"family\" mode=\"assign\" binding=\"strong\">\n          <string>WenQuanYi WenQuanYi Bitmap Song</string>\n          <!-- <string>Noto Serif CJK SC</string> -->\n      </edit>\n  </match>\n  <match target=\"pattern\">\n      <test qual=\"any\" name=\"family\">\n          <string>SimSun-18030</string>\n      </test>\n      <edit name=\"family\" mode=\"assign\" binding=\"same\">\n          <string>WenQuanYi WenQuanYi Bitmap Song</string>\n         <!-- <string>Noto Serif CJK SC</string> -->\n      </edit>\n  </match>\n\n  <match target=\"pattern\">\n    <test qual=\"any\" name=\"family\">\n        <string>Microsoft YaHei</string>\n    </test>\n    <edit name=\"family\" mode=\"assign\" binding=\"same\">\n          <string>WenQuanYi WenQuanYi Bitmap Song</string>\n      </edit>\n  </match>\n\n<match target=\"pattern\">\n    <test qual=\"any\" name=\"family\">\n        <string>SimHei</string>\n    </test>\n    <edit name=\"family\" mode=\"assign\" binding=\"same\">\n          <string>WenQuanYi WenQuanYi Bitmap Song</string>\n      </edit>\n  </match>\n\n  <match target=\"pattern\">\n      <test name=\"family\">\n          <string>Times New Roman</string>\n      </test>\n      <edit name=\"family\" mode=\"append\" binding=\"strong\">\n          <string>WenQuanYi WenQuanYi Bitmap Song</string>\n      </edit>\n  </match>\n  <match target=\"pattern\">\n      <test name=\"family\">\n          <string>Terminus</string>\n      </test>\n      <edit name=\"family\" mode=\"append\" binding=\"strong\">\n          <string>WenQuanYi WenQuanYi Bitmap Song</string>\n      </edit>\n  </match>\n\n\n<!-- 备用字体优先顺序 -->\n  <alias>\n    <family>sans-serif</family>\n    <prefer>\n      <family>Terminus</family>\n      <family>WenQuanYi WenQuanYi Bitmap Song</family>\n      <family>Noto Color Emoji</family>\n      <family>Noto Emoji</family>\n      <family>Noto Sans</family>\n      <family>Noto Sans CJK SC</family>\n      <family>Noto Sans CJK TC</family>\n      <family>Noto Sans CJK JP</family>\n      <family>Noto Sans CJK KR</family>\n    </prefer>\n  </alias>\n  <alias>\n    <family>serif</family>\n    <prefer>\n      <family>Terminus</family>\n      <family>WenQuanYi WenQuanYi Bitmap Song</family>\n      <family>Noto Color Emoji</family>\n      <family>Noto Emoji</family>\n      <family>Noto Sans</family>\n      <family>Noto Sans CJK SC</family>\n      <family>Noto Sans CJK TC</family>\n      <family>Noto Sans CJK JP</family>\n      <family>Noto Sans CJK KR</family>\n      <family>Noto Emoji</family>\n    </prefer>\n  </alias>\n  <alias>\n    <family>monospace</family>\n    <prefer>\n      <family>Terminus</family>\n      <family>WenQuanYi WenQuanYi Bitmap Song</family>\n      <family>Noto Color Emoji</family>\n      <family>Noto Emoji</family>\n      <family>Noto Sans</family>\n      <family>Noto Sans CJK SC</family>\n      <family>Noto Sans CJK TC</family>\n      <family>Noto Sans CJK JP</family>\n      <family>Noto Sans CJK KR</family>\n    </prefer>\n  </alias>\n\n</fontconfig>\n```\n设置字体偏好:`/etc/fonts/conf.d/64-language-selector-prefer.conf`\n```xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>\n<fontconfig>  \n<alias>\n    <family>sans-serif</family>\n    <prefer>\n      <family>Terminus</family>\n      <family>WenQuanYi WenQuanYi Bitmap Song</family>\n      <family>Noto Color Emoji</family>\n      <family>Noto Emoji</family>\n      <family>Noto Sans</family>\n      <family>Noto Sans CJK SC</family>\n      <family>Noto Sans CJK TC</family>\n      <family>Noto Sans CJK JP</family>\n      <family>Noto Sans CJK KR</family>\n    </prefer>\n  </alias>\n  <alias>\n    <family>serif</family>\n    <prefer>\n      <family>Terminus</family>\n      <family>WenQuanYi WenQuanYi Bitmap Song</family>\n      <family>Noto Color Emoji</family>\n      <family>Noto Emoji</family>\n      <family>Noto Sans</family>\n      <family>Noto Sans CJK SC</family>\n      <family>Noto Sans CJK TC</family>\n      <family>Noto Sans CJK JP</family>\n      <family>Noto Sans CJK KR</family>\n      <family>Noto Emoji</family>\n    </prefer>\n  </alias>\n  <alias>\n    <family>monospace</family>\n    <prefer>\n      <family>Terminus</family>\n      <family>WenQuanYi WenQuanYi Bitmap Song</family>\n      <family>Noto Color Emoji</family>\n      <family>Noto Emoji</family>\n      <family>Noto Sans</family>\n      <family>Noto Sans CJK SC</family>\n      <family>Noto Sans CJK TC</family>\n      <family>Noto Sans CJK JP</family>\n      <family>Noto Sans CJK KR</family>\n    </prefer>\n  </alias>\n</fontconfig>\n\n\n```\n\n### 安装fcitx5\n```bash\nsudo pacman -S fcitx5-im fcitx5-chinese-addons fcitx5-mozc\n```\n\n### xfce的声音\n```bash\n sudo pacman -S alsa-utils pulseaudio pulseaudio-alsa \\\n  pavucontrol      #与xfce4 panel里面的插件配合使用,必须要有这个进程\n```\nxfce4 panel设置里面添加一个pulseaudio plugin的插件\n\n`alsamixer` F6选择声卡,然后把mm的M键去掉,上下箭头调节,auto-mute disable了以后,loopback enable. reboot重启,这时候xfce4的插件就可以调节声音了\n\n### 安装chrome\n```bash\n#AUR 助手\ngit clone https://aur.archlinux.org/yay-git.git\ncd yay-git\nmakepkg -si\n\n#yay不要用root\nyay -S google-chrome\n\n#升级\nyay -Syu\n```\n\n### 安装clash\n\n看[这](https://blog.linioi.com/posts/clash-on-arch/)\n或者[class for windows](https://github.com/Fndroid/clash_for_windows_pkg/releases)\n\n\n### 支持ntfs\n```bash\nsudo pacman -S ntfs-3g\n```","source":"_posts/arch-linux-setup-guide.md","raw":"---\ntitle: Arch Linux 安装笔记\ndate: 2022-04-19 11:23:08\ncategories: \n\t- 伸展运动\n  - Linux\ntags:\n  - guide\n\t- setup\n\t- Arch Linux\n\t- Linux\n---\n> https://wiki.archlinux.org/\n\n## 基本系统安装\n### 前置准备\n- 检查网络\n  ```bash \n  ip link\n  ```\n- 更新系统时间\n  ```bash\n  timedatectl set-ntp true\n  ```\n### 准备磁盘\n- 分区\n  - 查看当前磁盘信息\n  ```bash\n  fdisk -l\n  ```\n  - 进入分区\n  ```bash\n  fdisk /dev/the_disk_to_be_partitioned（要被分区的磁盘）\n  ```\n  uefi参考：\n  | 挂载点 | 分区 | 分区类型 | 大小 |\n  | -- | -- | -- | -- |\n  | /mnt/boot/EFI| /dev/efi_system_partition | EFI系统分区 | 300M |\n  | \\[swap\\] **移动设备建议不要**| /dev/swap_partition/ |Linux swap (交换空间) | > 512M (2G if physical ram > 4G) |\n  | /mnt| /dev/root_partition | Linux x86-64 根目录 (/) | 剩余空间 |\n\n  - *移动设备的情况下:*\n    | 挂载点 | 分区 | 分区类型 | 大小 |\n    | -- | -- | -- | -- |\n    | *none* | *none* | BIOS启动分区 | 1M |\n    | /mnt/boot/EFI| /dev/efi_system_partition | EFI系统分区 | 300M |\n    | /mnt| /dev/root_partition | Linux x86-64 根目录 (/) | 剩余空间 |\n\n  - 格式化分区\n  ```bash\n   mkfs.ext4 /dev/root_partition（根分区）\n   # 移动设备关闭日志 mkfs.ext4 -O \"^has_journal\" /dev/root_partition（根分区）\n   mkswap /dev/swap_partition（交换空间分区）\n   mkfs.fat -F 32 /dev/efi_system_partition\n  ```\n  - 挂载分区&启用交换空间\n  ```bash\n  mount /dev/root_partition（根分区） /mnt\n  mount /dev/efi_system_partition /mnt/boot/efi\n  swapon /dev/swap_partition（交换空间分区）\n  ```\n### 安装系统\n  - 设置cn源\n    \n    第一种方法\n      ```bash\n      #!/bin/bash\n      curl 'https://archlinux.org/mirrorlist/?country=CN&prototcol=http&protocol=https&ip_version=4' > /etc/pacman.d/mirrorlist && \\\n      echo /etc/pacman.d/mirrorlist && \\\n      sudo vim /etc/pacman.d/mirrorlist && \\\n      echo 'pacman mirror list updated'\n      ```\n      然后将`/etc/pacman.d/mirrorlist`中注释去掉\n        \n    第二种方法\n\n    在`/etc/pacman.d/mirrorlist`中搜索CN，放到最前面，推荐aliyun的源\n\n  - 安装系统&软件包\n  ```bash\n  pacstrap /mnt base base-devel linux linux-firmware vim vi sudo git\n  # 移动设备 可以使用基于BFQ的io调度内核linux-zen，把linux换成linux-zen\n  ```\n  *参考：[BFQ](https://www.kernel.org/doc/html/latest/block/bfq-iosched.html)*\n\n## 系统配置\n### 系统引导\n  - 配置fstab\n  ```bash\n  genfstab -U /mnt >> /mnt/etc/fstab\n  ```\n  - 安装grub\n  ```bash\n  pacman -S efibootmgr grub\n\n  # uefi\n  grub-install --target=x86_64-efi --efi-directory={挂载点,如/mnt/boot/EFI} --bootloader-id=GRUB\n\n  # bios(非GPT分区无需其他空间，但GPT分区需要有一块1M的BIOS boot分区)\n  grub-install --target=i386-pc /dev/sdX\n  ```\n  *移动设备的情况下*\n\n  假设分区顺序是：\n    - BIOS\n    - EFI\n    - root\n  要先在这块设备上写入引导信息，运行`gdisk /dev/sdX`\n\n  ```bash\n  # gdisk /dev/sdX\n\n  Command (? for help): r\n  Recovery/transformation command (? for help): h\n\n  WARNING! Hybrid MBRs are flaky and dangerous! If you decide not to use one,\n  just hit the Enter key at the below prompt and your MBR partition table will\n  be untouched.\n\n  Type from one to three GPT partition numbers, separated by spaces, to be added to the hybrid MBR, in sequence: 1 2 3\n  Place EFI GPT (0xEE) partition first in MBR (good for GRUB)? (Y/N): N\n\n  Creating entry for GPT partition #1 (MBR partition #1)\n  Enter an MBR hex code (default EF): \n  Set the bootable flag? (Y/N): N\n\n  Creating entry for GPT partition #2 (MBR partition #2)\n  Enter an MBR hex code (default EF): \n  Set the bootable flag? (Y/N): N\n\n  Creating entry for GPT partition #3 (MBR partition #3)\n  Enter an MBR hex code (default 83): \n  Set the bootable flag? (Y/N): Y\n\n  Recovery/transformation command (? for help): x\n  Expert command (? for help): h\n  Expert command (? for help): w\n\n  Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING\n  PARTITIONS!!\n\n  Do you want to proceed? (Y/N): Y\n  ```\n  \n  > **如果不需要兼容，不用做这一步，混合分区会在设备上存在两个分区表，系统识别这个设备分区的时候具体的行为完全依赖于系统的实现，非常不稳定**\n\n  > **注意：写完hybrid之后，默认的windows中就只认MBR分区，假设分区按上面的例子，且还有一个4号分区，那么由于MBR的限制**\n  > **在windows中第四个分区是无法正确识别文件系统的，如果要使用第四个分区且要通过MBR引导，那么这里就要在MBR写入134分区**\n  > **ESP分区可以不用写到MBR里**\n\n\n  ```bash\n  pacman -S efibootmgr grub amd-ucode intel-ucode\n\n  # uefi + MBR(BIOS)混合启动\n  grub-install --target=x86_64-efi --efi-directory={挂载点,如/mnt/boot/EFI} --removable\n   --bootloader-id=GRUB --boot-directory={root挂载点,如/mnt}/boot\n\n  grub-install --target=i386-pc --recheck --boot-directory=/DATA_MOUNTPOINT/boot /dev/sdX #注意这里是整个设备\n\n  # 作为保险\n  grub-install --target=i386-pc --recheck --boot-directory=/DATA_MOUNTPOINT/boot /dev/{root的那个分区}\n  ```\n  - 切换到已经安装的系统\n  ```bash\n  arch-chroot /mnt\n  ```\n\n  - 配置grub.cfg\n  ```bash\n  grub-mkconfig -o /boot/grub/grub.cfg\n  ```\n### 系统初始化设置\n\n  - 设置时区\n  ```bash\n  ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n  hwclock --systohc\n  ```\n  - 本地化\n  ```bash\n  locale-gen\n  ```\n\n  -- 移动设备最小化磁盘访问,把日志放到内存\n  修改`/etc/systemd/journald.conf.d/usbstick.conf`\n  写入\n  ```bash\n  [Journal]\n  Storage=volatile\n  RuntimeMaxUse=30M\n  ```\n\n  - initramfs\n  如果是移动设备，将`/etc/mkinitcpio.conf`中`HOOKS`里面的`block`和`keyboard`放到`autodetect`前面，然后\n  ```bash\n  mkinitcpio -P\n  ```\n\n  创建`/etc/locale.conf`,设置`LANG=en_US.UTF-8`\n  - hostname\n  创建`/etc/hostname`,写入主机名\n  - root密码\n  ```bash\n  passwd\n  ```\n  - hosts\n  向`/etc/hosts`写入\n  ```bash\n  127.0.0.1 localhost\n  ::1 localhost\n  127.0.0.1 {hostname}\n  ```\n\n  - 安装网络工具\n  \n  *networkmanager已经不使用dhcpcd, 因此需要安装dhclient\n  ```bash\n  pacman -S iw wpa_supplicant dialog dhcpcd dhclient netctl networkmanager network-manager-applet gnome-keyring\n  # 设置网络开机启动\n  systemctl enable NetworkManager.service\n  ```\n  - 新增用户\n  ```bash\n  useradd -m -G users,audio,lp,optical,storage,video,wheel,power -s /bin/bash 普通用户名\n  passwd 普通用户名\n  ```\n  运行`visudo`, 去掉`%wheel ALL=(ALL) ALL`注释\n\n**到这里基本已经完成最小系统的配置和安装，在继续之前，改启动项然后reboot**\n\n## DE/WM/DM\n\n  - 安装xorg\n  ```bash\n  sudo pacman -S xorg xorg-xinit\n  ## 移动设备要安装\n  # xf86-input-synaptics 支持触控板\n  # xf86-video-vesa, xf86-video-ati, xf86-video-intel, xf86-video-amdgpu, xf86-video-nouveau and xf86-video-fbdev. 大多数的开源显卡驱动\n  #  libeatmydata  可以禁用fsync，比如对于firefox：eatmydata firefox\n  ```\n  - 安装字体\n  ```bash\n  sudo pacman -S terminus-font \n  ```\n  - 安装DE\n    - Mate\n      - 安装mate\n      ```bash\n      sudo pacman -S mate mate-extra\n      ```\n      - 配置xinitrc\n      ```bash\n      cp /etc/X11/xinit/xinitrc ~/.xinitrc\n      ```\n      把最后的启动换成`exec mate-session`\n    - XFCE\n      - 安装xfce\n      ```bash\n      sudo pacman -S xfce4 xfce4-goodies\n      ```\n      - 配置xinitrc\n      ```bash\n      cp /etc/X11/xinit/xinitrc ~/.xinitrc\n      ```\n      把最后的启动换成`exec startxfce4`\n\n  - 仅安装WM\n    \n    *(略)*\n    \n  - 安装DM\n    - lightdm\n    ```bash\n      sudo pacman -S lightdm-gtk-greeter\n    ```\n\n## 其他\n### 支持hyper-v增强模式\n  ```bash\n  git clone https://www.github.com/Microsoft/linux-vm-tools\n  cd linux-vm-tools/arch\n  # 要先开代理\n  ./make...\n  ./install...\n  ```\n然后记得在win中用管理员设置\n```cmd\nSet-VM -VMName <your_vm_name>  -EnhancedSessionTransportType HvSocket\n```\n\n  **如果无法通过增强模式连接**\n\n  [arch wiki [loginctl or systemctl --user not working]](https://wiki.archlinux.org/title/Xrdp#loginctl_or_systemctl_--user_not_working)\n  \n  Try commenting out all the references to `systemd-home` in `/etc/pam.d/system-auth`, see [github issue](https://github.com/neutrinolabs/xrdp/issues/1684)\n\n### alias\n```bash\nalias s='sudo'\nalias ls='ls --color=auto'\nalias la='ls -a --color=auto'\nalias ll='ls -l --color=auto'\nalias lla='ls -l -a --color=auto'\nalias pac='pacman -S'\nalias pacyu='pacman -Syu'\nalias spac='sudo pacman -S'\nalias spacyu='sudo pacman -Syu'\nalias v='vim'\nalias sv='sudo vim'\n\n```\n### rsync备份\n- 安装rsync\n```bash\nsudo pacman -S rsync\n```\n- backup.sh\n```bash\n#!/bin/bash\necho '==> start to backup... type device:' && \\\n\tread device && \\\n\techo '==> type mount dir:' && \\\n\tread mount_dir && \\\n\techo '==> umount $device...'; \\\n\tumount $device;\\\n\techo '==> umount /mnt/$mount_dir...'; \\\n\tumount /mnt/$mount_dir; \n\techo '==> remove /mnt/$mount_dir...'; \\\n\trm -rf /mnt/$mount_dir && \\\n\techo '==> create directory /mnt/$mount_dir...'; \\\n\tmkdir /mnt/$mount_dir; \\\n\techo '==> mount $device to /mnt/$mount_dir...'; \\\n\tmount $device /mnt/$mount_dir; \\\n\techo '==> create direcotry /mnt/$mount_dir/system_bakcup...'; \\\n\tmkdir /mnt/$mount_dir/system_backup;\n\techo '==> start to sync files to /mnt/$mount_dir/system_backup...'; \\\n\trsync --archive --one-file-system --hard-links \\\n\t--acls --xattrs --sparse \\\n\t--human-readable --numeric-ids --delete --delete-excluded \\\n\t--itemize-changes --verbose --progress \\\n\t--exclude='*~' \\\n\t--exclude='$device' \\\n\t--exclude='/mnt' \\\n\t--exclude='/dev' \\\n\t--exclude='/var/tmp' \\\n\t--exclude='/tmp' \\\n\t/ /mnt/$mount_dir/system_backup && \\\necho '==> finished.'\n```\n\n### 中文及字体设置\n- 语言配置\n去掉`/etc/locale.gen`中的`zh_CN.UTF-8 UTF-8`和`en_US.UTF-8 UTF-8`的注释\n\n根据需要在`~/.xinitrc`或者`~/.bashrc`配置\n\n**在`~/.xinitrc`中配置要注意在`exec xxx`之前**\n```bash\nexport LANG=zh_CN.UTF-8\nexport LANGUAGE=zh_CN:en_US\n```\n- 字体配置\n```bash\nsudo pacman -S wqy-bitmapfont wqy-microhei noto-fonts noto-fonts-emoji\n```\n设置`~/.config/fontconfig/fonts.conf`\n```xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>\n<fontconfig>\n\n  <!-- 显示器使用的像素排列方式 -->\n  <match target=\"font\">\n    <edit mode=\"assign\" name=\"rgba\">\n      <const>rgb</const>\n    </edit>\n  </match>\n\n  <!-- 字体微调的程度, 可选 hintnone, hintslight (默认), hintmedium, hintfull. -->\n  <!-- 更高的 hinting 等级可使字体更锐利，同时也会损失更多的细节 -->\n  <!-- 如果显示器的 DPI 高得不像话 (>=300), 可关闭 hinting, 字体会自然对齐像素 -->\n  <match target=\"font\">\n    <edit mode=\"assign\" name=\"hintstyle\">\n      <const>hintslight</const>\n    </edit>\n  </match>\n\n  <!-- 抗锯齿. 除非屏幕DPI奇高否则建议开启 -->\n  <match target=\"font\">\n    <edit mode=\"assign\" name=\"antialias\">\n      <bool>true</bool>\n    </edit>\n  </match>\n\n\n<!-- 全局默认字体　-->\n  <match>\n    <edit mode=\"prepend\" name=\"family\">\n      <string>Terminus</string>\n    </edit>\n  </match>\n\n<!-- 全局默认英文字体 -->\n  <match>\n    <test compare=\"contains\" name=\"lang\">\n      <string>en</string>\n    </test>\n    <edit mode=\"prepend\" name=\"family\">\n      <string>Terminus</string>\n    </edit>\n  </match>\n\n<!-- 全局默认中文字体 -->\n  <match>\n    <test compare=\"contains\" name=\"lang\">\n      <string>zh</string>\n    </test>\n    <edit mode=\"prepend\" name=\"family\">\n      <string>WenQuanYi WenQuanYi Bitmap Song</string>\n    </edit>\n  </match>\n\n<!-- 默认无衬线字体 -->\n  <match target=\"pattern\">\n    <test qual=\"any\" name=\"family\">\n      <string>sans-serif</string></test>\n    <edit name=\"family\" mode=\"prepend\" binding=\"same\">\n      <string>Terminus</string>\n    </edit>\n  </match>\n\n<!-- 默认衬线字体 -->\n  <match target=\"pattern\">\n    <test qual=\"any\" name=\"family\">\n      <string>serif</string>\n    </test>\n    <edit name=\"family\" mode=\"prepend\" binding=\"same\">\n      <string>Terminus</string>\n    </edit>\n  </match>\n\n<!-- 默认等宽字体 -->\n  <match target=\"pattern\">\n    <test qual=\"any\" name=\"family\">\n      <string>monospace</string>\n    </test>\n    <edit name=\"family\" mode=\"prepend\" binding=\"same\">\n      <string>Terminus</string>\n    </edit>\n  </match>\n\n  <!-- 字体替换 -->\n  <!--SimSun, Microsoft YaHei, SimHei -> WenQuanYi Micro Hei -->\n  <match target=\"pattern\">\n      <test name=\"family\">\n          <string>宋体</string>\n      </test>\n      <edit name=\"family\" mode=\"assign\" binding=\"strong\">\n          <string>WenQuanYi WenQuanYi Bitmap Song</string>\n          <!-- <string>Noto Serif CJK SC</string> -->\n      </edit>\n  </match>\n  <match target=\"pattern\">\n      <test name=\"family\">\n          <string>SimSun</string>\n      </test>\n      <edit name=\"family\" mode=\"assign\" binding=\"strong\">\n          <string>WenQuanYi WenQuanYi Bitmap Song</string>\n          <!-- <string>Noto Serif CJK SC</string> -->\n      </edit>\n  </match>\n  <match target=\"pattern\">\n      <test qual=\"any\" name=\"family\">\n          <string>SimSun-18030</string>\n      </test>\n      <edit name=\"family\" mode=\"assign\" binding=\"same\">\n          <string>WenQuanYi WenQuanYi Bitmap Song</string>\n         <!-- <string>Noto Serif CJK SC</string> -->\n      </edit>\n  </match>\n\n  <match target=\"pattern\">\n    <test qual=\"any\" name=\"family\">\n        <string>Microsoft YaHei</string>\n    </test>\n    <edit name=\"family\" mode=\"assign\" binding=\"same\">\n          <string>WenQuanYi WenQuanYi Bitmap Song</string>\n      </edit>\n  </match>\n\n<match target=\"pattern\">\n    <test qual=\"any\" name=\"family\">\n        <string>SimHei</string>\n    </test>\n    <edit name=\"family\" mode=\"assign\" binding=\"same\">\n          <string>WenQuanYi WenQuanYi Bitmap Song</string>\n      </edit>\n  </match>\n\n  <match target=\"pattern\">\n      <test name=\"family\">\n          <string>Times New Roman</string>\n      </test>\n      <edit name=\"family\" mode=\"append\" binding=\"strong\">\n          <string>WenQuanYi WenQuanYi Bitmap Song</string>\n      </edit>\n  </match>\n  <match target=\"pattern\">\n      <test name=\"family\">\n          <string>Terminus</string>\n      </test>\n      <edit name=\"family\" mode=\"append\" binding=\"strong\">\n          <string>WenQuanYi WenQuanYi Bitmap Song</string>\n      </edit>\n  </match>\n\n\n<!-- 备用字体优先顺序 -->\n  <alias>\n    <family>sans-serif</family>\n    <prefer>\n      <family>Terminus</family>\n      <family>WenQuanYi WenQuanYi Bitmap Song</family>\n      <family>Noto Color Emoji</family>\n      <family>Noto Emoji</family>\n      <family>Noto Sans</family>\n      <family>Noto Sans CJK SC</family>\n      <family>Noto Sans CJK TC</family>\n      <family>Noto Sans CJK JP</family>\n      <family>Noto Sans CJK KR</family>\n    </prefer>\n  </alias>\n  <alias>\n    <family>serif</family>\n    <prefer>\n      <family>Terminus</family>\n      <family>WenQuanYi WenQuanYi Bitmap Song</family>\n      <family>Noto Color Emoji</family>\n      <family>Noto Emoji</family>\n      <family>Noto Sans</family>\n      <family>Noto Sans CJK SC</family>\n      <family>Noto Sans CJK TC</family>\n      <family>Noto Sans CJK JP</family>\n      <family>Noto Sans CJK KR</family>\n      <family>Noto Emoji</family>\n    </prefer>\n  </alias>\n  <alias>\n    <family>monospace</family>\n    <prefer>\n      <family>Terminus</family>\n      <family>WenQuanYi WenQuanYi Bitmap Song</family>\n      <family>Noto Color Emoji</family>\n      <family>Noto Emoji</family>\n      <family>Noto Sans</family>\n      <family>Noto Sans CJK SC</family>\n      <family>Noto Sans CJK TC</family>\n      <family>Noto Sans CJK JP</family>\n      <family>Noto Sans CJK KR</family>\n    </prefer>\n  </alias>\n\n</fontconfig>\n```\n设置字体偏好:`/etc/fonts/conf.d/64-language-selector-prefer.conf`\n```xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>\n<fontconfig>  \n<alias>\n    <family>sans-serif</family>\n    <prefer>\n      <family>Terminus</family>\n      <family>WenQuanYi WenQuanYi Bitmap Song</family>\n      <family>Noto Color Emoji</family>\n      <family>Noto Emoji</family>\n      <family>Noto Sans</family>\n      <family>Noto Sans CJK SC</family>\n      <family>Noto Sans CJK TC</family>\n      <family>Noto Sans CJK JP</family>\n      <family>Noto Sans CJK KR</family>\n    </prefer>\n  </alias>\n  <alias>\n    <family>serif</family>\n    <prefer>\n      <family>Terminus</family>\n      <family>WenQuanYi WenQuanYi Bitmap Song</family>\n      <family>Noto Color Emoji</family>\n      <family>Noto Emoji</family>\n      <family>Noto Sans</family>\n      <family>Noto Sans CJK SC</family>\n      <family>Noto Sans CJK TC</family>\n      <family>Noto Sans CJK JP</family>\n      <family>Noto Sans CJK KR</family>\n      <family>Noto Emoji</family>\n    </prefer>\n  </alias>\n  <alias>\n    <family>monospace</family>\n    <prefer>\n      <family>Terminus</family>\n      <family>WenQuanYi WenQuanYi Bitmap Song</family>\n      <family>Noto Color Emoji</family>\n      <family>Noto Emoji</family>\n      <family>Noto Sans</family>\n      <family>Noto Sans CJK SC</family>\n      <family>Noto Sans CJK TC</family>\n      <family>Noto Sans CJK JP</family>\n      <family>Noto Sans CJK KR</family>\n    </prefer>\n  </alias>\n</fontconfig>\n\n\n```\n\n### 安装fcitx5\n```bash\nsudo pacman -S fcitx5-im fcitx5-chinese-addons fcitx5-mozc\n```\n\n### xfce的声音\n```bash\n sudo pacman -S alsa-utils pulseaudio pulseaudio-alsa \\\n  pavucontrol      #与xfce4 panel里面的插件配合使用,必须要有这个进程\n```\nxfce4 panel设置里面添加一个pulseaudio plugin的插件\n\n`alsamixer` F6选择声卡,然后把mm的M键去掉,上下箭头调节,auto-mute disable了以后,loopback enable. reboot重启,这时候xfce4的插件就可以调节声音了\n\n### 安装chrome\n```bash\n#AUR 助手\ngit clone https://aur.archlinux.org/yay-git.git\ncd yay-git\nmakepkg -si\n\n#yay不要用root\nyay -S google-chrome\n\n#升级\nyay -Syu\n```\n\n### 安装clash\n\n看[这](https://blog.linioi.com/posts/clash-on-arch/)\n或者[class for windows](https://github.com/Fndroid/clash_for_windows_pkg/releases)\n\n\n### 支持ntfs\n```bash\nsudo pacman -S ntfs-3g\n```","slug":"arch-linux-setup-guide","published":1,"updated":"2023-03-17T02:30:47.683Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdt20003xtuj5jrva70r","content":"<blockquote>\n<p><a href=\"https://wiki.archlinux.org/\">https://wiki.archlinux.org/</a></p>\n</blockquote>\n<h2 id=\"基本系统安装\"><a href=\"#基本系统安装\" class=\"headerlink\" title=\"基本系统安装\"></a>基本系统安装</h2><h3 id=\"前置准备\"><a href=\"#前置准备\" class=\"headerlink\" title=\"前置准备\"></a>前置准备</h3><ul>\n<li>检查网络<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ip</span> <span class=\"token function\">link</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>更新系统时间<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">timedatectl set-ntp <span class=\"token boolean\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"准备磁盘\"><a href=\"#准备磁盘\" class=\"headerlink\" title=\"准备磁盘\"></a>准备磁盘</h3><ul>\n<li>分区<ul>\n<li><p>查看当前磁盘信息</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">fdisk</span> <span class=\"token parameter variable\">-l</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>进入分区</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">fdisk</span> /dev/the_disk_to_be_partitioned（要被分区的磁盘）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>uefi参考：</p>\n<table>\n<thead>\n<tr>\n<th>挂载点</th>\n<th>分区</th>\n<th>分区类型</th>\n<th>大小</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x2F;mnt&#x2F;boot&#x2F;EFI</td>\n<td>&#x2F;dev&#x2F;efi_system_partition</td>\n<td>EFI系统分区</td>\n<td>300M</td>\n</tr>\n<tr>\n<td>[swap] <strong>移动设备建议不要</strong></td>\n<td>&#x2F;dev&#x2F;swap_partition&#x2F;</td>\n<td>Linux swap (交换空间)</td>\n<td>&gt; 512M (2G if physical ram &gt; 4G)</td>\n</tr>\n<tr>\n<td>&#x2F;mnt</td>\n<td>&#x2F;dev&#x2F;root_partition</td>\n<td>Linux x86-64 根目录 (&#x2F;)</td>\n<td>剩余空间</td>\n</tr>\n</tbody></table>\n</li>\n<li><p><em>移动设备的情况下:</em></p>\n<table>\n<thead>\n<tr>\n<th>挂载点</th>\n<th>分区</th>\n<th>分区类型</th>\n<th>大小</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><em>none</em></td>\n<td><em>none</em></td>\n<td>BIOS启动分区</td>\n<td>1M</td>\n</tr>\n<tr>\n<td>&#x2F;mnt&#x2F;boot&#x2F;EFI</td>\n<td>&#x2F;dev&#x2F;efi_system_partition</td>\n<td>EFI系统分区</td>\n<td>300M</td>\n</tr>\n<tr>\n<td>&#x2F;mnt</td>\n<td>&#x2F;dev&#x2F;root_partition</td>\n<td>Linux x86-64 根目录 (&#x2F;)</td>\n<td>剩余空间</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>格式化分区</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mkfs.ext4 /dev/root_partition（根分区）\n<span class=\"token comment\"># 移动设备关闭日志 mkfs.ext4 -O \"^has_journal\" /dev/root_partition（根分区）</span>\n<span class=\"token function\">mkswap</span> /dev/swap_partition（交换空间分区）\nmkfs.fat <span class=\"token parameter variable\">-F</span> <span class=\"token number\">32</span> /dev/efi_system_partition<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>挂载分区&amp;启用交换空间</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> /dev/root_partition（根分区） /mnt\n<span class=\"token function\">mount</span> /dev/efi_system_partition /mnt/boot/efi\n<span class=\"token function\">swapon</span> /dev/swap_partition（交换空间分区）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"安装系统\"><a href=\"#安装系统\" class=\"headerlink\" title=\"安装系统\"></a>安装系统</h3><ul>\n<li><p>设置cn源</p>\n<p>第一种方法</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token function\">curl</span> <span class=\"token string\">'https://archlinux.org/mirrorlist/?country=CN&amp;prototcol=http&amp;protocol=https&amp;ip_version=4'</span> <span class=\"token operator\">></span> /etc/pacman.d/mirrorlist <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n<span class=\"token builtin class-name\">echo</span> /etc/pacman.d/mirrorlist <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/pacman.d/mirrorlist <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'pacman mirror list updated'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>  然后将<code>/etc/pacman.d/mirrorlist</code>中注释去掉</p>\n<p>第二种方法</p>\n<p>在<code>/etc/pacman.d/mirrorlist</code>中搜索CN，放到最前面，推荐aliyun的源</p>\n</li>\n<li><p>安装系统&amp;软件包</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pacstrap /mnt base base-devel linux linux-firmware <span class=\"token function\">vim</span> <span class=\"token function\">vi</span> <span class=\"token function\">sudo</span> <span class=\"token function\">git</span>\n<span class=\"token comment\"># 移动设备 可以使用基于BFQ的io调度内核linux-zen，把linux换成linux-zen</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>  <em>参考：<a href=\"https://www.kernel.org/doc/html/latest/block/bfq-iosched.html\">BFQ</a></em></p>\n</li>\n</ul>\n<h2 id=\"系统配置\"><a href=\"#系统配置\" class=\"headerlink\" title=\"系统配置\"></a>系统配置</h2><h3 id=\"系统引导\"><a href=\"#系统引导\" class=\"headerlink\" title=\"系统引导\"></a>系统引导</h3><ul>\n<li>配置fstab  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">genfstab <span class=\"token parameter variable\">-U</span> /mnt <span class=\"token operator\">>></span> /mnt/etc/fstab<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>安装grub  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pacman <span class=\"token parameter variable\">-S</span> efibootmgr grub\n\n<span class=\"token comment\"># uefi</span>\ngrub-install <span class=\"token parameter variable\">--target</span><span class=\"token operator\">=</span>x86_64-efi --efi-directory<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>挂载点,如/mnt/boot/EFI<span class=\"token punctuation\">&#125;</span> --bootloader-id<span class=\"token operator\">=</span>GRUB\n\n<span class=\"token comment\"># bios(非GPT分区无需其他空间，但GPT分区需要有一块1M的BIOS boot分区)</span>\ngrub-install <span class=\"token parameter variable\">--target</span><span class=\"token operator\">=</span>i386-pc /dev/sdX<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n  <em>移动设备的情况下</em></li>\n</ul>\n<p>  假设分区顺序是：<br>    - BIOS<br>    - EFI<br>    - root<br>  要先在这块设备上写入引导信息，运行<code>gdisk /dev/sdX</code></p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># gdisk /dev/sdX</span>\n\nCommand <span class=\"token punctuation\">(</span>? <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">help</span><span class=\"token punctuation\">)</span>: r\nRecovery/transformation <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">(</span>? <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">help</span><span class=\"token punctuation\">)</span>: h\n\nWARNING<span class=\"token operator\">!</span> Hybrid MBRs are flaky and dangerous<span class=\"token operator\">!</span> If you decide not to use one,\njust hit the Enter key at the below prompt and your MBR partition table will\nbe untouched.\n\nType from one to three GPT partition numbers, separated by spaces, to be added to the hybrid MBR, <span class=\"token keyword\">in</span> sequence: <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span>\nPlace EFI GPT <span class=\"token punctuation\">(</span>0xEE<span class=\"token punctuation\">)</span> partition first <span class=\"token keyword\">in</span> MBR <span class=\"token punctuation\">(</span>good <span class=\"token keyword\">for</span> GRUB<span class=\"token punctuation\">)</span>? <span class=\"token punctuation\">(</span>Y/N<span class=\"token punctuation\">)</span>: N\n\nCreating entry <span class=\"token keyword\">for</span> GPT partition <span class=\"token comment\">#1 (MBR partition #1)</span>\nEnter an MBR hex code <span class=\"token punctuation\">(</span>default EF<span class=\"token punctuation\">)</span>: \nSet the bootable flag? <span class=\"token punctuation\">(</span>Y/N<span class=\"token punctuation\">)</span>: N\n\nCreating entry <span class=\"token keyword\">for</span> GPT partition <span class=\"token comment\">#2 (MBR partition #2)</span>\nEnter an MBR hex code <span class=\"token punctuation\">(</span>default EF<span class=\"token punctuation\">)</span>: \nSet the bootable flag? <span class=\"token punctuation\">(</span>Y/N<span class=\"token punctuation\">)</span>: N\n\nCreating entry <span class=\"token keyword\">for</span> GPT partition <span class=\"token comment\">#3 (MBR partition #3)</span>\nEnter an MBR hex code <span class=\"token punctuation\">(</span>default <span class=\"token number\">83</span><span class=\"token punctuation\">)</span>: \nSet the bootable flag? <span class=\"token punctuation\">(</span>Y/N<span class=\"token punctuation\">)</span>: Y\n\nRecovery/transformation <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">(</span>? <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">help</span><span class=\"token punctuation\">)</span>: x\nExpert <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">(</span>? <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">help</span><span class=\"token punctuation\">)</span>: h\nExpert <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">(</span>? <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">help</span><span class=\"token punctuation\">)</span>: w\n\nFinal checks complete. About to <span class=\"token function\">write</span> GPT data. THIS WILL OVERWRITE EXISTING\nPARTITIONS<span class=\"token operator\">!</span><span class=\"token operator\">!</span>\n\nDo you want to proceed? <span class=\"token punctuation\">(</span>Y/N<span class=\"token punctuation\">)</span>: Y<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p><strong>如果不需要兼容，不用做这一步，混合分区会在设备上存在两个分区表，系统识别这个设备分区的时候具体的行为完全依赖于系统的实现，非常不稳定</strong></p>\n</blockquote>\n<blockquote>\n<p><strong>注意：写完hybrid之后，默认的windows中就只认MBR分区，假设分区按上面的例子，且还有一个4号分区，那么由于MBR的限制</strong><br><strong>在windows中第四个分区是无法正确识别文件系统的，如果要使用第四个分区且要通过MBR引导，那么这里就要在MBR写入134分区</strong><br><strong>ESP分区可以不用写到MBR里</strong></p>\n</blockquote>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pacman <span class=\"token parameter variable\">-S</span> efibootmgr grub amd-ucode intel-ucode\n\n<span class=\"token comment\"># uefi + MBR(BIOS)混合启动</span>\ngrub-install <span class=\"token parameter variable\">--target</span><span class=\"token operator\">=</span>x86_64-efi --efi-directory<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>挂载点,如/mnt/boot/EFI<span class=\"token punctuation\">&#125;</span> <span class=\"token parameter variable\">--removable</span>\n --bootloader-id<span class=\"token operator\">=</span>GRUB --boot-directory<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>root挂载点,如/mnt<span class=\"token punctuation\">&#125;</span>/boot\n\ngrub-install <span class=\"token parameter variable\">--target</span><span class=\"token operator\">=</span>i386-pc <span class=\"token parameter variable\">--recheck</span> --boot-directory<span class=\"token operator\">=</span>/DATA_MOUNTPOINT/boot /dev/sdX <span class=\"token comment\">#注意这里是整个设备</span>\n\n<span class=\"token comment\"># 作为保险</span>\ngrub-install <span class=\"token parameter variable\">--target</span><span class=\"token operator\">=</span>i386-pc <span class=\"token parameter variable\">--recheck</span> --boot-directory<span class=\"token operator\">=</span>/DATA_MOUNTPOINT/boot /dev/<span class=\"token punctuation\">&#123;</span>root的那个分区<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><p>切换到已经安装的系统</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">arch-chroot /mnt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>配置grub.cfg</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grub-mkconfig</span> <span class=\"token parameter variable\">-o</span> /boot/grub/grub.cfg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"系统初始化设置\"><a href=\"#系统初始化设置\" class=\"headerlink\" title=\"系统初始化设置\"></a>系统初始化设置</h3><ul>\n<li>设置时区  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-sf</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\nhwclock <span class=\"token parameter variable\">--systohc</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li>本地化  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">locale-gen<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<p>  – 移动设备最小化磁盘访问,把日志放到内存<br>  修改<code>/etc/systemd/journald.conf.d/usbstick.conf</code><br>  写入<br>  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>Journal<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Storage</span><span class=\"token operator\">=</span>volatile\n<span class=\"token assign-left variable\">RuntimeMaxUse</span><span class=\"token operator\">=</span>30M<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\n<ul>\n<li>initramfs<br>  如果是移动设备，将<code>/etc/mkinitcpio.conf</code>中<code>HOOKS</code>里面的<code>block</code>和<code>keyboard</code>放到<code>autodetect</code>前面，然后  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mkinitcpio <span class=\"token parameter variable\">-P</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<p>  创建<code>/etc/locale.conf</code>,设置<code>LANG=en_US.UTF-8</code></p>\n<ul>\n<li><p>hostname<br>  创建<code>/etc/hostname</code>,写入主机名</p>\n</li>\n<li><p>root密码</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">passwd</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>hosts<br>  向<code>/etc/hosts</code>写入</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">127.0</span>.0.1 localhost\n::1 localhost\n<span class=\"token number\">127.0</span>.0.1 <span class=\"token punctuation\">&#123;</span>hostname<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>安装网络工具</p>\n</li>\n</ul>\n<p>  *networkmanager已经不使用dhcpcd, 因此需要安装dhclient<br>  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pacman <span class=\"token parameter variable\">-S</span> iw wpa_supplicant dialog dhcpcd dhclient netctl networkmanager network-manager-applet gnome-keyring\n<span class=\"token comment\"># 设置网络开机启动</span>\nsystemctl <span class=\"token builtin class-name\">enable</span> NetworkManager.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\n<ul>\n<li>新增用户  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">useradd</span> <span class=\"token parameter variable\">-m</span> <span class=\"token parameter variable\">-G</span> users,audio,lp,optical,storage,video,wheel,power <span class=\"token parameter variable\">-s</span> /bin/bash 普通用户名\n<span class=\"token function\">passwd</span> 普通用户名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n  运行<code>visudo</code>, 去掉<code>%wheel ALL=(ALL) ALL</code>注释</li>\n</ul>\n<p><strong>到这里基本已经完成最小系统的配置和安装，在继续之前，改启动项然后reboot</strong></p>\n<h2 id=\"DE-x2F-WM-x2F-DM\"><a href=\"#DE-x2F-WM-x2F-DM\" class=\"headerlink\" title=\"DE&#x2F;WM&#x2F;DM\"></a>DE&#x2F;WM&#x2F;DM</h2><ul>\n<li><p>安装xorg</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> xorg xorg-xinit\n<span class=\"token comment\">## 移动设备要安装</span>\n<span class=\"token comment\"># xf86-input-synaptics 支持触控板</span>\n<span class=\"token comment\"># xf86-video-vesa, xf86-video-ati, xf86-video-intel, xf86-video-amdgpu, xf86-video-nouveau and xf86-video-fbdev. 大多数的开源显卡驱动</span>\n<span class=\"token comment\">#  libeatmydata  可以禁用fsync，比如对于firefox：eatmydata firefox</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>安装字体</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> terminus-font <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>安装DE</p>\n<ul>\n<li>Mate<ul>\n<li>安装mate<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> mate mate-extra<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>配置xinitrc<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> /etc/X11/xinit/xinitrc ~/.xinitrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n把最后的启动换成<code>exec mate-session</code></li>\n</ul>\n</li>\n<li>XFCE<ul>\n<li>安装xfce<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> xfce4 xfce4-goodies<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>配置xinitrc<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> /etc/X11/xinit/xinitrc ~/.xinitrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n把最后的启动换成<code>exec startxfce4</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>仅安装WM</p>\n<p><em>(略)</em></p>\n</li>\n<li><p>安装DM</p>\n<ul>\n<li>lightdm<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> lightdm-gtk-greeter<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"支持hyper-v增强模式\"><a href=\"#支持hyper-v增强模式\" class=\"headerlink\" title=\"支持hyper-v增强模式\"></a>支持hyper-v增强模式</h3>  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://www.github.com/Microsoft/linux-vm-tools\n<span class=\"token builtin class-name\">cd</span> linux-vm-tools/arch\n<span class=\"token comment\"># 要先开代理</span>\n./make<span class=\"token punctuation\">..</span>.\n./install<span class=\"token punctuation\">..</span>.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后记得在win中用管理员设置</p>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">Set-VM -VMName &lt;your_vm_name&gt;  -EnhancedSessionTransportType HvSocket<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>  <strong>如果无法通过增强模式连接</strong></p>\n<p>  <a href=\"https://wiki.archlinux.org/title/Xrdp#loginctl_or_systemctl_--user_not_working\">arch wiki [loginctl or systemctl –user not working]</a></p>\n<p>  Try commenting out all the references to <code>systemd-home</code> in <code>/etc/pam.d/system-auth</code>, see <a href=\"https://github.com/neutrinolabs/xrdp/issues/1684\">github issue</a></p>\n<h3 id=\"alias\"><a href=\"#alias\" class=\"headerlink\" title=\"alias\"></a>alias</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">s</span><span class=\"token operator\">=</span><span class=\"token string\">'sudo'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">ls</span><span class=\"token operator\">=</span><span class=\"token string\">'ls --color=auto'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">la</span><span class=\"token operator\">=</span><span class=\"token string\">'ls -a --color=auto'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">ll</span><span class=\"token operator\">=</span><span class=\"token string\">'ls -l --color=auto'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">lla</span><span class=\"token operator\">=</span><span class=\"token string\">'ls -l -a --color=auto'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">pac</span><span class=\"token operator\">=</span><span class=\"token string\">'pacman -S'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">pacyu</span><span class=\"token operator\">=</span><span class=\"token string\">'pacman -Syu'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">spac</span><span class=\"token operator\">=</span><span class=\"token string\">'sudo pacman -S'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">spacyu</span><span class=\"token operator\">=</span><span class=\"token string\">'sudo pacman -Syu'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">v</span><span class=\"token operator\">=</span><span class=\"token string\">'vim'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">sv</span><span class=\"token operator\">=</span><span class=\"token string\">'sudo vim'</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"rsync备份\"><a href=\"#rsync备份\" class=\"headerlink\" title=\"rsync备份\"></a>rsync备份</h3><ul>\n<li>安装rsync<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> <span class=\"token function\">rsync</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>backup.sh<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> start to backup... type device:'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token builtin class-name\">read</span> device <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> type mount dir:'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token builtin class-name\">read</span> mount_dir <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> umount $device...'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token function\">umount</span> <span class=\"token variable\">$device</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">\\</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> umount /mnt/$mount_dir...'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token function\">umount</span> /mnt/<span class=\"token variable\">$mount_dir</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> remove /mnt/$mount_dir...'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /mnt/<span class=\"token variable\">$mount_dir</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> create directory /mnt/$mount_dir...'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token function\">mkdir</span> /mnt/<span class=\"token variable\">$mount_dir</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> mount $device to /mnt/$mount_dir...'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token function\">mount</span> <span class=\"token variable\">$device</span> /mnt/<span class=\"token variable\">$mount_dir</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> create direcotry /mnt/$mount_dir/system_bakcup...'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token function\">mkdir</span> /mnt/<span class=\"token variable\">$mount_dir</span>/system_backup<span class=\"token punctuation\">;</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> start to sync files to /mnt/$mount_dir/system_backup...'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token function\">rsync</span> <span class=\"token parameter variable\">--archive</span> --one-file-system --hard-links <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--acls</span> <span class=\"token parameter variable\">--xattrs</span> <span class=\"token parameter variable\">--sparse</span> <span class=\"token punctuation\">\\</span>\n\t--human-readable --numeric-ids <span class=\"token parameter variable\">--delete</span> --delete-excluded <span class=\"token punctuation\">\\</span>\n\t--itemize-changes <span class=\"token parameter variable\">--verbose</span> <span class=\"token parameter variable\">--progress</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span><span class=\"token string\">'*~'</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span><span class=\"token string\">'$device'</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span><span class=\"token string\">'/mnt'</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span><span class=\"token string\">'/dev'</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span><span class=\"token string\">'/var/tmp'</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span><span class=\"token string\">'/tmp'</span> <span class=\"token punctuation\">\\</span>\n\t/ /mnt/<span class=\"token variable\">$mount_dir</span>/system_backup <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> finished.'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"中文及字体设置\"><a href=\"#中文及字体设置\" class=\"headerlink\" title=\"中文及字体设置\"></a>中文及字体设置</h3><ul>\n<li>语言配置<br>去掉<code>/etc/locale.gen</code>中的<code>zh_CN.UTF-8 UTF-8</code>和<code>en_US.UTF-8 UTF-8</code>的注释</li>\n</ul>\n<p>根据需要在<code>~/.xinitrc</code>或者<code>~/.bashrc</code>配置</p>\n<p><strong>在<code>~/.xinitrc</code>中配置要注意在<code>exec xxx</code>之前</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">LANG</span></span><span class=\"token operator\">=</span>zh_CN.UTF-8\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">LANGUAGE</span></span><span class=\"token operator\">=</span>zh_CN:en_US<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ul>\n<li>字体配置<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> wqy-bitmapfont wqy-microhei noto-fonts noto-fonts-emoji<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n设置<code>~/.config/fontconfig/fonts.conf</code><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\"?></span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">fontconfig</span> <span class=\"token name\">SYSTEM</span> <span class=\"token string\">'fonts.dtd'</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fontconfig</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token comment\">&lt;!-- 显示器使用的像素排列方式 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assign<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rgba<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>const</span><span class=\"token punctuation\">></span></span>rgb<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>const</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token comment\">&lt;!-- 字体微调的程度, 可选 hintnone, hintslight (默认), hintmedium, hintfull. --></span>\n  <span class=\"token comment\">&lt;!-- 更高的 hinting 等级可使字体更锐利，同时也会损失更多的细节 --></span>\n  <span class=\"token comment\">&lt;!-- 如果显示器的 DPI 高得不像话 (>=300), 可关闭 hinting, 字体会自然对齐像素 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assign<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hintstyle<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>const</span><span class=\"token punctuation\">></span></span>hintslight<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>const</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token comment\">&lt;!-- 抗锯齿. 除非屏幕DPI奇高否则建议开启 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assign<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>antialias<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bool</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bool</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n\n<span class=\"token comment\">&lt;!-- 全局默认字体　--></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prepend<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- 全局默认英文字体 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">compare</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>contains<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lang<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>en<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prepend<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- 全局默认中文字体 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">compare</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>contains<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lang<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>zh<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prepend<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- 默认无衬线字体 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">qual</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>any<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>sans-serif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prepend<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>same<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- 默认衬线字体 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">qual</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>any<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>serif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prepend<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>same<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- 默认等宽字体 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">qual</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>any<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>monospace<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prepend<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>same<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token comment\">&lt;!-- 字体替换 --></span>\n  <span class=\"token comment\">&lt;!--SimSun, Microsoft YaHei, SimHei -> WenQuanYi Micro Hei --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>宋体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assign<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>strong<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token comment\">&lt;!-- &lt;string>Noto Serif CJK SC&lt;/string> --></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>SimSun<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assign<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>strong<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token comment\">&lt;!-- &lt;string>Noto Serif CJK SC&lt;/string> --></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">qual</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>any<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>SimSun-18030<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assign<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>same<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n         <span class=\"token comment\">&lt;!-- &lt;string>Noto Serif CJK SC&lt;/string> --></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">qual</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>any<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Microsoft YaHei<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assign<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>same<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">qual</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>any<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>SimHei<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assign<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>same<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Times New Roman<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>append<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>strong<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>append<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>strong<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n\n<span class=\"token comment\">&lt;!-- 备用字体优先顺序 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>alias</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>sans-serif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>prefer</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Color Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK SC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK TC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK JP<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK KR<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>prefer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>alias</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>alias</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>serif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>prefer</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Color Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK SC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK TC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK JP<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK KR<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>prefer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>alias</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>alias</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>monospace<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>prefer</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Color Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK SC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK TC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK JP<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK KR<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>prefer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>alias</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fontconfig</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n设置字体偏好:<code>/etc/fonts/conf.d/64-language-selector-prefer.conf</code><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\"?></span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">fontconfig</span> <span class=\"token name\">SYSTEM</span> <span class=\"token string\">'fonts.dtd'</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fontconfig</span><span class=\"token punctuation\">></span></span>  \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>alias</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>sans-serif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>prefer</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Color Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK SC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK TC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK JP<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK KR<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>prefer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>alias</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>alias</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>serif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>prefer</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Color Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK SC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK TC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK JP<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK KR<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>prefer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>alias</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>alias</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>monospace<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>prefer</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Color Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK SC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK TC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK JP<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK KR<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>prefer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>alias</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fontconfig</span><span class=\"token punctuation\">></span></span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"安装fcitx5\"><a href=\"#安装fcitx5\" class=\"headerlink\" title=\"安装fcitx5\"></a>安装fcitx5</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> fcitx5-im fcitx5-chinese-addons fcitx5-mozc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"xfce的声音\"><a href=\"#xfce的声音\" class=\"headerlink\" title=\"xfce的声音\"></a>xfce的声音</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> alsa-utils pulseaudio pulseaudio-alsa <span class=\"token punctuation\">\\</span>\n pavucontrol      <span class=\"token comment\">#与xfce4 panel里面的插件配合使用,必须要有这个进程</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>xfce4 panel设置里面添加一个pulseaudio plugin的插件</p>\n<p><code>alsamixer</code> F6选择声卡,然后把mm的M键去掉,上下箭头调节,auto-mute disable了以后,loopback enable. reboot重启,这时候xfce4的插件就可以调节声音了</p>\n<h3 id=\"安装chrome\"><a href=\"#安装chrome\" class=\"headerlink\" title=\"安装chrome\"></a>安装chrome</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#AUR 助手</span>\n<span class=\"token function\">git</span> clone https://aur.archlinux.org/yay-git.git\n<span class=\"token builtin class-name\">cd</span> yay-git\nmakepkg <span class=\"token parameter variable\">-si</span>\n\n<span class=\"token comment\">#yay不要用root</span>\nyay <span class=\"token parameter variable\">-S</span> google-chrome\n\n<span class=\"token comment\">#升级</span>\nyay <span class=\"token parameter variable\">-Syu</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"安装clash\"><a href=\"#安装clash\" class=\"headerlink\" title=\"安装clash\"></a>安装clash</h3><p>看<a href=\"https://blog.linioi.com/posts/clash-on-arch/\">这</a><br>或者<a href=\"https://github.com/Fndroid/clash_for_windows_pkg/releases\">class for windows</a></p>\n<h3 id=\"支持ntfs\"><a href=\"#支持ntfs\" class=\"headerlink\" title=\"支持ntfs\"></a>支持ntfs</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> ntfs-3g<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<blockquote>\n<p><a href=\"https://wiki.archlinux.org/\">https://wiki.archlinux.org/</a></p>\n</blockquote>\n<h2 id=\"基本系统安装\"><a href=\"#基本系统安装\" class=\"headerlink\" title=\"基本系统安装\"></a>基本系统安装</h2><h3 id=\"前置准备\"><a href=\"#前置准备\" class=\"headerlink\" title=\"前置准备\"></a>前置准备</h3><ul>\n<li>检查网络<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ip</span> <span class=\"token function\">link</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>更新系统时间<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">timedatectl set-ntp <span class=\"token boolean\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"准备磁盘\"><a href=\"#准备磁盘\" class=\"headerlink\" title=\"准备磁盘\"></a>准备磁盘</h3><ul>\n<li>分区<ul>\n<li><p>查看当前磁盘信息</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">fdisk</span> <span class=\"token parameter variable\">-l</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>进入分区</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">fdisk</span> /dev/the_disk_to_be_partitioned（要被分区的磁盘）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>uefi参考：</p>\n<table>\n<thead>\n<tr>\n<th>挂载点</th>\n<th>分区</th>\n<th>分区类型</th>\n<th>大小</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x2F;mnt&#x2F;boot&#x2F;EFI</td>\n<td>&#x2F;dev&#x2F;efi_system_partition</td>\n<td>EFI系统分区</td>\n<td>300M</td>\n</tr>\n<tr>\n<td>[swap] <strong>移动设备建议不要</strong></td>\n<td>&#x2F;dev&#x2F;swap_partition&#x2F;</td>\n<td>Linux swap (交换空间)</td>\n<td>&gt; 512M (2G if physical ram &gt; 4G)</td>\n</tr>\n<tr>\n<td>&#x2F;mnt</td>\n<td>&#x2F;dev&#x2F;root_partition</td>\n<td>Linux x86-64 根目录 (&#x2F;)</td>\n<td>剩余空间</td>\n</tr>\n</tbody></table>\n</li>\n<li><p><em>移动设备的情况下:</em></p>\n<table>\n<thead>\n<tr>\n<th>挂载点</th>\n<th>分区</th>\n<th>分区类型</th>\n<th>大小</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><em>none</em></td>\n<td><em>none</em></td>\n<td>BIOS启动分区</td>\n<td>1M</td>\n</tr>\n<tr>\n<td>&#x2F;mnt&#x2F;boot&#x2F;EFI</td>\n<td>&#x2F;dev&#x2F;efi_system_partition</td>\n<td>EFI系统分区</td>\n<td>300M</td>\n</tr>\n<tr>\n<td>&#x2F;mnt</td>\n<td>&#x2F;dev&#x2F;root_partition</td>\n<td>Linux x86-64 根目录 (&#x2F;)</td>\n<td>剩余空间</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>格式化分区</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mkfs.ext4 /dev/root_partition（根分区）\n<span class=\"token comment\"># 移动设备关闭日志 mkfs.ext4 -O \"^has_journal\" /dev/root_partition（根分区）</span>\n<span class=\"token function\">mkswap</span> /dev/swap_partition（交换空间分区）\nmkfs.fat <span class=\"token parameter variable\">-F</span> <span class=\"token number\">32</span> /dev/efi_system_partition<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>挂载分区&amp;启用交换空间</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> /dev/root_partition（根分区） /mnt\n<span class=\"token function\">mount</span> /dev/efi_system_partition /mnt/boot/efi\n<span class=\"token function\">swapon</span> /dev/swap_partition（交换空间分区）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"安装系统\"><a href=\"#安装系统\" class=\"headerlink\" title=\"安装系统\"></a>安装系统</h3><ul>\n<li><p>设置cn源</p>\n<p>第一种方法</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token function\">curl</span> <span class=\"token string\">'https://archlinux.org/mirrorlist/?country=CN&amp;prototcol=http&amp;protocol=https&amp;ip_version=4'</span> <span class=\"token operator\">></span> /etc/pacman.d/mirrorlist <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n<span class=\"token builtin class-name\">echo</span> /etc/pacman.d/mirrorlist <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/pacman.d/mirrorlist <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'pacman mirror list updated'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>  然后将<code>/etc/pacman.d/mirrorlist</code>中注释去掉</p>\n<p>第二种方法</p>\n<p>在<code>/etc/pacman.d/mirrorlist</code>中搜索CN，放到最前面，推荐aliyun的源</p>\n</li>\n<li><p>安装系统&amp;软件包</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pacstrap /mnt base base-devel linux linux-firmware <span class=\"token function\">vim</span> <span class=\"token function\">vi</span> <span class=\"token function\">sudo</span> <span class=\"token function\">git</span>\n<span class=\"token comment\"># 移动设备 可以使用基于BFQ的io调度内核linux-zen，把linux换成linux-zen</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>  <em>参考：<a href=\"https://www.kernel.org/doc/html/latest/block/bfq-iosched.html\">BFQ</a></em></p>\n</li>\n</ul>\n<h2 id=\"系统配置\"><a href=\"#系统配置\" class=\"headerlink\" title=\"系统配置\"></a>系统配置</h2><h3 id=\"系统引导\"><a href=\"#系统引导\" class=\"headerlink\" title=\"系统引导\"></a>系统引导</h3><ul>\n<li>配置fstab  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">genfstab <span class=\"token parameter variable\">-U</span> /mnt <span class=\"token operator\">>></span> /mnt/etc/fstab<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>安装grub  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pacman <span class=\"token parameter variable\">-S</span> efibootmgr grub\n\n<span class=\"token comment\"># uefi</span>\ngrub-install <span class=\"token parameter variable\">--target</span><span class=\"token operator\">=</span>x86_64-efi --efi-directory<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>挂载点,如/mnt/boot/EFI<span class=\"token punctuation\">&#125;</span> --bootloader-id<span class=\"token operator\">=</span>GRUB\n\n<span class=\"token comment\"># bios(非GPT分区无需其他空间，但GPT分区需要有一块1M的BIOS boot分区)</span>\ngrub-install <span class=\"token parameter variable\">--target</span><span class=\"token operator\">=</span>i386-pc /dev/sdX<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n  <em>移动设备的情况下</em></li>\n</ul>\n<p>  假设分区顺序是：<br>    - BIOS<br>    - EFI<br>    - root<br>  要先在这块设备上写入引导信息，运行<code>gdisk /dev/sdX</code></p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># gdisk /dev/sdX</span>\n\nCommand <span class=\"token punctuation\">(</span>? <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">help</span><span class=\"token punctuation\">)</span>: r\nRecovery/transformation <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">(</span>? <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">help</span><span class=\"token punctuation\">)</span>: h\n\nWARNING<span class=\"token operator\">!</span> Hybrid MBRs are flaky and dangerous<span class=\"token operator\">!</span> If you decide not to use one,\njust hit the Enter key at the below prompt and your MBR partition table will\nbe untouched.\n\nType from one to three GPT partition numbers, separated by spaces, to be added to the hybrid MBR, <span class=\"token keyword\">in</span> sequence: <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span>\nPlace EFI GPT <span class=\"token punctuation\">(</span>0xEE<span class=\"token punctuation\">)</span> partition first <span class=\"token keyword\">in</span> MBR <span class=\"token punctuation\">(</span>good <span class=\"token keyword\">for</span> GRUB<span class=\"token punctuation\">)</span>? <span class=\"token punctuation\">(</span>Y/N<span class=\"token punctuation\">)</span>: N\n\nCreating entry <span class=\"token keyword\">for</span> GPT partition <span class=\"token comment\">#1 (MBR partition #1)</span>\nEnter an MBR hex code <span class=\"token punctuation\">(</span>default EF<span class=\"token punctuation\">)</span>: \nSet the bootable flag? <span class=\"token punctuation\">(</span>Y/N<span class=\"token punctuation\">)</span>: N\n\nCreating entry <span class=\"token keyword\">for</span> GPT partition <span class=\"token comment\">#2 (MBR partition #2)</span>\nEnter an MBR hex code <span class=\"token punctuation\">(</span>default EF<span class=\"token punctuation\">)</span>: \nSet the bootable flag? <span class=\"token punctuation\">(</span>Y/N<span class=\"token punctuation\">)</span>: N\n\nCreating entry <span class=\"token keyword\">for</span> GPT partition <span class=\"token comment\">#3 (MBR partition #3)</span>\nEnter an MBR hex code <span class=\"token punctuation\">(</span>default <span class=\"token number\">83</span><span class=\"token punctuation\">)</span>: \nSet the bootable flag? <span class=\"token punctuation\">(</span>Y/N<span class=\"token punctuation\">)</span>: Y\n\nRecovery/transformation <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">(</span>? <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">help</span><span class=\"token punctuation\">)</span>: x\nExpert <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">(</span>? <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">help</span><span class=\"token punctuation\">)</span>: h\nExpert <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">(</span>? <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">help</span><span class=\"token punctuation\">)</span>: w\n\nFinal checks complete. About to <span class=\"token function\">write</span> GPT data. THIS WILL OVERWRITE EXISTING\nPARTITIONS<span class=\"token operator\">!</span><span class=\"token operator\">!</span>\n\nDo you want to proceed? <span class=\"token punctuation\">(</span>Y/N<span class=\"token punctuation\">)</span>: Y<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p><strong>如果不需要兼容，不用做这一步，混合分区会在设备上存在两个分区表，系统识别这个设备分区的时候具体的行为完全依赖于系统的实现，非常不稳定</strong></p>\n</blockquote>\n<blockquote>\n<p><strong>注意：写完hybrid之后，默认的windows中就只认MBR分区，假设分区按上面的例子，且还有一个4号分区，那么由于MBR的限制</strong><br><strong>在windows中第四个分区是无法正确识别文件系统的，如果要使用第四个分区且要通过MBR引导，那么这里就要在MBR写入134分区</strong><br><strong>ESP分区可以不用写到MBR里</strong></p>\n</blockquote>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pacman <span class=\"token parameter variable\">-S</span> efibootmgr grub amd-ucode intel-ucode\n\n<span class=\"token comment\"># uefi + MBR(BIOS)混合启动</span>\ngrub-install <span class=\"token parameter variable\">--target</span><span class=\"token operator\">=</span>x86_64-efi --efi-directory<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>挂载点,如/mnt/boot/EFI<span class=\"token punctuation\">&#125;</span> <span class=\"token parameter variable\">--removable</span>\n --bootloader-id<span class=\"token operator\">=</span>GRUB --boot-directory<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>root挂载点,如/mnt<span class=\"token punctuation\">&#125;</span>/boot\n\ngrub-install <span class=\"token parameter variable\">--target</span><span class=\"token operator\">=</span>i386-pc <span class=\"token parameter variable\">--recheck</span> --boot-directory<span class=\"token operator\">=</span>/DATA_MOUNTPOINT/boot /dev/sdX <span class=\"token comment\">#注意这里是整个设备</span>\n\n<span class=\"token comment\"># 作为保险</span>\ngrub-install <span class=\"token parameter variable\">--target</span><span class=\"token operator\">=</span>i386-pc <span class=\"token parameter variable\">--recheck</span> --boot-directory<span class=\"token operator\">=</span>/DATA_MOUNTPOINT/boot /dev/<span class=\"token punctuation\">&#123;</span>root的那个分区<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><p>切换到已经安装的系统</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">arch-chroot /mnt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>配置grub.cfg</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grub-mkconfig</span> <span class=\"token parameter variable\">-o</span> /boot/grub/grub.cfg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"系统初始化设置\"><a href=\"#系统初始化设置\" class=\"headerlink\" title=\"系统初始化设置\"></a>系统初始化设置</h3><ul>\n<li>设置时区  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-sf</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\nhwclock <span class=\"token parameter variable\">--systohc</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li>本地化  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">locale-gen<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<p>  – 移动设备最小化磁盘访问,把日志放到内存<br>  修改<code>/etc/systemd/journald.conf.d/usbstick.conf</code><br>  写入<br>  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>Journal<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Storage</span><span class=\"token operator\">=</span>volatile\n<span class=\"token assign-left variable\">RuntimeMaxUse</span><span class=\"token operator\">=</span>30M<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\n<ul>\n<li>initramfs<br>  如果是移动设备，将<code>/etc/mkinitcpio.conf</code>中<code>HOOKS</code>里面的<code>block</code>和<code>keyboard</code>放到<code>autodetect</code>前面，然后  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mkinitcpio <span class=\"token parameter variable\">-P</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<p>  创建<code>/etc/locale.conf</code>,设置<code>LANG=en_US.UTF-8</code></p>\n<ul>\n<li><p>hostname<br>  创建<code>/etc/hostname</code>,写入主机名</p>\n</li>\n<li><p>root密码</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">passwd</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>hosts<br>  向<code>/etc/hosts</code>写入</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">127.0</span>.0.1 localhost\n::1 localhost\n<span class=\"token number\">127.0</span>.0.1 <span class=\"token punctuation\">&#123;</span>hostname<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>安装网络工具</p>\n</li>\n</ul>\n<p>  *networkmanager已经不使用dhcpcd, 因此需要安装dhclient<br>  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pacman <span class=\"token parameter variable\">-S</span> iw wpa_supplicant dialog dhcpcd dhclient netctl networkmanager network-manager-applet gnome-keyring\n<span class=\"token comment\"># 设置网络开机启动</span>\nsystemctl <span class=\"token builtin class-name\">enable</span> NetworkManager.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></p>\n<ul>\n<li>新增用户  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">useradd</span> <span class=\"token parameter variable\">-m</span> <span class=\"token parameter variable\">-G</span> users,audio,lp,optical,storage,video,wheel,power <span class=\"token parameter variable\">-s</span> /bin/bash 普通用户名\n<span class=\"token function\">passwd</span> 普通用户名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n  运行<code>visudo</code>, 去掉<code>%wheel ALL=(ALL) ALL</code>注释</li>\n</ul>\n<p><strong>到这里基本已经完成最小系统的配置和安装，在继续之前，改启动项然后reboot</strong></p>\n<h2 id=\"DE-x2F-WM-x2F-DM\"><a href=\"#DE-x2F-WM-x2F-DM\" class=\"headerlink\" title=\"DE&#x2F;WM&#x2F;DM\"></a>DE&#x2F;WM&#x2F;DM</h2><ul>\n<li><p>安装xorg</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> xorg xorg-xinit\n<span class=\"token comment\">## 移动设备要安装</span>\n<span class=\"token comment\"># xf86-input-synaptics 支持触控板</span>\n<span class=\"token comment\"># xf86-video-vesa, xf86-video-ati, xf86-video-intel, xf86-video-amdgpu, xf86-video-nouveau and xf86-video-fbdev. 大多数的开源显卡驱动</span>\n<span class=\"token comment\">#  libeatmydata  可以禁用fsync，比如对于firefox：eatmydata firefox</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>安装字体</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> terminus-font <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>安装DE</p>\n<ul>\n<li>Mate<ul>\n<li>安装mate<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> mate mate-extra<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>配置xinitrc<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> /etc/X11/xinit/xinitrc ~/.xinitrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n把最后的启动换成<code>exec mate-session</code></li>\n</ul>\n</li>\n<li>XFCE<ul>\n<li>安装xfce<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> xfce4 xfce4-goodies<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>配置xinitrc<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> /etc/X11/xinit/xinitrc ~/.xinitrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n把最后的启动换成<code>exec startxfce4</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>仅安装WM</p>\n<p><em>(略)</em></p>\n</li>\n<li><p>安装DM</p>\n<ul>\n<li>lightdm<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> lightdm-gtk-greeter<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"支持hyper-v增强模式\"><a href=\"#支持hyper-v增强模式\" class=\"headerlink\" title=\"支持hyper-v增强模式\"></a>支持hyper-v增强模式</h3>  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://www.github.com/Microsoft/linux-vm-tools\n<span class=\"token builtin class-name\">cd</span> linux-vm-tools/arch\n<span class=\"token comment\"># 要先开代理</span>\n./make<span class=\"token punctuation\">..</span>.\n./install<span class=\"token punctuation\">..</span>.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后记得在win中用管理员设置</p>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">Set-VM -VMName &lt;your_vm_name&gt;  -EnhancedSessionTransportType HvSocket<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>  <strong>如果无法通过增强模式连接</strong></p>\n<p>  <a href=\"https://wiki.archlinux.org/title/Xrdp#loginctl_or_systemctl_--user_not_working\">arch wiki [loginctl or systemctl –user not working]</a></p>\n<p>  Try commenting out all the references to <code>systemd-home</code> in <code>/etc/pam.d/system-auth</code>, see <a href=\"https://github.com/neutrinolabs/xrdp/issues/1684\">github issue</a></p>\n<h3 id=\"alias\"><a href=\"#alias\" class=\"headerlink\" title=\"alias\"></a>alias</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">s</span><span class=\"token operator\">=</span><span class=\"token string\">'sudo'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">ls</span><span class=\"token operator\">=</span><span class=\"token string\">'ls --color=auto'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">la</span><span class=\"token operator\">=</span><span class=\"token string\">'ls -a --color=auto'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">ll</span><span class=\"token operator\">=</span><span class=\"token string\">'ls -l --color=auto'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">lla</span><span class=\"token operator\">=</span><span class=\"token string\">'ls -l -a --color=auto'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">pac</span><span class=\"token operator\">=</span><span class=\"token string\">'pacman -S'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">pacyu</span><span class=\"token operator\">=</span><span class=\"token string\">'pacman -Syu'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">spac</span><span class=\"token operator\">=</span><span class=\"token string\">'sudo pacman -S'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">spacyu</span><span class=\"token operator\">=</span><span class=\"token string\">'sudo pacman -Syu'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">v</span><span class=\"token operator\">=</span><span class=\"token string\">'vim'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">sv</span><span class=\"token operator\">=</span><span class=\"token string\">'sudo vim'</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"rsync备份\"><a href=\"#rsync备份\" class=\"headerlink\" title=\"rsync备份\"></a>rsync备份</h3><ul>\n<li>安装rsync<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> <span class=\"token function\">rsync</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>backup.sh<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> start to backup... type device:'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token builtin class-name\">read</span> device <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> type mount dir:'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token builtin class-name\">read</span> mount_dir <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> umount $device...'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token function\">umount</span> <span class=\"token variable\">$device</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">\\</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> umount /mnt/$mount_dir...'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token function\">umount</span> /mnt/<span class=\"token variable\">$mount_dir</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> remove /mnt/$mount_dir...'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /mnt/<span class=\"token variable\">$mount_dir</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> create directory /mnt/$mount_dir...'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token function\">mkdir</span> /mnt/<span class=\"token variable\">$mount_dir</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> mount $device to /mnt/$mount_dir...'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token function\">mount</span> <span class=\"token variable\">$device</span> /mnt/<span class=\"token variable\">$mount_dir</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> create direcotry /mnt/$mount_dir/system_bakcup...'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token function\">mkdir</span> /mnt/<span class=\"token variable\">$mount_dir</span>/system_backup<span class=\"token punctuation\">;</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> start to sync files to /mnt/$mount_dir/system_backup...'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token function\">rsync</span> <span class=\"token parameter variable\">--archive</span> --one-file-system --hard-links <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--acls</span> <span class=\"token parameter variable\">--xattrs</span> <span class=\"token parameter variable\">--sparse</span> <span class=\"token punctuation\">\\</span>\n\t--human-readable --numeric-ids <span class=\"token parameter variable\">--delete</span> --delete-excluded <span class=\"token punctuation\">\\</span>\n\t--itemize-changes <span class=\"token parameter variable\">--verbose</span> <span class=\"token parameter variable\">--progress</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span><span class=\"token string\">'*~'</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span><span class=\"token string\">'$device'</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span><span class=\"token string\">'/mnt'</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span><span class=\"token string\">'/dev'</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span><span class=\"token string\">'/var/tmp'</span> <span class=\"token punctuation\">\\</span>\n\t<span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span><span class=\"token string\">'/tmp'</span> <span class=\"token punctuation\">\\</span>\n\t/ /mnt/<span class=\"token variable\">$mount_dir</span>/system_backup <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'==> finished.'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"中文及字体设置\"><a href=\"#中文及字体设置\" class=\"headerlink\" title=\"中文及字体设置\"></a>中文及字体设置</h3><ul>\n<li>语言配置<br>去掉<code>/etc/locale.gen</code>中的<code>zh_CN.UTF-8 UTF-8</code>和<code>en_US.UTF-8 UTF-8</code>的注释</li>\n</ul>\n<p>根据需要在<code>~/.xinitrc</code>或者<code>~/.bashrc</code>配置</p>\n<p><strong>在<code>~/.xinitrc</code>中配置要注意在<code>exec xxx</code>之前</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">LANG</span></span><span class=\"token operator\">=</span>zh_CN.UTF-8\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">LANGUAGE</span></span><span class=\"token operator\">=</span>zh_CN:en_US<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ul>\n<li>字体配置<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> wqy-bitmapfont wqy-microhei noto-fonts noto-fonts-emoji<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n设置<code>~/.config/fontconfig/fonts.conf</code><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\"?></span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">fontconfig</span> <span class=\"token name\">SYSTEM</span> <span class=\"token string\">'fonts.dtd'</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fontconfig</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token comment\">&lt;!-- 显示器使用的像素排列方式 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assign<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rgba<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>const</span><span class=\"token punctuation\">></span></span>rgb<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>const</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token comment\">&lt;!-- 字体微调的程度, 可选 hintnone, hintslight (默认), hintmedium, hintfull. --></span>\n  <span class=\"token comment\">&lt;!-- 更高的 hinting 等级可使字体更锐利，同时也会损失更多的细节 --></span>\n  <span class=\"token comment\">&lt;!-- 如果显示器的 DPI 高得不像话 (>=300), 可关闭 hinting, 字体会自然对齐像素 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assign<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hintstyle<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>const</span><span class=\"token punctuation\">></span></span>hintslight<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>const</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token comment\">&lt;!-- 抗锯齿. 除非屏幕DPI奇高否则建议开启 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assign<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>antialias<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bool</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bool</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n\n<span class=\"token comment\">&lt;!-- 全局默认字体　--></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prepend<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- 全局默认英文字体 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">compare</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>contains<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lang<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>en<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prepend<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- 全局默认中文字体 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">compare</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>contains<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lang<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>zh<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prepend<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- 默认无衬线字体 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">qual</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>any<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>sans-serif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prepend<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>same<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- 默认衬线字体 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">qual</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>any<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>serif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prepend<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>same<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- 默认等宽字体 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">qual</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>any<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>monospace<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prepend<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>same<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token comment\">&lt;!-- 字体替换 --></span>\n  <span class=\"token comment\">&lt;!--SimSun, Microsoft YaHei, SimHei -> WenQuanYi Micro Hei --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>宋体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assign<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>strong<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token comment\">&lt;!-- &lt;string>Noto Serif CJK SC&lt;/string> --></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>SimSun<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assign<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>strong<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token comment\">&lt;!-- &lt;string>Noto Serif CJK SC&lt;/string> --></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">qual</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>any<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>SimSun-18030<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assign<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>same<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n         <span class=\"token comment\">&lt;!-- &lt;string>Noto Serif CJK SC&lt;/string> --></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">qual</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>any<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Microsoft YaHei<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assign<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>same<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">qual</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>any<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>SimHei<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assign<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>same<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Times New Roman<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>append<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>strong<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>match</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>test</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>test</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>edit</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>family<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>append<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>strong<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>edit</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>match</span><span class=\"token punctuation\">></span></span>\n\n\n<span class=\"token comment\">&lt;!-- 备用字体优先顺序 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>alias</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>sans-serif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>prefer</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Color Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK SC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK TC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK JP<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK KR<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>prefer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>alias</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>alias</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>serif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>prefer</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Color Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK SC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK TC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK JP<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK KR<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>prefer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>alias</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>alias</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>monospace<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>prefer</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Color Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK SC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK TC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK JP<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK KR<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>prefer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>alias</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fontconfig</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n设置字体偏好:<code>/etc/fonts/conf.d/64-language-selector-prefer.conf</code><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\"?></span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">fontconfig</span> <span class=\"token name\">SYSTEM</span> <span class=\"token string\">'fonts.dtd'</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fontconfig</span><span class=\"token punctuation\">></span></span>  \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>alias</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>sans-serif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>prefer</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Color Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK SC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK TC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK JP<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK KR<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>prefer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>alias</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>alias</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>serif<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>prefer</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Color Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK SC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK TC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK JP<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK KR<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>prefer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>alias</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>alias</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>monospace<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>prefer</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Terminus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Color Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Emoji<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK SC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK TC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK JP<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>family</span><span class=\"token punctuation\">></span></span>Noto Sans CJK KR<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>family</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>prefer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>alias</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fontconfig</span><span class=\"token punctuation\">></span></span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"安装fcitx5\"><a href=\"#安装fcitx5\" class=\"headerlink\" title=\"安装fcitx5\"></a>安装fcitx5</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> fcitx5-im fcitx5-chinese-addons fcitx5-mozc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"xfce的声音\"><a href=\"#xfce的声音\" class=\"headerlink\" title=\"xfce的声音\"></a>xfce的声音</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> alsa-utils pulseaudio pulseaudio-alsa <span class=\"token punctuation\">\\</span>\n pavucontrol      <span class=\"token comment\">#与xfce4 panel里面的插件配合使用,必须要有这个进程</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>xfce4 panel设置里面添加一个pulseaudio plugin的插件</p>\n<p><code>alsamixer</code> F6选择声卡,然后把mm的M键去掉,上下箭头调节,auto-mute disable了以后,loopback enable. reboot重启,这时候xfce4的插件就可以调节声音了</p>\n<h3 id=\"安装chrome\"><a href=\"#安装chrome\" class=\"headerlink\" title=\"安装chrome\"></a>安装chrome</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#AUR 助手</span>\n<span class=\"token function\">git</span> clone https://aur.archlinux.org/yay-git.git\n<span class=\"token builtin class-name\">cd</span> yay-git\nmakepkg <span class=\"token parameter variable\">-si</span>\n\n<span class=\"token comment\">#yay不要用root</span>\nyay <span class=\"token parameter variable\">-S</span> google-chrome\n\n<span class=\"token comment\">#升级</span>\nyay <span class=\"token parameter variable\">-Syu</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"安装clash\"><a href=\"#安装clash\" class=\"headerlink\" title=\"安装clash\"></a>安装clash</h3><p>看<a href=\"https://blog.linioi.com/posts/clash-on-arch/\">这</a><br>或者<a href=\"https://github.com/Fndroid/clash_for_windows_pkg/releases\">class for windows</a></p>\n<h3 id=\"支持ntfs\"><a href=\"#支持ntfs\" class=\"headerlink\" title=\"支持ntfs\"></a>支持ntfs</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> ntfs-3g<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>"},{"title":"MySQL中的大小写敏感排序规则","date":"2022-06-17T07:51:08.000Z","_content":"\n## utf8mb4字符集排序规则\n\n在MySQL8.0.1之前，utf8mb4没有cs排序规则，大小写敏感的排序规则只能用`utf8mb4_bin`，然后通过类似于`SELECT ... ORDER BY column COLLATE utf8_croatian_ci.`的方法来得到更“human”的排序结果。（bin的排序方式按照类似ACSII顺序，比如大小写的字母不一定会在一起）\n- [SELECT * FROM mytable WHERE name COLLATE utf8_bin =\"azolia\"](https://forums.mysql.com/read.php?103,156527,198794#msg-198794)\n- [SELECT ... ORDER BY column COLLATE utf8_croatian_ci](https://forums.mysql.com/read.php?103,19380,200971#msg-200971)\n\n\nMySQL8.0.1之后的版本支持utf8mb4字符集的大小写敏感排序规则（utf8mb4_0900_*_as_cs）\n\n> 0900是指unicode的版本，同utf8mb4_general_520_ci的520，都应该是指排序算法版本（一种类似谁前谁后的排序规则），没有细究\n> as表示accent sensitive（他真的我哭死，竟然支持了读音排序）\n\n- [MySQL 8.0.1: Accent and case sensitive collations for utf8mb4](https://dev.mysql.com/blog-archive/mysql-8-0-1-accent-and-case-sensitive-collations-for-utf8mb4/)\n- [New collations in MySQL 8.0.0](https://dev.mysql.com/blog-archive/new-collations-in-mysql-8-0-0/)\n","source":"_posts/case-sensitive-collation-in-mysql.md","raw":"---\ntitle: MySQL中的大小写敏感排序规则\ndate: 2022-06-17 15:51:08\ncategories:\n    - 基础姿势\n    - 中间件\ntags:\n    - MySQL\n    - charset\n    - collation\n---\n\n## utf8mb4字符集排序规则\n\n在MySQL8.0.1之前，utf8mb4没有cs排序规则，大小写敏感的排序规则只能用`utf8mb4_bin`，然后通过类似于`SELECT ... ORDER BY column COLLATE utf8_croatian_ci.`的方法来得到更“human”的排序结果。（bin的排序方式按照类似ACSII顺序，比如大小写的字母不一定会在一起）\n- [SELECT * FROM mytable WHERE name COLLATE utf8_bin =\"azolia\"](https://forums.mysql.com/read.php?103,156527,198794#msg-198794)\n- [SELECT ... ORDER BY column COLLATE utf8_croatian_ci](https://forums.mysql.com/read.php?103,19380,200971#msg-200971)\n\n\nMySQL8.0.1之后的版本支持utf8mb4字符集的大小写敏感排序规则（utf8mb4_0900_*_as_cs）\n\n> 0900是指unicode的版本，同utf8mb4_general_520_ci的520，都应该是指排序算法版本（一种类似谁前谁后的排序规则），没有细究\n> as表示accent sensitive（他真的我哭死，竟然支持了读音排序）\n\n- [MySQL 8.0.1: Accent and case sensitive collations for utf8mb4](https://dev.mysql.com/blog-archive/mysql-8-0-1-accent-and-case-sensitive-collations-for-utf8mb4/)\n- [New collations in MySQL 8.0.0](https://dev.mysql.com/blog-archive/new-collations-in-mysql-8-0-0/)\n","slug":"case-sensitive-collation-in-mysql","published":1,"updated":"2023-03-17T02:30:47.688Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdt30007xtuj4qhoc6ud","content":"<h2 id=\"utf8mb4字符集排序规则\"><a href=\"#utf8mb4字符集排序规则\" class=\"headerlink\" title=\"utf8mb4字符集排序规则\"></a>utf8mb4字符集排序规则</h2><p>在MySQL8.0.1之前，utf8mb4没有cs排序规则，大小写敏感的排序规则只能用<code>utf8mb4_bin</code>，然后通过类似于<code>SELECT ... ORDER BY column COLLATE utf8_croatian_ci.</code>的方法来得到更“human”的排序结果。（bin的排序方式按照类似ACSII顺序，比如大小写的字母不一定会在一起）</p>\n<ul>\n<li><a href=\"https://forums.mysql.com/read.php?103,156527,198794#msg-198794\">SELECT * FROM mytable WHERE name COLLATE utf8_bin &#x3D;”azolia”</a></li>\n<li><a href=\"https://forums.mysql.com/read.php?103,19380,200971#msg-200971\">SELECT … ORDER BY column COLLATE utf8_croatian_ci</a></li>\n</ul>\n<p>MySQL8.0.1之后的版本支持utf8mb4字符集的大小写敏感排序规则（utf8mb4_0900_*_as_cs）</p>\n<blockquote>\n<p>0900是指unicode的版本，同utf8mb4_general_520_ci的520，都应该是指排序算法版本（一种类似谁前谁后的排序规则），没有细究<br>as表示accent sensitive（他真的我哭死，竟然支持了读音排序）</p>\n</blockquote>\n<ul>\n<li><a href=\"https://dev.mysql.com/blog-archive/mysql-8-0-1-accent-and-case-sensitive-collations-for-utf8mb4/\">MySQL 8.0.1: Accent and case sensitive collations for utf8mb4</a></li>\n<li><a href=\"https://dev.mysql.com/blog-archive/new-collations-in-mysql-8-0-0/\">New collations in MySQL 8.0.0</a></li>\n</ul>\n","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<h2 id=\"utf8mb4字符集排序规则\"><a href=\"#utf8mb4字符集排序规则\" class=\"headerlink\" title=\"utf8mb4字符集排序规则\"></a>utf8mb4字符集排序规则</h2><p>在MySQL8.0.1之前，utf8mb4没有cs排序规则，大小写敏感的排序规则只能用<code>utf8mb4_bin</code>，然后通过类似于<code>SELECT ... ORDER BY column COLLATE utf8_croatian_ci.</code>的方法来得到更“human”的排序结果。（bin的排序方式按照类似ACSII顺序，比如大小写的字母不一定会在一起）</p>\n<ul>\n<li><a href=\"https://forums.mysql.com/read.php?103,156527,198794#msg-198794\">SELECT * FROM mytable WHERE name COLLATE utf8_bin &#x3D;”azolia”</a></li>\n<li><a href=\"https://forums.mysql.com/read.php?103,19380,200971#msg-200971\">SELECT … ORDER BY column COLLATE utf8_croatian_ci</a></li>\n</ul>\n<p>MySQL8.0.1之后的版本支持utf8mb4字符集的大小写敏感排序规则（utf8mb4_0900_*_as_cs）</p>\n<blockquote>\n<p>0900是指unicode的版本，同utf8mb4_general_520_ci的520，都应该是指排序算法版本（一种类似谁前谁后的排序规则），没有细究<br>as表示accent sensitive（他真的我哭死，竟然支持了读音排序）</p>\n</blockquote>\n<ul>\n<li><a href=\"https://dev.mysql.com/blog-archive/mysql-8-0-1-accent-and-case-sensitive-collations-for-utf8mb4/\">MySQL 8.0.1: Accent and case sensitive collations for utf8mb4</a></li>\n<li><a href=\"https://dev.mysql.com/blog-archive/new-collations-in-mysql-8-0-0/\">New collations in MySQL 8.0.0</a></li>\n</ul>\n"},{"title":"Blender (cycles/eevee) 着色器：原理化BSDF","date":"2022-06-18T15:59:44.000Z","_content":"\n> 参照[官方文档](https://docs.blender.org/manual/zh-hans/3.1/render/shader_nodes/shader/principled.html)学习🙂\n\n## 着色器`shader`\n\n### 原理化BSDF`pricipled BSDF`\n\n\n自带的eevee和cycles（或cycles-e之类的衍生）渲染器使用的着色器。\n\n> 如果使用octane渲染器，就要用universal material着色器，但基本的着色原理大差不差\n\n### 输入\n![principled BSDF](blender-learning-memo0/render_shader-nodes_shader_principled_node.png)\n\n#### 基础色`Base Color`\n漫射或金属表面颜色。\n\n\n#### 次表面`Subsurface`\n漫反射和次表面散射之间的混合。并非漫反射和次表面散射之间的简单混合，而是会与次表面半径的数值进行相乘运算。\n\n\n#### 次表面半径`Subsurface Radius`\n光散射到表面下方的平均距离。较高的半径可以使外观更柔和，因为光线会流入阴影区域并穿过物体。散射距离是针对RGB通道单独指定的，对于具有较强红光散射的皮肤材质，渲染效果较佳。X，Y和Z的数值会分别映射到R，G和B的值。\n\n\n#### 次表面颜色`Subsurface Color`\n次表面基础颜色。\n\n\n#### 次表面折射率`Subsurface IOR`（只支持cycles）\n次表面散射的折射率。\n\n\n#### 次表面各向异性`Subsurface Anisotropy`（只支持cycles）\n控制次表面散射的方向性。\n\n\n#### 金属度`Metallic`\n从无金属到全金属的混合材质模式。数值为1.0时表现为基础颜色叠加完全镜面反射着色，不含任何漫射或透明属性。数值为0.0时材质变现为底层的漫射或透明层样子，但顶部仍保留着一层反射层。\n\n\n#### 镜面反射`Specular`\n非传导性高光反射量。表面沿法线方向的反射率常设定在0-8％范围内。\n```text\n可以使用下面这个特殊情况下的菲涅耳公式，来计算具有已知折射率的真实材质计算高光值：\n    specular = ((ior - 1)/(ior + 1))^2 / 0.08 \n例如：\n    水: 折射率 = 1.33, 高光 = 0.25\n    玻璃: 折射率 = 1.5, 高光 = 0.5\n    钻石: 折射率 = 2.417, 高光 = 2.15\n由于确实存在反射率高于8％的材料，因此该处允许取值大于1。\n```\n\n\n#### 高光染色`Specular Tint`\n使用基础色对朝向面进行高光反射，而镜面反射保持白色。\n\n普通电介质具有无色反射，因此该参数在技术上并不具有物理学上的正确性，但可用于模拟具有复杂表面结构的材质外观。\n\n\n#### 粗糙度`Roughness`\n用于确定漫反射和镜面反射时，物体表面的微平面粗糙度。\n```text\n从旧版的 光泽 BSDF 着色器节点转换时，应使用原始值的平方根。\n```\n\n\n#### 各向异性过滤`Anisotropic`（只支持cycles）\n镜面反射的各向异性量。较高的设定值可提供沿切线方向的细长高光；设定为负值则会给出垂直于切线方向的高光。\n\n\n#### 各向异性旋转`Anisotropic Rotation`（只支持cycles）\n旋转各向异性的方向，取值为1.0时，旋转一周。\n```text\n与 各向异性 BSDF 着色器节点不同，该节点的高光延伸方向会旋转90°。可通过增加0.25的旋转值进行更正。\n```\n![Anisotropic & Roughness 1](blender-learning-memo0/render_shader-nodes_shader_principled_example-2a.jpg)\n![Anisotropic & Roughness 2](blender-learning-memo0/render_shader-nodes_shader_principled_example-2b.jpg)\n\n#### 光泽`Sheen`\n边缘附近类似天鹅绒材质的反射数量，用于模拟布料等材质。\n\n- 也可以用于表现人脸或者皮肤上面的汗毛效果，在光照下微微的发光\n\n\n#### 光泽染色`Sheen Tint`\n在白色和基础色之间进行混合，以获得光泽反射效果。\n\n\n#### 清漆`Clearcoat`\n物体顶部的白色高光层。适用于汽车油漆等材质的模拟。\n\n\n#### 清漆粗糙度`Clearcoat Roughness`\n清漆的粗糙度。\n\n\n#### IOR\n折射率。\n\n\n#### 传递采样`Transmission`\n数值设定为0时，表面完全不透明；数值设定为1时，表面为玻璃状。不同的取值代表上述两种状态的混合效果。\n\n\n#### 透射粗糙度`Transmission Roughness`（只支持cycles）\n与 GGX 分布一起，用于控制透射光的粗糙度。\n\n\n#### 自发光(发射)`Emission`\n来自表面的自发光，与自发光着色器类似。\n\n\n#### 自发光强度`Emission Strength`\n发射光的强度。值 1.0 将确保图像中的对象具有与自发光颜色完全相同的颜色，即使其“无阴影”。\n\n\n#### Alpha\n控制表面的透明度，数值设定为1.0时，表面完全不透明。通常连接到 “图像纹理” 着色器节点的Alpha输出接口。\n\n\n#### 法向`Normal`\n控制基础图层的法线方向。\n\n\n#### 清漆法线`Clearcoat Normal`\n控制 清漆 图层的法线方向。\n\n\n#### 切向(正切)`Tangent`\n控制 各向异性 图层的法线方向。\n\n\n### 属性\n#### 分布\n- GGX\n  - 比 多重散射 GGX 渲染速度快，但不够精确。选择它后，可以启用 透射粗糙度 输入选项。\n- 多重散射 GGX\n  - 会计算微平面之间的多次反弹和散射。这样就可以使物体不会因为过度变暗而显得突兀。\n\n\n#### 次表面方法\n模拟次表面散射的渲染方式。eevee不支持\n- 克里斯坦森-伯利\n  - 基于物理的体积散射的近似值。这种方法不如随机游走准确，但是在某些情况下，这种方法会更快地解决噪声。\n- 随机游走（固定半径）\n  - 为薄而弯曲的物体提供准确的结果。 Random Walk 在网格内部使用真正的体积散射，这意味着它最适合封闭网格。网格中的重叠面和孔可能会导致问题。\n- 随机游走\n  - 行为类似于随机游走（固定半径），但根据颜色、次表面各向异性和次表面 IOR 调整次表面半径。因此，此方法试图保留比随机游走（固定半径）更多的表面细节和颜色。\n\n\n### 样例\n![principled example 1](blender-learning-memo0/render_shader-nodes_shader_principled_example-1a.jpg)","source":"_posts/blender-learning-memo0.md","raw":"---\ntitle: Blender (cycles/eevee) 着色器：原理化BSDF\ndate: 2022-06-18 23:59:44\ncategories:\n    - 伸展运动\n    - 3D渲染\ntags:\n    - blender\n    - shading\n    - render\n    - cycles\n    - eevee\n    - BSDF\n---\n\n> 参照[官方文档](https://docs.blender.org/manual/zh-hans/3.1/render/shader_nodes/shader/principled.html)学习🙂\n\n## 着色器`shader`\n\n### 原理化BSDF`pricipled BSDF`\n\n\n自带的eevee和cycles（或cycles-e之类的衍生）渲染器使用的着色器。\n\n> 如果使用octane渲染器，就要用universal material着色器，但基本的着色原理大差不差\n\n### 输入\n![principled BSDF](blender-learning-memo0/render_shader-nodes_shader_principled_node.png)\n\n#### 基础色`Base Color`\n漫射或金属表面颜色。\n\n\n#### 次表面`Subsurface`\n漫反射和次表面散射之间的混合。并非漫反射和次表面散射之间的简单混合，而是会与次表面半径的数值进行相乘运算。\n\n\n#### 次表面半径`Subsurface Radius`\n光散射到表面下方的平均距离。较高的半径可以使外观更柔和，因为光线会流入阴影区域并穿过物体。散射距离是针对RGB通道单独指定的，对于具有较强红光散射的皮肤材质，渲染效果较佳。X，Y和Z的数值会分别映射到R，G和B的值。\n\n\n#### 次表面颜色`Subsurface Color`\n次表面基础颜色。\n\n\n#### 次表面折射率`Subsurface IOR`（只支持cycles）\n次表面散射的折射率。\n\n\n#### 次表面各向异性`Subsurface Anisotropy`（只支持cycles）\n控制次表面散射的方向性。\n\n\n#### 金属度`Metallic`\n从无金属到全金属的混合材质模式。数值为1.0时表现为基础颜色叠加完全镜面反射着色，不含任何漫射或透明属性。数值为0.0时材质变现为底层的漫射或透明层样子，但顶部仍保留着一层反射层。\n\n\n#### 镜面反射`Specular`\n非传导性高光反射量。表面沿法线方向的反射率常设定在0-8％范围内。\n```text\n可以使用下面这个特殊情况下的菲涅耳公式，来计算具有已知折射率的真实材质计算高光值：\n    specular = ((ior - 1)/(ior + 1))^2 / 0.08 \n例如：\n    水: 折射率 = 1.33, 高光 = 0.25\n    玻璃: 折射率 = 1.5, 高光 = 0.5\n    钻石: 折射率 = 2.417, 高光 = 2.15\n由于确实存在反射率高于8％的材料，因此该处允许取值大于1。\n```\n\n\n#### 高光染色`Specular Tint`\n使用基础色对朝向面进行高光反射，而镜面反射保持白色。\n\n普通电介质具有无色反射，因此该参数在技术上并不具有物理学上的正确性，但可用于模拟具有复杂表面结构的材质外观。\n\n\n#### 粗糙度`Roughness`\n用于确定漫反射和镜面反射时，物体表面的微平面粗糙度。\n```text\n从旧版的 光泽 BSDF 着色器节点转换时，应使用原始值的平方根。\n```\n\n\n#### 各向异性过滤`Anisotropic`（只支持cycles）\n镜面反射的各向异性量。较高的设定值可提供沿切线方向的细长高光；设定为负值则会给出垂直于切线方向的高光。\n\n\n#### 各向异性旋转`Anisotropic Rotation`（只支持cycles）\n旋转各向异性的方向，取值为1.0时，旋转一周。\n```text\n与 各向异性 BSDF 着色器节点不同，该节点的高光延伸方向会旋转90°。可通过增加0.25的旋转值进行更正。\n```\n![Anisotropic & Roughness 1](blender-learning-memo0/render_shader-nodes_shader_principled_example-2a.jpg)\n![Anisotropic & Roughness 2](blender-learning-memo0/render_shader-nodes_shader_principled_example-2b.jpg)\n\n#### 光泽`Sheen`\n边缘附近类似天鹅绒材质的反射数量，用于模拟布料等材质。\n\n- 也可以用于表现人脸或者皮肤上面的汗毛效果，在光照下微微的发光\n\n\n#### 光泽染色`Sheen Tint`\n在白色和基础色之间进行混合，以获得光泽反射效果。\n\n\n#### 清漆`Clearcoat`\n物体顶部的白色高光层。适用于汽车油漆等材质的模拟。\n\n\n#### 清漆粗糙度`Clearcoat Roughness`\n清漆的粗糙度。\n\n\n#### IOR\n折射率。\n\n\n#### 传递采样`Transmission`\n数值设定为0时，表面完全不透明；数值设定为1时，表面为玻璃状。不同的取值代表上述两种状态的混合效果。\n\n\n#### 透射粗糙度`Transmission Roughness`（只支持cycles）\n与 GGX 分布一起，用于控制透射光的粗糙度。\n\n\n#### 自发光(发射)`Emission`\n来自表面的自发光，与自发光着色器类似。\n\n\n#### 自发光强度`Emission Strength`\n发射光的强度。值 1.0 将确保图像中的对象具有与自发光颜色完全相同的颜色，即使其“无阴影”。\n\n\n#### Alpha\n控制表面的透明度，数值设定为1.0时，表面完全不透明。通常连接到 “图像纹理” 着色器节点的Alpha输出接口。\n\n\n#### 法向`Normal`\n控制基础图层的法线方向。\n\n\n#### 清漆法线`Clearcoat Normal`\n控制 清漆 图层的法线方向。\n\n\n#### 切向(正切)`Tangent`\n控制 各向异性 图层的法线方向。\n\n\n### 属性\n#### 分布\n- GGX\n  - 比 多重散射 GGX 渲染速度快，但不够精确。选择它后，可以启用 透射粗糙度 输入选项。\n- 多重散射 GGX\n  - 会计算微平面之间的多次反弹和散射。这样就可以使物体不会因为过度变暗而显得突兀。\n\n\n#### 次表面方法\n模拟次表面散射的渲染方式。eevee不支持\n- 克里斯坦森-伯利\n  - 基于物理的体积散射的近似值。这种方法不如随机游走准确，但是在某些情况下，这种方法会更快地解决噪声。\n- 随机游走（固定半径）\n  - 为薄而弯曲的物体提供准确的结果。 Random Walk 在网格内部使用真正的体积散射，这意味着它最适合封闭网格。网格中的重叠面和孔可能会导致问题。\n- 随机游走\n  - 行为类似于随机游走（固定半径），但根据颜色、次表面各向异性和次表面 IOR 调整次表面半径。因此，此方法试图保留比随机游走（固定半径）更多的表面细节和颜色。\n\n\n### 样例\n![principled example 1](blender-learning-memo0/render_shader-nodes_shader_principled_example-1a.jpg)","slug":"blender-learning-memo0","published":1,"updated":"2023-03-17T02:30:47.683Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdt40009xtuj6os13itx","content":"<blockquote>\n<p>参照<a href=\"https://docs.blender.org/manual/zh-hans/3.1/render/shader_nodes/shader/principled.html\">官方文档</a>学习🙂</p>\n</blockquote>\n<h2 id=\"着色器shader\"><a href=\"#着色器shader\" class=\"headerlink\" title=\"着色器shader\"></a>着色器<code>shader</code></h2><h3 id=\"原理化BSDFpricipled-BSDF\"><a href=\"#原理化BSDFpricipled-BSDF\" class=\"headerlink\" title=\"原理化BSDFpricipled BSDF\"></a>原理化BSDF<code>pricipled BSDF</code></h3><p>自带的eevee和cycles（或cycles-e之类的衍生）渲染器使用的着色器。</p>\n<blockquote>\n<p>如果使用octane渲染器，就要用universal material着色器，但基本的着色原理大差不差</p>\n</blockquote>\n<h3 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h3><p><img src=\"/2022/06/18/blender-learning-memo0/render_shader-nodes_shader_principled_node.png\" alt=\"principled BSDF\"></p>\n<h4 id=\"基础色Base-Color\"><a href=\"#基础色Base-Color\" class=\"headerlink\" title=\"基础色Base Color\"></a>基础色<code>Base Color</code></h4><p>漫射或金属表面颜色。</p>\n<h4 id=\"次表面Subsurface\"><a href=\"#次表面Subsurface\" class=\"headerlink\" title=\"次表面Subsurface\"></a>次表面<code>Subsurface</code></h4><p>漫反射和次表面散射之间的混合。并非漫反射和次表面散射之间的简单混合，而是会与次表面半径的数值进行相乘运算。</p>\n<h4 id=\"次表面半径Subsurface-Radius\"><a href=\"#次表面半径Subsurface-Radius\" class=\"headerlink\" title=\"次表面半径Subsurface Radius\"></a>次表面半径<code>Subsurface Radius</code></h4><p>光散射到表面下方的平均距离。较高的半径可以使外观更柔和，因为光线会流入阴影区域并穿过物体。散射距离是针对RGB通道单独指定的，对于具有较强红光散射的皮肤材质，渲染效果较佳。X，Y和Z的数值会分别映射到R，G和B的值。</p>\n<h4 id=\"次表面颜色Subsurface-Color\"><a href=\"#次表面颜色Subsurface-Color\" class=\"headerlink\" title=\"次表面颜色Subsurface Color\"></a>次表面颜色<code>Subsurface Color</code></h4><p>次表面基础颜色。</p>\n<h4 id=\"次表面折射率Subsurface-IOR（只支持cycles）\"><a href=\"#次表面折射率Subsurface-IOR（只支持cycles）\" class=\"headerlink\" title=\"次表面折射率Subsurface IOR（只支持cycles）\"></a>次表面折射率<code>Subsurface IOR</code>（只支持cycles）</h4><p>次表面散射的折射率。</p>\n<h4 id=\"次表面各向异性Subsurface-Anisotropy（只支持cycles）\"><a href=\"#次表面各向异性Subsurface-Anisotropy（只支持cycles）\" class=\"headerlink\" title=\"次表面各向异性Subsurface Anisotropy（只支持cycles）\"></a>次表面各向异性<code>Subsurface Anisotropy</code>（只支持cycles）</h4><p>控制次表面散射的方向性。</p>\n<h4 id=\"金属度Metallic\"><a href=\"#金属度Metallic\" class=\"headerlink\" title=\"金属度Metallic\"></a>金属度<code>Metallic</code></h4><p>从无金属到全金属的混合材质模式。数值为1.0时表现为基础颜色叠加完全镜面反射着色，不含任何漫射或透明属性。数值为0.0时材质变现为底层的漫射或透明层样子，但顶部仍保留着一层反射层。</p>\n<h4 id=\"镜面反射Specular\"><a href=\"#镜面反射Specular\" class=\"headerlink\" title=\"镜面反射Specular\"></a>镜面反射<code>Specular</code></h4><p>非传导性高光反射量。表面沿法线方向的反射率常设定在0-8％范围内。</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">可以使用下面这个特殊情况下的菲涅耳公式，来计算具有已知折射率的真实材质计算高光值：\n    specular = ((ior - 1)/(ior + 1))^2 / 0.08 \n例如：\n    水: 折射率 = 1.33, 高光 = 0.25\n    玻璃: 折射率 = 1.5, 高光 = 0.5\n    钻石: 折射率 = 2.417, 高光 = 2.15\n由于确实存在反射率高于8％的材料，因此该处允许取值大于1。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h4 id=\"高光染色Specular-Tint\"><a href=\"#高光染色Specular-Tint\" class=\"headerlink\" title=\"高光染色Specular Tint\"></a>高光染色<code>Specular Tint</code></h4><p>使用基础色对朝向面进行高光反射，而镜面反射保持白色。</p>\n<p>普通电介质具有无色反射，因此该参数在技术上并不具有物理学上的正确性，但可用于模拟具有复杂表面结构的材质外观。</p>\n<h4 id=\"粗糙度Roughness\"><a href=\"#粗糙度Roughness\" class=\"headerlink\" title=\"粗糙度Roughness\"></a>粗糙度<code>Roughness</code></h4><p>用于确定漫反射和镜面反射时，物体表面的微平面粗糙度。</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">从旧版的 光泽 BSDF 着色器节点转换时，应使用原始值的平方根。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<h4 id=\"各向异性过滤Anisotropic（只支持cycles）\"><a href=\"#各向异性过滤Anisotropic（只支持cycles）\" class=\"headerlink\" title=\"各向异性过滤Anisotropic（只支持cycles）\"></a>各向异性过滤<code>Anisotropic</code>（只支持cycles）</h4><p>镜面反射的各向异性量。较高的设定值可提供沿切线方向的细长高光；设定为负值则会给出垂直于切线方向的高光。</p>\n<h4 id=\"各向异性旋转Anisotropic-Rotation（只支持cycles）\"><a href=\"#各向异性旋转Anisotropic-Rotation（只支持cycles）\" class=\"headerlink\" title=\"各向异性旋转Anisotropic Rotation（只支持cycles）\"></a>各向异性旋转<code>Anisotropic Rotation</code>（只支持cycles）</h4><p>旋转各向异性的方向，取值为1.0时，旋转一周。</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">与 各向异性 BSDF 着色器节点不同，该节点的高光延伸方向会旋转90°。可通过增加0.25的旋转值进行更正。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"/2022/06/18/blender-learning-memo0/render_shader-nodes_shader_principled_example-2a.jpg\" alt=\"Anisotropic &amp; Roughness 1\"><br><img src=\"/2022/06/18/blender-learning-memo0/render_shader-nodes_shader_principled_example-2b.jpg\" alt=\"Anisotropic &amp; Roughness 2\"></p>\n<h4 id=\"光泽Sheen\"><a href=\"#光泽Sheen\" class=\"headerlink\" title=\"光泽Sheen\"></a>光泽<code>Sheen</code></h4><p>边缘附近类似天鹅绒材质的反射数量，用于模拟布料等材质。</p>\n<ul>\n<li>也可以用于表现人脸或者皮肤上面的汗毛效果，在光照下微微的发光</li>\n</ul>\n<h4 id=\"光泽染色Sheen-Tint\"><a href=\"#光泽染色Sheen-Tint\" class=\"headerlink\" title=\"光泽染色Sheen Tint\"></a>光泽染色<code>Sheen Tint</code></h4><p>在白色和基础色之间进行混合，以获得光泽反射效果。</p>\n<h4 id=\"清漆Clearcoat\"><a href=\"#清漆Clearcoat\" class=\"headerlink\" title=\"清漆Clearcoat\"></a>清漆<code>Clearcoat</code></h4><p>物体顶部的白色高光层。适用于汽车油漆等材质的模拟。</p>\n<h4 id=\"清漆粗糙度Clearcoat-Roughness\"><a href=\"#清漆粗糙度Clearcoat-Roughness\" class=\"headerlink\" title=\"清漆粗糙度Clearcoat Roughness\"></a>清漆粗糙度<code>Clearcoat Roughness</code></h4><p>清漆的粗糙度。</p>\n<h4 id=\"IOR\"><a href=\"#IOR\" class=\"headerlink\" title=\"IOR\"></a>IOR</h4><p>折射率。</p>\n<h4 id=\"传递采样Transmission\"><a href=\"#传递采样Transmission\" class=\"headerlink\" title=\"传递采样Transmission\"></a>传递采样<code>Transmission</code></h4><p>数值设定为0时，表面完全不透明；数值设定为1时，表面为玻璃状。不同的取值代表上述两种状态的混合效果。</p>\n<h4 id=\"透射粗糙度Transmission-Roughness（只支持cycles）\"><a href=\"#透射粗糙度Transmission-Roughness（只支持cycles）\" class=\"headerlink\" title=\"透射粗糙度Transmission Roughness（只支持cycles）\"></a>透射粗糙度<code>Transmission Roughness</code>（只支持cycles）</h4><p>与 GGX 分布一起，用于控制透射光的粗糙度。</p>\n<h4 id=\"自发光-发射-Emission\"><a href=\"#自发光-发射-Emission\" class=\"headerlink\" title=\"自发光(发射)Emission\"></a>自发光(发射)<code>Emission</code></h4><p>来自表面的自发光，与自发光着色器类似。</p>\n<h4 id=\"自发光强度Emission-Strength\"><a href=\"#自发光强度Emission-Strength\" class=\"headerlink\" title=\"自发光强度Emission Strength\"></a>自发光强度<code>Emission Strength</code></h4><p>发射光的强度。值 1.0 将确保图像中的对象具有与自发光颜色完全相同的颜色，即使其“无阴影”。</p>\n<h4 id=\"Alpha\"><a href=\"#Alpha\" class=\"headerlink\" title=\"Alpha\"></a>Alpha</h4><p>控制表面的透明度，数值设定为1.0时，表面完全不透明。通常连接到 “图像纹理” 着色器节点的Alpha输出接口。</p>\n<h4 id=\"法向Normal\"><a href=\"#法向Normal\" class=\"headerlink\" title=\"法向Normal\"></a>法向<code>Normal</code></h4><p>控制基础图层的法线方向。</p>\n<h4 id=\"清漆法线Clearcoat-Normal\"><a href=\"#清漆法线Clearcoat-Normal\" class=\"headerlink\" title=\"清漆法线Clearcoat Normal\"></a>清漆法线<code>Clearcoat Normal</code></h4><p>控制 清漆 图层的法线方向。</p>\n<h4 id=\"切向-正切-Tangent\"><a href=\"#切向-正切-Tangent\" class=\"headerlink\" title=\"切向(正切)Tangent\"></a>切向(正切)<code>Tangent</code></h4><p>控制 各向异性 图层的法线方向。</p>\n<h3 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h3><h4 id=\"分布\"><a href=\"#分布\" class=\"headerlink\" title=\"分布\"></a>分布</h4><ul>\n<li>GGX<ul>\n<li>比 多重散射 GGX 渲染速度快，但不够精确。选择它后，可以启用 透射粗糙度 输入选项。</li>\n</ul>\n</li>\n<li>多重散射 GGX<ul>\n<li>会计算微平面之间的多次反弹和散射。这样就可以使物体不会因为过度变暗而显得突兀。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"次表面方法\"><a href=\"#次表面方法\" class=\"headerlink\" title=\"次表面方法\"></a>次表面方法</h4><p>模拟次表面散射的渲染方式。eevee不支持</p>\n<ul>\n<li>克里斯坦森-伯利<ul>\n<li>基于物理的体积散射的近似值。这种方法不如随机游走准确，但是在某些情况下，这种方法会更快地解决噪声。</li>\n</ul>\n</li>\n<li>随机游走（固定半径）<ul>\n<li>为薄而弯曲的物体提供准确的结果。 Random Walk 在网格内部使用真正的体积散射，这意味着它最适合封闭网格。网格中的重叠面和孔可能会导致问题。</li>\n</ul>\n</li>\n<li>随机游走<ul>\n<li>行为类似于随机游走（固定半径），但根据颜色、次表面各向异性和次表面 IOR 调整次表面半径。因此，此方法试图保留比随机游走（固定半径）更多的表面细节和颜色。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"样例\"><a href=\"#样例\" class=\"headerlink\" title=\"样例\"></a>样例</h3><p><img src=\"/2022/06/18/blender-learning-memo0/render_shader-nodes_shader_principled_example-1a.jpg\" alt=\"principled example 1\"></p>\n","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<blockquote>\n<p>参照<a href=\"https://docs.blender.org/manual/zh-hans/3.1/render/shader_nodes/shader/principled.html\">官方文档</a>学习🙂</p>\n</blockquote>\n<h2 id=\"着色器shader\"><a href=\"#着色器shader\" class=\"headerlink\" title=\"着色器shader\"></a>着色器<code>shader</code></h2><h3 id=\"原理化BSDFpricipled-BSDF\"><a href=\"#原理化BSDFpricipled-BSDF\" class=\"headerlink\" title=\"原理化BSDFpricipled BSDF\"></a>原理化BSDF<code>pricipled BSDF</code></h3><p>自带的eevee和cycles（或cycles-e之类的衍生）渲染器使用的着色器。</p>\n<blockquote>\n<p>如果使用octane渲染器，就要用universal material着色器，但基本的着色原理大差不差</p>\n</blockquote>\n<h3 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h3><p><img src=\"/2022/06/18/blender-learning-memo0/render_shader-nodes_shader_principled_node.png\" alt=\"principled BSDF\"></p>\n<h4 id=\"基础色Base-Color\"><a href=\"#基础色Base-Color\" class=\"headerlink\" title=\"基础色Base Color\"></a>基础色<code>Base Color</code></h4><p>漫射或金属表面颜色。</p>\n<h4 id=\"次表面Subsurface\"><a href=\"#次表面Subsurface\" class=\"headerlink\" title=\"次表面Subsurface\"></a>次表面<code>Subsurface</code></h4><p>漫反射和次表面散射之间的混合。并非漫反射和次表面散射之间的简单混合，而是会与次表面半径的数值进行相乘运算。</p>\n<h4 id=\"次表面半径Subsurface-Radius\"><a href=\"#次表面半径Subsurface-Radius\" class=\"headerlink\" title=\"次表面半径Subsurface Radius\"></a>次表面半径<code>Subsurface Radius</code></h4><p>光散射到表面下方的平均距离。较高的半径可以使外观更柔和，因为光线会流入阴影区域并穿过物体。散射距离是针对RGB通道单独指定的，对于具有较强红光散射的皮肤材质，渲染效果较佳。X，Y和Z的数值会分别映射到R，G和B的值。</p>\n<h4 id=\"次表面颜色Subsurface-Color\"><a href=\"#次表面颜色Subsurface-Color\" class=\"headerlink\" title=\"次表面颜色Subsurface Color\"></a>次表面颜色<code>Subsurface Color</code></h4><p>次表面基础颜色。</p>\n<h4 id=\"次表面折射率Subsurface-IOR（只支持cycles）\"><a href=\"#次表面折射率Subsurface-IOR（只支持cycles）\" class=\"headerlink\" title=\"次表面折射率Subsurface IOR（只支持cycles）\"></a>次表面折射率<code>Subsurface IOR</code>（只支持cycles）</h4><p>次表面散射的折射率。</p>\n<h4 id=\"次表面各向异性Subsurface-Anisotropy（只支持cycles）\"><a href=\"#次表面各向异性Subsurface-Anisotropy（只支持cycles）\" class=\"headerlink\" title=\"次表面各向异性Subsurface Anisotropy（只支持cycles）\"></a>次表面各向异性<code>Subsurface Anisotropy</code>（只支持cycles）</h4><p>控制次表面散射的方向性。</p>\n<h4 id=\"金属度Metallic\"><a href=\"#金属度Metallic\" class=\"headerlink\" title=\"金属度Metallic\"></a>金属度<code>Metallic</code></h4><p>从无金属到全金属的混合材质模式。数值为1.0时表现为基础颜色叠加完全镜面反射着色，不含任何漫射或透明属性。数值为0.0时材质变现为底层的漫射或透明层样子，但顶部仍保留着一层反射层。</p>\n<h4 id=\"镜面反射Specular\"><a href=\"#镜面反射Specular\" class=\"headerlink\" title=\"镜面反射Specular\"></a>镜面反射<code>Specular</code></h4><p>非传导性高光反射量。表面沿法线方向的反射率常设定在0-8％范围内。</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">可以使用下面这个特殊情况下的菲涅耳公式，来计算具有已知折射率的真实材质计算高光值：\n    specular = ((ior - 1)/(ior + 1))^2 / 0.08 \n例如：\n    水: 折射率 = 1.33, 高光 = 0.25\n    玻璃: 折射率 = 1.5, 高光 = 0.5\n    钻石: 折射率 = 2.417, 高光 = 2.15\n由于确实存在反射率高于8％的材料，因此该处允许取值大于1。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h4 id=\"高光染色Specular-Tint\"><a href=\"#高光染色Specular-Tint\" class=\"headerlink\" title=\"高光染色Specular Tint\"></a>高光染色<code>Specular Tint</code></h4><p>使用基础色对朝向面进行高光反射，而镜面反射保持白色。</p>\n<p>普通电介质具有无色反射，因此该参数在技术上并不具有物理学上的正确性，但可用于模拟具有复杂表面结构的材质外观。</p>\n<h4 id=\"粗糙度Roughness\"><a href=\"#粗糙度Roughness\" class=\"headerlink\" title=\"粗糙度Roughness\"></a>粗糙度<code>Roughness</code></h4><p>用于确定漫反射和镜面反射时，物体表面的微平面粗糙度。</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">从旧版的 光泽 BSDF 着色器节点转换时，应使用原始值的平方根。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<h4 id=\"各向异性过滤Anisotropic（只支持cycles）\"><a href=\"#各向异性过滤Anisotropic（只支持cycles）\" class=\"headerlink\" title=\"各向异性过滤Anisotropic（只支持cycles）\"></a>各向异性过滤<code>Anisotropic</code>（只支持cycles）</h4><p>镜面反射的各向异性量。较高的设定值可提供沿切线方向的细长高光；设定为负值则会给出垂直于切线方向的高光。</p>\n<h4 id=\"各向异性旋转Anisotropic-Rotation（只支持cycles）\"><a href=\"#各向异性旋转Anisotropic-Rotation（只支持cycles）\" class=\"headerlink\" title=\"各向异性旋转Anisotropic Rotation（只支持cycles）\"></a>各向异性旋转<code>Anisotropic Rotation</code>（只支持cycles）</h4><p>旋转各向异性的方向，取值为1.0时，旋转一周。</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">与 各向异性 BSDF 着色器节点不同，该节点的高光延伸方向会旋转90°。可通过增加0.25的旋转值进行更正。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"/2022/06/18/blender-learning-memo0/render_shader-nodes_shader_principled_example-2a.jpg\" alt=\"Anisotropic &amp; Roughness 1\"><br><img src=\"/2022/06/18/blender-learning-memo0/render_shader-nodes_shader_principled_example-2b.jpg\" alt=\"Anisotropic &amp; Roughness 2\"></p>\n<h4 id=\"光泽Sheen\"><a href=\"#光泽Sheen\" class=\"headerlink\" title=\"光泽Sheen\"></a>光泽<code>Sheen</code></h4><p>边缘附近类似天鹅绒材质的反射数量，用于模拟布料等材质。</p>\n<ul>\n<li>也可以用于表现人脸或者皮肤上面的汗毛效果，在光照下微微的发光</li>\n</ul>\n<h4 id=\"光泽染色Sheen-Tint\"><a href=\"#光泽染色Sheen-Tint\" class=\"headerlink\" title=\"光泽染色Sheen Tint\"></a>光泽染色<code>Sheen Tint</code></h4><p>在白色和基础色之间进行混合，以获得光泽反射效果。</p>\n<h4 id=\"清漆Clearcoat\"><a href=\"#清漆Clearcoat\" class=\"headerlink\" title=\"清漆Clearcoat\"></a>清漆<code>Clearcoat</code></h4><p>物体顶部的白色高光层。适用于汽车油漆等材质的模拟。</p>\n<h4 id=\"清漆粗糙度Clearcoat-Roughness\"><a href=\"#清漆粗糙度Clearcoat-Roughness\" class=\"headerlink\" title=\"清漆粗糙度Clearcoat Roughness\"></a>清漆粗糙度<code>Clearcoat Roughness</code></h4><p>清漆的粗糙度。</p>\n<h4 id=\"IOR\"><a href=\"#IOR\" class=\"headerlink\" title=\"IOR\"></a>IOR</h4><p>折射率。</p>\n<h4 id=\"传递采样Transmission\"><a href=\"#传递采样Transmission\" class=\"headerlink\" title=\"传递采样Transmission\"></a>传递采样<code>Transmission</code></h4><p>数值设定为0时，表面完全不透明；数值设定为1时，表面为玻璃状。不同的取值代表上述两种状态的混合效果。</p>\n<h4 id=\"透射粗糙度Transmission-Roughness（只支持cycles）\"><a href=\"#透射粗糙度Transmission-Roughness（只支持cycles）\" class=\"headerlink\" title=\"透射粗糙度Transmission Roughness（只支持cycles）\"></a>透射粗糙度<code>Transmission Roughness</code>（只支持cycles）</h4><p>与 GGX 分布一起，用于控制透射光的粗糙度。</p>\n<h4 id=\"自发光-发射-Emission\"><a href=\"#自发光-发射-Emission\" class=\"headerlink\" title=\"自发光(发射)Emission\"></a>自发光(发射)<code>Emission</code></h4><p>来自表面的自发光，与自发光着色器类似。</p>\n<h4 id=\"自发光强度Emission-Strength\"><a href=\"#自发光强度Emission-Strength\" class=\"headerlink\" title=\"自发光强度Emission Strength\"></a>自发光强度<code>Emission Strength</code></h4><p>发射光的强度。值 1.0 将确保图像中的对象具有与自发光颜色完全相同的颜色，即使其“无阴影”。</p>\n<h4 id=\"Alpha\"><a href=\"#Alpha\" class=\"headerlink\" title=\"Alpha\"></a>Alpha</h4><p>控制表面的透明度，数值设定为1.0时，表面完全不透明。通常连接到 “图像纹理” 着色器节点的Alpha输出接口。</p>\n<h4 id=\"法向Normal\"><a href=\"#法向Normal\" class=\"headerlink\" title=\"法向Normal\"></a>法向<code>Normal</code></h4><p>控制基础图层的法线方向。</p>\n<h4 id=\"清漆法线Clearcoat-Normal\"><a href=\"#清漆法线Clearcoat-Normal\" class=\"headerlink\" title=\"清漆法线Clearcoat Normal\"></a>清漆法线<code>Clearcoat Normal</code></h4><p>控制 清漆 图层的法线方向。</p>\n<h4 id=\"切向-正切-Tangent\"><a href=\"#切向-正切-Tangent\" class=\"headerlink\" title=\"切向(正切)Tangent\"></a>切向(正切)<code>Tangent</code></h4><p>控制 各向异性 图层的法线方向。</p>\n<h3 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h3><h4 id=\"分布\"><a href=\"#分布\" class=\"headerlink\" title=\"分布\"></a>分布</h4><ul>\n<li>GGX<ul>\n<li>比 多重散射 GGX 渲染速度快，但不够精确。选择它后，可以启用 透射粗糙度 输入选项。</li>\n</ul>\n</li>\n<li>多重散射 GGX<ul>\n<li>会计算微平面之间的多次反弹和散射。这样就可以使物体不会因为过度变暗而显得突兀。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"次表面方法\"><a href=\"#次表面方法\" class=\"headerlink\" title=\"次表面方法\"></a>次表面方法</h4><p>模拟次表面散射的渲染方式。eevee不支持</p>\n<ul>\n<li>克里斯坦森-伯利<ul>\n<li>基于物理的体积散射的近似值。这种方法不如随机游走准确，但是在某些情况下，这种方法会更快地解决噪声。</li>\n</ul>\n</li>\n<li>随机游走（固定半径）<ul>\n<li>为薄而弯曲的物体提供准确的结果。 Random Walk 在网格内部使用真正的体积散射，这意味着它最适合封闭网格。网格中的重叠面和孔可能会导致问题。</li>\n</ul>\n</li>\n<li>随机游走<ul>\n<li>行为类似于随机游走（固定半径），但根据颜色、次表面各向异性和次表面 IOR 调整次表面半径。因此，此方法试图保留比随机游走（固定半径）更多的表面细节和颜色。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"样例\"><a href=\"#样例\" class=\"headerlink\" title=\"样例\"></a>样例</h3><p><img src=\"/2022/06/18/blender-learning-memo0/render_shader-nodes_shader_principled_example-1a.jpg\" alt=\"principled example 1\"></p>\n"},{"title":"Class签名信息不匹配引起的依赖冲突","date":"2022-07-14T05:45:15.000Z","_content":"\n## 现象\n线上某个服务升级zk到`3.4.14`, 引入依赖后无法启动。\n\n报错信息：\n```java\nCaused by: java.lang.SecurityException: class \"javax.annotation.ManagedBean\"'s signer information does not match signer information of other classes in the same package\n\tat java.lang.ClassLoader.checkCerts(ClassLoader.java:891)\n\tat java.lang.ClassLoader.preDefineClass(ClassLoader.java:661)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:754)\n\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)\n\tat org.apache.catalina.loader.WebappClassLoaderBase.findClassInternal(WebappClassLoaderBase.java:2408)\n\tat org.apache.catalina.loader.WebappClassLoaderBase.findClass(WebappClassLoaderBase.java:855)\n\tat org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1327)\n\tat org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1180)\n\tat java.lang.Class.forName0(Native Method)\n\tat java.lang.Class.forName(Class.java:348)\n```\n## 解决\n原因如错误信息所说，同package下有不同签名信息，属于依赖冲突。`javax.annotation.ManagedBean`的package是`javax.annotation`，找一下还有哪个jar里面有这个package：\n![搜索图](java-security-issue/scrshot0.png)\n\n然后找一下这两个包是什么依赖引入的（有一个肯定是zk😊):\n```bash\nmvn dependency:tree -Dverbose -Dincludes=com.google.code.findbugs,org.eclipse.jetty.orbit\n```\n\n```java\n+- org.apache.zookeeper:zookeeper:jar:3.4.14:compile\n|  \\- com.github.spotbugs:spotbugs-annotations:jar:3.1.9:compile\n|     \\- com.google.code.findbugs:jsr305:jar:3.0.2:compile\n\\- com.dangdang:elastic-job-lite-lifecycle:jar:2.1.5:compile\n   \\- com.dangdang:elastic-job-common-restful:jar:2.1.5:compile\n      \\- org.eclipse.jetty.aggregate:jetty-all-server:jar:8.1.19.v20160209:compile\n         +- org.eclipse.jetty.orbit:javax.servlet:jar:3.0.0.v201112011016:compile\n         +- org.eclipse.jetty.orbit:javax.security.auth.message:jar:1.0.0.v201108011116:compile\n         +- org.eclipse.jetty.orbit:javax.mail.glassfish:jar:1.4.1.v201005082020:compile\n         |  \\- (org.eclipse.jetty.orbit:javax.activation:jar:1.1.0.v201105071233:compile - omitted for duplicate)\n         +- org.eclipse.jetty.orbit:javax.activation:jar:1.1.0.v201105071233:compile\n         \\- org.eclipse.jetty.orbit:javax.annotation:jar:1.1.0.v201108011116:compile\n```\n\n排掉任意一个就OK了，大概率是jetty做了签名，毕竟是个server（可执行代码）。\n\n## 参考\n> [Java SecurityException: signer information does not match](https://stackoverflow.com/questions/2877262/java-securityexception-signer-information-does-not-match)\n\n```text\nThis happens when classes belonging to the same package are loaded from different JAR files, and those JAR files have signatures signed with different certificates - or, perhaps more often, at least one is signed and one or more others are not (which includes classes loaded from directories since those AFAIK cannot be signed).\n\nSo either make sure all JARs (or at least those which contain classes from the same packages) are signed using the same certificate, or remove the signatures from the manifest of JAR files with overlapping packages.\n```\n\n","source":"_posts/java-security-issue.md","raw":"---\ntitle: Class签名信息不匹配引起的依赖冲突\ndate: 2022-07-14 13:45:15\ncategories:\n    - 群英荟萃\n    - BUG草集\ntags:\n    - Java\n    - maven\n    - dependencies confliction\n    - class load\n    - class security check\n    - bug\n---\n\n## 现象\n线上某个服务升级zk到`3.4.14`, 引入依赖后无法启动。\n\n报错信息：\n```java\nCaused by: java.lang.SecurityException: class \"javax.annotation.ManagedBean\"'s signer information does not match signer information of other classes in the same package\n\tat java.lang.ClassLoader.checkCerts(ClassLoader.java:891)\n\tat java.lang.ClassLoader.preDefineClass(ClassLoader.java:661)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:754)\n\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)\n\tat org.apache.catalina.loader.WebappClassLoaderBase.findClassInternal(WebappClassLoaderBase.java:2408)\n\tat org.apache.catalina.loader.WebappClassLoaderBase.findClass(WebappClassLoaderBase.java:855)\n\tat org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1327)\n\tat org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1180)\n\tat java.lang.Class.forName0(Native Method)\n\tat java.lang.Class.forName(Class.java:348)\n```\n## 解决\n原因如错误信息所说，同package下有不同签名信息，属于依赖冲突。`javax.annotation.ManagedBean`的package是`javax.annotation`，找一下还有哪个jar里面有这个package：\n![搜索图](java-security-issue/scrshot0.png)\n\n然后找一下这两个包是什么依赖引入的（有一个肯定是zk😊):\n```bash\nmvn dependency:tree -Dverbose -Dincludes=com.google.code.findbugs,org.eclipse.jetty.orbit\n```\n\n```java\n+- org.apache.zookeeper:zookeeper:jar:3.4.14:compile\n|  \\- com.github.spotbugs:spotbugs-annotations:jar:3.1.9:compile\n|     \\- com.google.code.findbugs:jsr305:jar:3.0.2:compile\n\\- com.dangdang:elastic-job-lite-lifecycle:jar:2.1.5:compile\n   \\- com.dangdang:elastic-job-common-restful:jar:2.1.5:compile\n      \\- org.eclipse.jetty.aggregate:jetty-all-server:jar:8.1.19.v20160209:compile\n         +- org.eclipse.jetty.orbit:javax.servlet:jar:3.0.0.v201112011016:compile\n         +- org.eclipse.jetty.orbit:javax.security.auth.message:jar:1.0.0.v201108011116:compile\n         +- org.eclipse.jetty.orbit:javax.mail.glassfish:jar:1.4.1.v201005082020:compile\n         |  \\- (org.eclipse.jetty.orbit:javax.activation:jar:1.1.0.v201105071233:compile - omitted for duplicate)\n         +- org.eclipse.jetty.orbit:javax.activation:jar:1.1.0.v201105071233:compile\n         \\- org.eclipse.jetty.orbit:javax.annotation:jar:1.1.0.v201108011116:compile\n```\n\n排掉任意一个就OK了，大概率是jetty做了签名，毕竟是个server（可执行代码）。\n\n## 参考\n> [Java SecurityException: signer information does not match](https://stackoverflow.com/questions/2877262/java-securityexception-signer-information-does-not-match)\n\n```text\nThis happens when classes belonging to the same package are loaded from different JAR files, and those JAR files have signatures signed with different certificates - or, perhaps more often, at least one is signed and one or more others are not (which includes classes loaded from directories since those AFAIK cannot be signed).\n\nSo either make sure all JARs (or at least those which contain classes from the same packages) are signed using the same certificate, or remove the signatures from the manifest of JAR files with overlapping packages.\n```\n\n","slug":"java-security-issue","published":1,"updated":"2023-03-17T02:30:47.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdt4000bxtujhm373fhj","content":"<h2 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h2><p>线上某个服务升级zk到<code>3.4.14</code>, 引入依赖后无法启动。</p>\n<p>报错信息：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Caused</span> by<span class=\"token operator\">:</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>SecurityException</span><span class=\"token operator\">:</span> <span class=\"token keyword\">class</span> <span class=\"token string\">\"javax.annotation.ManagedBean\"</span>'s signer information does not match signer information of other classes in the same <span class=\"token keyword\">package</span>\n\t<span class=\"token namespace\">at</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>ClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkCerts</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">891</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>ClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">preDefineClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">661</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>ClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">defineClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">754</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span></span>SecureClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">defineClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SecureClassLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">142</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>WebappClassLoaderBase</span><span class=\"token punctuation\">.</span><span class=\"token function\">findClassInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebappClassLoaderBase</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2408</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>WebappClassLoaderBase</span><span class=\"token punctuation\">.</span><span class=\"token function\">findClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebappClassLoaderBase</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">855</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>WebappClassLoaderBase</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebappClassLoaderBase</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1327</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>WebappClassLoaderBase</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebappClassLoaderBase</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1180</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName0</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Native</span> <span class=\"token class-name\">Method</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">348</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><p>原因如错误信息所说，同package下有不同签名信息，属于依赖冲突。<code>javax.annotation.ManagedBean</code>的package是<code>javax.annotation</code>，找一下还有哪个jar里面有这个package：<br><img src=\"/2022/07/14/java-security-issue/scrshot0.png\" alt=\"搜索图\"></p>\n<p>然后找一下这两个包是什么依赖引入的（有一个肯定是zk😊):</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mvn dependency:tree <span class=\"token parameter variable\">-Dverbose</span> <span class=\"token parameter variable\">-Dincludes</span><span class=\"token operator\">=</span>com.google.code.findbugs,org.eclipse.jetty.orbit<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">+</span><span class=\"token operator\">-</span> org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>zookeeper<span class=\"token operator\">:</span>zookeeper<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">3.4</span><span class=\"token number\">.14</span><span class=\"token operator\">:</span>compile\n<span class=\"token operator\">|</span>  \\<span class=\"token operator\">-</span> com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>spotbugs<span class=\"token operator\">:</span>spotbugs<span class=\"token operator\">-</span>annotations<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">3.1</span><span class=\"token number\">.9</span><span class=\"token operator\">:</span>compile\n<span class=\"token operator\">|</span>     \\<span class=\"token operator\">-</span> com<span class=\"token punctuation\">.</span>google<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">.</span>findbugs<span class=\"token operator\">:</span>jsr305<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">3.0</span><span class=\"token number\">.2</span><span class=\"token operator\">:</span>compile\n\\<span class=\"token operator\">-</span> com<span class=\"token punctuation\">.</span>dangdang<span class=\"token operator\">:</span>elastic<span class=\"token operator\">-</span>job<span class=\"token operator\">-</span>lite<span class=\"token operator\">-</span>lifecycle<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">2.1</span><span class=\"token number\">.5</span><span class=\"token operator\">:</span>compile\n   \\<span class=\"token operator\">-</span> com<span class=\"token punctuation\">.</span>dangdang<span class=\"token operator\">:</span>elastic<span class=\"token operator\">-</span>job<span class=\"token operator\">-</span>common<span class=\"token operator\">-</span>restful<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">2.1</span><span class=\"token number\">.5</span><span class=\"token operator\">:</span>compile\n      \\<span class=\"token operator\">-</span> org<span class=\"token punctuation\">.</span>eclipse<span class=\"token punctuation\">.</span>jetty<span class=\"token punctuation\">.</span>aggregate<span class=\"token operator\">:</span>jetty<span class=\"token operator\">-</span>all<span class=\"token operator\">-</span>server<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">8.1</span><span class=\"token number\">.19</span><span class=\"token punctuation\">.</span>v20160209<span class=\"token operator\">:</span>compile\n         <span class=\"token operator\">+</span><span class=\"token operator\">-</span> org<span class=\"token punctuation\">.</span>eclipse<span class=\"token punctuation\">.</span>jetty<span class=\"token punctuation\">.</span>orbit<span class=\"token operator\">:</span>javax<span class=\"token punctuation\">.</span>servlet<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">3.0</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>v201112011016<span class=\"token operator\">:</span>compile\n         <span class=\"token operator\">+</span><span class=\"token operator\">-</span> org<span class=\"token punctuation\">.</span>eclipse<span class=\"token punctuation\">.</span>jetty<span class=\"token punctuation\">.</span>orbit<span class=\"token operator\">:</span>javax<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>message<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">1.0</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>v201108011116<span class=\"token operator\">:</span>compile\n         <span class=\"token operator\">+</span><span class=\"token operator\">-</span> org<span class=\"token punctuation\">.</span>eclipse<span class=\"token punctuation\">.</span>jetty<span class=\"token punctuation\">.</span>orbit<span class=\"token operator\">:</span>javax<span class=\"token punctuation\">.</span>mail<span class=\"token punctuation\">.</span>glassfish<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">1.4</span><span class=\"token number\">.1</span><span class=\"token punctuation\">.</span>v201005082020<span class=\"token operator\">:</span>compile\n         <span class=\"token operator\">|</span>  \\<span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>org<span class=\"token punctuation\">.</span>eclipse<span class=\"token punctuation\">.</span>jetty<span class=\"token punctuation\">.</span>orbit<span class=\"token operator\">:</span>javax<span class=\"token punctuation\">.</span>activation<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">1.1</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>v201105071233<span class=\"token operator\">:</span>compile <span class=\"token operator\">-</span> omitted <span class=\"token keyword\">for</span> duplicate<span class=\"token punctuation\">)</span>\n         <span class=\"token operator\">+</span><span class=\"token operator\">-</span> org<span class=\"token punctuation\">.</span>eclipse<span class=\"token punctuation\">.</span>jetty<span class=\"token punctuation\">.</span>orbit<span class=\"token operator\">:</span>javax<span class=\"token punctuation\">.</span>activation<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">1.1</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>v201105071233<span class=\"token operator\">:</span>compile\n         \\<span class=\"token operator\">-</span> org<span class=\"token punctuation\">.</span>eclipse<span class=\"token punctuation\">.</span>jetty<span class=\"token punctuation\">.</span>orbit<span class=\"token operator\">:</span>javax<span class=\"token punctuation\">.</span>annotation<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">1.1</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>v201108011116<span class=\"token operator\">:</span>compile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>排掉任意一个就OK了，大概率是jetty做了签名，毕竟是个server（可执行代码）。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><blockquote>\n<p><a href=\"https://stackoverflow.com/questions/2877262/java-securityexception-signer-information-does-not-match\">Java SecurityException: signer information does not match</a></p>\n</blockquote>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">This happens when classes belonging to the same package are loaded from different JAR files, and those JAR files have signatures signed with different certificates - or, perhaps more often, at least one is signed and one or more others are not (which includes classes loaded from directories since those AFAIK cannot be signed).\n\nSo either make sure all JARs (or at least those which contain classes from the same packages) are signed using the same certificate, or remove the signatures from the manifest of JAR files with overlapping packages.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<h2 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h2><p>线上某个服务升级zk到<code>3.4.14</code>, 引入依赖后无法启动。</p>\n<p>报错信息：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Caused</span> by<span class=\"token operator\">:</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>SecurityException</span><span class=\"token operator\">:</span> <span class=\"token keyword\">class</span> <span class=\"token string\">\"javax.annotation.ManagedBean\"</span>'s signer information does not match signer information of other classes in the same <span class=\"token keyword\">package</span>\n\t<span class=\"token namespace\">at</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>ClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkCerts</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">891</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>ClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">preDefineClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">661</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>ClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">defineClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">754</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span></span>SecureClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">defineClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SecureClassLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">142</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>WebappClassLoaderBase</span><span class=\"token punctuation\">.</span><span class=\"token function\">findClassInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebappClassLoaderBase</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2408</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>WebappClassLoaderBase</span><span class=\"token punctuation\">.</span><span class=\"token function\">findClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebappClassLoaderBase</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">855</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>WebappClassLoaderBase</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebappClassLoaderBase</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1327</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span></span>WebappClassLoaderBase</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebappClassLoaderBase</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1180</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName0</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Native</span> <span class=\"token class-name\">Method</span><span class=\"token punctuation\">)</span>\n\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">348</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><p>原因如错误信息所说，同package下有不同签名信息，属于依赖冲突。<code>javax.annotation.ManagedBean</code>的package是<code>javax.annotation</code>，找一下还有哪个jar里面有这个package：<br><img src=\"/2022/07/14/java-security-issue/scrshot0.png\" alt=\"搜索图\"></p>\n<p>然后找一下这两个包是什么依赖引入的（有一个肯定是zk😊):</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mvn dependency:tree <span class=\"token parameter variable\">-Dverbose</span> <span class=\"token parameter variable\">-Dincludes</span><span class=\"token operator\">=</span>com.google.code.findbugs,org.eclipse.jetty.orbit<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">+</span><span class=\"token operator\">-</span> org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>zookeeper<span class=\"token operator\">:</span>zookeeper<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">3.4</span><span class=\"token number\">.14</span><span class=\"token operator\">:</span>compile\n<span class=\"token operator\">|</span>  \\<span class=\"token operator\">-</span> com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>spotbugs<span class=\"token operator\">:</span>spotbugs<span class=\"token operator\">-</span>annotations<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">3.1</span><span class=\"token number\">.9</span><span class=\"token operator\">:</span>compile\n<span class=\"token operator\">|</span>     \\<span class=\"token operator\">-</span> com<span class=\"token punctuation\">.</span>google<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">.</span>findbugs<span class=\"token operator\">:</span>jsr305<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">3.0</span><span class=\"token number\">.2</span><span class=\"token operator\">:</span>compile\n\\<span class=\"token operator\">-</span> com<span class=\"token punctuation\">.</span>dangdang<span class=\"token operator\">:</span>elastic<span class=\"token operator\">-</span>job<span class=\"token operator\">-</span>lite<span class=\"token operator\">-</span>lifecycle<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">2.1</span><span class=\"token number\">.5</span><span class=\"token operator\">:</span>compile\n   \\<span class=\"token operator\">-</span> com<span class=\"token punctuation\">.</span>dangdang<span class=\"token operator\">:</span>elastic<span class=\"token operator\">-</span>job<span class=\"token operator\">-</span>common<span class=\"token operator\">-</span>restful<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">2.1</span><span class=\"token number\">.5</span><span class=\"token operator\">:</span>compile\n      \\<span class=\"token operator\">-</span> org<span class=\"token punctuation\">.</span>eclipse<span class=\"token punctuation\">.</span>jetty<span class=\"token punctuation\">.</span>aggregate<span class=\"token operator\">:</span>jetty<span class=\"token operator\">-</span>all<span class=\"token operator\">-</span>server<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">8.1</span><span class=\"token number\">.19</span><span class=\"token punctuation\">.</span>v20160209<span class=\"token operator\">:</span>compile\n         <span class=\"token operator\">+</span><span class=\"token operator\">-</span> org<span class=\"token punctuation\">.</span>eclipse<span class=\"token punctuation\">.</span>jetty<span class=\"token punctuation\">.</span>orbit<span class=\"token operator\">:</span>javax<span class=\"token punctuation\">.</span>servlet<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">3.0</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>v201112011016<span class=\"token operator\">:</span>compile\n         <span class=\"token operator\">+</span><span class=\"token operator\">-</span> org<span class=\"token punctuation\">.</span>eclipse<span class=\"token punctuation\">.</span>jetty<span class=\"token punctuation\">.</span>orbit<span class=\"token operator\">:</span>javax<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>message<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">1.0</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>v201108011116<span class=\"token operator\">:</span>compile\n         <span class=\"token operator\">+</span><span class=\"token operator\">-</span> org<span class=\"token punctuation\">.</span>eclipse<span class=\"token punctuation\">.</span>jetty<span class=\"token punctuation\">.</span>orbit<span class=\"token operator\">:</span>javax<span class=\"token punctuation\">.</span>mail<span class=\"token punctuation\">.</span>glassfish<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">1.4</span><span class=\"token number\">.1</span><span class=\"token punctuation\">.</span>v201005082020<span class=\"token operator\">:</span>compile\n         <span class=\"token operator\">|</span>  \\<span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>org<span class=\"token punctuation\">.</span>eclipse<span class=\"token punctuation\">.</span>jetty<span class=\"token punctuation\">.</span>orbit<span class=\"token operator\">:</span>javax<span class=\"token punctuation\">.</span>activation<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">1.1</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>v201105071233<span class=\"token operator\">:</span>compile <span class=\"token operator\">-</span> omitted <span class=\"token keyword\">for</span> duplicate<span class=\"token punctuation\">)</span>\n         <span class=\"token operator\">+</span><span class=\"token operator\">-</span> org<span class=\"token punctuation\">.</span>eclipse<span class=\"token punctuation\">.</span>jetty<span class=\"token punctuation\">.</span>orbit<span class=\"token operator\">:</span>javax<span class=\"token punctuation\">.</span>activation<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">1.1</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>v201105071233<span class=\"token operator\">:</span>compile\n         \\<span class=\"token operator\">-</span> org<span class=\"token punctuation\">.</span>eclipse<span class=\"token punctuation\">.</span>jetty<span class=\"token punctuation\">.</span>orbit<span class=\"token operator\">:</span>javax<span class=\"token punctuation\">.</span>annotation<span class=\"token operator\">:</span>jar<span class=\"token operator\">:</span><span class=\"token number\">1.1</span><span class=\"token number\">.0</span><span class=\"token punctuation\">.</span>v201108011116<span class=\"token operator\">:</span>compile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>排掉任意一个就OK了，大概率是jetty做了签名，毕竟是个server（可执行代码）。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><blockquote>\n<p><a href=\"https://stackoverflow.com/questions/2877262/java-securityexception-signer-information-does-not-match\">Java SecurityException: signer information does not match</a></p>\n</blockquote>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">This happens when classes belonging to the same package are loaded from different JAR files, and those JAR files have signatures signed with different certificates - or, perhaps more often, at least one is signed and one or more others are not (which includes classes loaded from directories since those AFAIK cannot be signed).\n\nSo either make sure all JARs (or at least those which contain classes from the same packages) are signed using the same certificate, or remove the signatures from the manifest of JAR files with overlapping packages.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n"},{"title":"Frida-il2cpp-bridge script for fate/go","date":"2022-03-17T07:10:42.000Z","password":"atpex24","_content":"\nhack script for fgo based on [frida](https://github.com/frida/frida) and [frida-il2cpp-bridge](https://github.com/vfsfitvnm/frida-il2cpp-bridge) \n\nproject is [here](https://github.com/Attt/fgo-frida-il2cpp-bridge)\n\n### Supports\n\n- bilibili fate go v2.36.0\n\n- aniplex fate go v2.49.0\n  \n  *fate go in other channels/platforms/versions may be functional but it's not tested*\n\n### Steps\n\n#### For Android\n\n**Android 10 or 11 is recommended, among testing in android 9 sometimes game may crash*\n\n- Install nodeJs for NPM\n\n- Install frida and frida-tools with ` npm install frida && npm install frida-tools`\n\n- Download latest frida-server from https://github.com/frida/frida/releases\n\n- Start rooted device, rettach with ` adb root`\n\n- Install game apk\n\n- Copy ***frida-server*** file to device directory such as ***/data/local/tmp***\n\n- Run `adb shell` to connect to device\n\n- Change ***frida-server*** file permission with `chmod 777 {directory}/frida-server`\n\n- Navigate to directory and run server with `./frida-server`\n\n#### For IOS\n\n- TODO\n\n#### Run script\n\n- See comments in ***fgo_hack_script.ts***, and change codes according to the *fgo* version\n  \n  - there is some tiny diffrences between *bili fatego* and *aniplex fatego*\n\n- Build with `./build_aniplex.sh` or `./build_bili.sh`\n\n- Run with `./run.sh com.bilibili.fgo` or `./run.sh com.aniplex.fategrandorder`\n  \n  - you could now see some logs (if codes like `console.log(...)` is uncommented) when starting battle\n\n- Have fun.\n\n### Features\n\n![in battle](fgo-frida-il2cpp-bridge/0.jpg)\n\n#### active\n\n1. Increase player's servant hp (by 500,000)\n\n2. Set all skills lv to 10 (both servant's and master's)\n\n3. Change all skills charge turn down (to 1)\n\n4. Try to disable codestage anti-cheat engine (notice that there is **NO WAY** to cheat safely cause anyway the battle data will be sent to game server)\n\n#### inactive\n\n1. Never die (reset hp every time servant dies)\n\n2. Increase attack & defence np rate\n\n3. Increase attack star rate\n\n### Issues\n\n- Could not ran with X64-based simulator such as MuMu (tested) at this time ([frida-il2cpp-bridge](https://github.com/vfsfitvnm/frida-il2cpp-bridge) version 0.7.9)\n\n- Features in [inactive](#inactive) may invoked too frequently that may cause some leakage\n","source":"_posts/fgo-frida-il2cpp-bridge.md","raw":"---\ntitle: Frida-il2cpp-bridge script for fate/go\ndate: 2022-03-17 15:10:42\ncategories: \n\t- デスノート\n\t- wallhack\ntags:\n  - wallhack\n  - injection\n  - reverse engineering\n  - fgo\npassword: atpex24\n---\n\nhack script for fgo based on [frida](https://github.com/frida/frida) and [frida-il2cpp-bridge](https://github.com/vfsfitvnm/frida-il2cpp-bridge) \n\nproject is [here](https://github.com/Attt/fgo-frida-il2cpp-bridge)\n\n### Supports\n\n- bilibili fate go v2.36.0\n\n- aniplex fate go v2.49.0\n  \n  *fate go in other channels/platforms/versions may be functional but it's not tested*\n\n### Steps\n\n#### For Android\n\n**Android 10 or 11 is recommended, among testing in android 9 sometimes game may crash*\n\n- Install nodeJs for NPM\n\n- Install frida and frida-tools with ` npm install frida && npm install frida-tools`\n\n- Download latest frida-server from https://github.com/frida/frida/releases\n\n- Start rooted device, rettach with ` adb root`\n\n- Install game apk\n\n- Copy ***frida-server*** file to device directory such as ***/data/local/tmp***\n\n- Run `adb shell` to connect to device\n\n- Change ***frida-server*** file permission with `chmod 777 {directory}/frida-server`\n\n- Navigate to directory and run server with `./frida-server`\n\n#### For IOS\n\n- TODO\n\n#### Run script\n\n- See comments in ***fgo_hack_script.ts***, and change codes according to the *fgo* version\n  \n  - there is some tiny diffrences between *bili fatego* and *aniplex fatego*\n\n- Build with `./build_aniplex.sh` or `./build_bili.sh`\n\n- Run with `./run.sh com.bilibili.fgo` or `./run.sh com.aniplex.fategrandorder`\n  \n  - you could now see some logs (if codes like `console.log(...)` is uncommented) when starting battle\n\n- Have fun.\n\n### Features\n\n![in battle](fgo-frida-il2cpp-bridge/0.jpg)\n\n#### active\n\n1. Increase player's servant hp (by 500,000)\n\n2. Set all skills lv to 10 (both servant's and master's)\n\n3. Change all skills charge turn down (to 1)\n\n4. Try to disable codestage anti-cheat engine (notice that there is **NO WAY** to cheat safely cause anyway the battle data will be sent to game server)\n\n#### inactive\n\n1. Never die (reset hp every time servant dies)\n\n2. Increase attack & defence np rate\n\n3. Increase attack star rate\n\n### Issues\n\n- Could not ran with X64-based simulator such as MuMu (tested) at this time ([frida-il2cpp-bridge](https://github.com/vfsfitvnm/frida-il2cpp-bridge) version 0.7.9)\n\n- Features in [inactive](#inactive) may invoked too frequently that may cause some leakage\n","slug":"fgo-frida-il2cpp-bridge","published":1,"updated":"2023-03-17T02:30:47.688Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdt5000fxtujh06c1gax","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"パスワードが不一致。\" data-whm=\"不具合のため、一時的に復号化されます。\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"fa15116d4b6dd728190ae2655613b0eab145e9838d37688a50e9c3e06d686580\">c78128bf525680635b87b5a4a4e1152b7b0fc1cba3a05ca513cb0b06345017831f326612fd7d951665c5bb55f38255ba6c3a2230174e6570917cd12eed54eeee4a93ed454ede55cb74a851ae21ae8682cf0f9aabdf453d612897d12bf76a7d1c14fe8546454d1319506d1b50eff20e5119c2fa2f09fd5b7a1a0141734023a8023971cf473e852bec274aee0b6c6e98b49a144b2f9587d4c4b27afb9ede68816e62df364f75441feb883b0ff6010373b14fb6abd0127232f4d1fe044cb62067da6f5d8913892af72682666f6c4b8cb73b75ccae5f84fc618666d8a0db24c4555bbcf738875ef18960d3432a9938780f7d83ff0bc9ea0ea8461335f51bb15441017c7ad272aa3480645bb6e3981caea7fa3435dded0115869bdbfd2b8c7151ebc974025fa5dd68e212783051254107e19cdde47f48d2228ce345ca11228c01fd1949817f6acb827886dd323afebb2037b63eb6eb49bbbe1ad97027680678a5d13263f70143e306f6ac9393bfcdc40a5a98defd87d92a8776f38981c463e192f7cc254be22d4794f090f892b86e3e52411bcb11e80da340132279563a67c29ecfbfafb152e8fa53353d75bff265ac6dc1140831cfb1fe93ec58a33d326c724d64d101aed9aca30d06c2c33d992c1e7ed9d47d62e4e97569cf576151a1150b98def938f1bed3ef37c3a22a2f82e721cef6655c04d4082dc8c9be2755b636a7ae38c3badaa2c31db45b72d6a6d33e66a4006e17e30e6d0a9fc730fc730f19e99abf77878a1d75d62c33d997a80090936e63ce7cdd143fbdd2cd8a6dfa8329e0cde08fdeebd6bd0406e05a5524107143083b857375cba30ba13ca77858333bc142fa44d8630d711228c8e57d3a15c139e78958a6fec55c4303255e77f750ffb5ebc5a4e194edce0e161c3f8f329dfa051ca901b7b2d0457d4198a69f8a4b34958e4b8261059be7a192e924f1ffac651885bb8002b6de5b75b3d22bd7131fcdbaa93960aade7ebcda8e993c2cb268cc628eaacd3069c756ab74d3cd3471277c4ec202578b7144d8c510abae0cd5e9c119ce94fc9ae96bf74b970414a11a70ff9514eca8ea78277ae81d3fb33c8f73a29b08f675991370e47759aa1e32194d9217cc4873af74380f60225d103c6714fa7b30b753850021b578e89b49c43adb0ce714f60fc8e1ce39c121ba335e636e568485bf1d2b5ed1850a8cacb7157c718ca929864aad8ac75c44204bc3f3adbc8618e27e0e89efec4112f62140dbd5d6f8443ad26495e44962edacf7a61aa3691deab19aacc77df63cbc476f65b31d42c413399e847b2f60972a237fc81d5b07925db8df355aa4b00448e7c2efc5441f13e8adf642e0493cd7ffe97ea512b22baf93be7fa09944f00792a4640389959929c9e7fb891237240e7adbe34d038a96a7bf6910e6f1fea3b806165bb03096887e3cfa4d90aa94d27a82318b9314942e9fe9368afd244172ab2597d38c92f082d582a59f16e5e171d1b79a9ad7bfb59a1d20111cf728166624a2586ce32b81a3d07a9d5239c574f562027c4f783c060639c979d03230467945d2b3e2061904de689d1069899d4bc415c8adefe736dc1c421a76372d26180ded5c3244c43ea7c6cc7e498c872c02c3909e111314f0c51ad6bf1eca253d5a4bda9d94b573c3665efebbb64765994cce21c0978b2b9679082650cecbe918f63b3578c140bf3747e2566599ad2cef0cdc5d362bf4bbedb2c1405a990d200d4f6eef91a864f447664ea833167e2c293cc8df8d7ed236d003df50fdac77b116cc78b04c8e065eebe84fb72aabb99e9afc0e189715c2175f0998c787db8b7e33f960c62cb75585505e2bf74331c154214da21a514568b54678229b001cff8f516af6b21bf6028d13fe27dedfaf935a18eb6b138c93208b30f73d39f53575f77fdc902b03f4e110b579c755d3692469e8cb454abf5becebd3b9def06eb142aab52c99148b229cc8f984d0b9d6f06b0dc5b2aef154edf7ff154575f420e8c3d769eef49f209c1efc65dc78ea0c7d96fd124a1a9b5c263dcc6364ac563040ef350be444a6ea6daa6280604ae31215f20e4c3b351849431067e12945a62aa0086ad0a549542626978c91ce3d81dd493173f848aa3f5358bb080c079581d71161ffab50c62ce711888008817432c52840f308f89b7bc3c49d1673df36c877043fb015113e858054db6fc3b6b17f61100e94dfbeed767f620dc137116ece31c54000b289a4ec8b1de49370a7e78155b22d4e741dfad307632e3ceefa8a77d9e98e5e7ee06e4f814ee6a59a0651b1aa8500e4b7d76cb52df8530dab6e75d220c5b7ea35d36caa52d1c94662a41888c518f02b6121efa14a998a50ab42c6a68f9d14a78858ef858578af4660dddfd425827fa3bccb25c9b1cadbf2814d44b929d80ab0c59eff7847189f7a1fffd5241283fad8aac4104f986e897c4e37078995bc50d07e73e940fa6ab2490296413b3a72274bcf2589e286b803e7edae64e9cfc3e80ff9dddc670bd3d2604843ece54a8ab8327edc7da68681cae5852d71e05b31a4ee966ae8650b1706c2ef421a4125934ca7e959cb414e524c052f9a47dd91178895f4edff51a6e658986c705c7d8c38b8d52d298c2e2d58efdd1ce086b2caa787b3a22bf87f7a4ba21cd5b4f82ac8d3e9d188e3d458466d0b038ba9b03dc804f5dbc0b4565faef4822d3e5a4c373e0e59b823b8b4a9e04cac4d1614184f2cdaf736e64c8c754cc406d8ffb6ef88a45f317b680ecb105cb84a0fde666546fcc4ed180f07ff4573a37247b810e69c68ab538aa981022639199108edcc8e1545297c51d5a3e0872160418da38ab3b1659ba7acc9998fdb9ca12426307ec3ef5948d4aebba2605cc44c3203988d6794736e99d422a10952acb57d01a3171a332799d7bcd851a33b354625a57c4fa79805b6eeea75f5c03a480b9c625ffe858557412eea3a09f8b4717d654daedb54781896cadab3c8d6fead7065af518a58ed526e3e58f3db82254413c0e174d12e3d373c8ca64393600dbb4a6fea4eeee4bd8bc4f863bc6bf0db97e6daad1280a13060081bfc82da788f8348db97b4134ac989a3b85292c60d0c1a11869dde1647b1816475f43b35a898a0281be01349d296849f6ede2a21b9a750b173216afa4987c72cac9e35829b02eed3ac83c8b04c0d29ac3254ce86a2bfbaf247da6703d9ddb3f26dd63b6a38dfac22ea00c88183e8d47e6daafb196eeae94e36bbb5de6bfc249c11ba7998e3a8a455ba5e560782f38f94445e30064047af2384001d5102077c4225906651021bec76fcc534430e7663385ad293b6efb958d0b4f3d632ad025055016c4fe8364cf773558a154a7e8ab504a1de6f3334178ab97767f68476e923aca507e2bf358bc330f4ecec1ec472fb5ebb8819cab9f1ff6f8017a25f9199cc05f45b9283931bec95cc681a97363e887a5510a7053fcc7ef02630087e2cdf4cbf83af447ff0fb074acccdb82a4f1b642ae8e3a085e0bae2aa32f5309d2bf5d3672e30171c8159cf275e17e1f0a4fa05640d575787cd114bf97c40a2caf46e204fcb0ed187e91bf5383037db8204b70e64c2a20b60de9acd782cfbd9abf55d2c7b8f80d4ab46313d17a2cfaa4526a670969f2277e2f056a4b737d5610c77627d83e702410cc20805dec4cf80ab34a354390b88cb947eafcb6888f69be71ef6bb11d3e0f02b62832bdb57d6754384c57fef1504548b60bf2a471722253537887db228e6f5f8f11f4e62ea2f1cdad945e2b2ac7672a9994759281d19ca499f76047fe950871dd8294453599ec3524509795596995020e3d6105c0cce5e0d83c88cd6aa6f0c45f9f350c873ea198bf1ac4221656b6183ad7dafbc31e2ecf4ba522f4815c6dae2b05e1070220c201872137eda40f9d0f5d0922da6e7463bd3067e87332584525f685eaa93929c659e25a6a4fa04ff82b02080dd380339ad4b334f24c0912480cb1cce26cd03b2ad6b30ce136b738ff58715057599bcd65d16d0054390ea5770791bcf219d22f7eeadc9569920de233074e33a5dcd6f9b3a30f9d839551d0ec202156dad4e319a683d526f320841e070ad99ac5072c70edcc550c0cfe3db7c4ce310f5489503c384f54ded5f6834e7ce524ecfee4ef1cc4c98f8b629fe381850e9b00397dd1c164e7527cd26d4ccc0859d977b6dbb5f49f88ebde94182a624425caab463c691776290f30e45596d098effd36255df1d11e3c3a3683594f8515aa424d437edde447fa29f93f531918956a3fc58cc267bd37b2df25486288bb7f946a2fdea8ba97d6e657df97bb4c2817fba34a94cdf538a9769f24ab75482583073ffdef16b202b8d7bf379812b72750ed9de77228c87d03a7977e1d091248bed986314977230be0170dde0fae7c7a0b986f3a6f89e6da12f432a411177a61c5a780c5729e8dd8e9a9be0db8bf61c18a6346417e72a9c7597b9586aeb847ab43d233e4b7bffd71e02841cc9c726ab1f9c0dfa2263c93ddc30a25102441f69e82b85a8fc72d6fd925ee8f0ebf1af69bcea99c94f26ad11d6d1a064d7a694245e6be6c3586cc76d453e8208a872c450b04c289806d4ee6d8728c4ba546ef3efa80be84aa43dd0e3a9248b16dcbe0ede8fffa146f8f5b474f3b8b8119cb3998aac7758753718a5022851b2a96c54e92ff60087a3a1bde934f473e24e69a406535c0a54174e997dc76f0b86fb539327c6cb0d925ed86e8538e18bb51a5bb32aa50592d6f1c4b58df5fc5ab33572c3792a408af709e334f17597d0030898e6ed33c2bb56d90afa3298714198bf85cd173953a8b8d201a410f891d304d2d77716d3adf1c16aaf31f8e7df9c89215039b73b15aab88a257438389ea246f4ba180a07ae8b158e7847be9bc7adc227ea2b215cfd15ae9ace0d10cba13feb23c535cdcff92fc3e71140f01961e76b745ebb39a3b691d44a0780e1aa1e3e3932f6c82b6229b3fdd10e70cf7002716985a7b4a277aaaf3d50520d47c864cdc882601a538a35ac3af2fa1c426e359c9a68a94102b106096942a465b44caa6567997b81ceec6034b6e4739afd9314ccfe185cfbe333afd1acdbab3396ffca1fd3f4a353d95e9b0391c78eb8d041f334e11ed1d02f716fae7150bcc082e9b1121a97e456de8199126b51b86154f9414c3e9624b819fea18de23ac9c27965be4601dd7238ff30d84f182f45c07e214d03ff893f3d6dbefd9b332cd327450795fa754959e8ea3da5da007095193cee9df15e3fe6958ab8dd275171736d49bd65763de56600e01999b2b0a37e1ff96127a6debeec69edd0f1e486a91cacc3795cba3ddb07713d4ed5f69c62889c7d13a608dea32bdbfccb6b62eddbc89014c8f9fe0126cdbc0191c4b2b10ed6d713d8ad46003e9dabb341616fe8d8672b2987c38edbb78c73282add94eefeb0936c021880c1460c0f140c1e8566ddf2718904f02251de5b9deb5836</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">これは暗号化されている内容です。</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"これは暗号化されている内容です。","more":"これは暗号化されている内容です。","origin":"<p>hack script for fgo based on <a href=\"https://github.com/frida/frida\">frida</a> and <a href=\"https://github.com/vfsfitvnm/frida-il2cpp-bridge\">frida-il2cpp-bridge</a> </p>\n<p>project is <a href=\"https://github.com/Attt/fgo-frida-il2cpp-bridge\">here</a></p>\n<h3 id=\"Supports\"><a href=\"#Supports\" class=\"headerlink\" title=\"Supports\"></a>Supports</h3><ul>\n<li><p>bilibili fate go v2.36.0</p>\n</li>\n<li><p>aniplex fate go v2.49.0</p>\n<p><em>fate go in other channels&#x2F;platforms&#x2F;versions may be functional but it’s not tested</em></p>\n</li>\n</ul>\n<h3 id=\"Steps\"><a href=\"#Steps\" class=\"headerlink\" title=\"Steps\"></a>Steps</h3><h4 id=\"For-Android\"><a href=\"#For-Android\" class=\"headerlink\" title=\"For Android\"></a>For Android</h4><p>*<em>Android 10 or 11 is recommended, among testing in android 9 sometimes game may crash</em></p>\n<ul>\n<li><p>Install nodeJs for NPM</p>\n</li>\n<li><p>Install frida and frida-tools with <code> npm install frida &amp;&amp; npm install frida-tools</code></p>\n</li>\n<li><p>Download latest frida-server from <a href=\"https://github.com/frida/frida/releases\">https://github.com/frida/frida/releases</a></p>\n</li>\n<li><p>Start rooted device, rettach with <code> adb root</code></p>\n</li>\n<li><p>Install game apk</p>\n</li>\n<li><p>Copy <em><strong>frida-server</strong></em> file to device directory such as <em><strong>&#x2F;data&#x2F;local&#x2F;tmp</strong></em></p>\n</li>\n<li><p>Run <code>adb shell</code> to connect to device</p>\n</li>\n<li><p>Change <em><strong>frida-server</strong></em> file permission with <code>chmod 777 &#123;directory&#125;/frida-server</code></p>\n</li>\n<li><p>Navigate to directory and run server with <code>./frida-server</code></p>\n</li>\n</ul>\n<h4 id=\"For-IOS\"><a href=\"#For-IOS\" class=\"headerlink\" title=\"For IOS\"></a>For IOS</h4><ul>\n<li>TODO</li>\n</ul>\n<h4 id=\"Run-script\"><a href=\"#Run-script\" class=\"headerlink\" title=\"Run script\"></a>Run script</h4><ul>\n<li><p>See comments in <em><strong>fgo_hack_script.ts</strong></em>, and change codes according to the <em>fgo</em> version</p>\n<ul>\n<li>there is some tiny diffrences between <em>bili fatego</em> and <em>aniplex fatego</em></li>\n</ul>\n</li>\n<li><p>Build with <code>./build_aniplex.sh</code> or <code>./build_bili.sh</code></p>\n</li>\n<li><p>Run with <code>./run.sh com.bilibili.fgo</code> or <code>./run.sh com.aniplex.fategrandorder</code></p>\n<ul>\n<li>you could now see some logs (if codes like <code>console.log(...)</code> is uncommented) when starting battle</li>\n</ul>\n</li>\n<li><p>Have fun.</p>\n</li>\n</ul>\n<h3 id=\"Features\"><a href=\"#Features\" class=\"headerlink\" title=\"Features\"></a>Features</h3><p><img src=\"/2022/03/17/fgo-frida-il2cpp-bridge/0.jpg\" alt=\"in battle\"></p>\n<h4 id=\"active\"><a href=\"#active\" class=\"headerlink\" title=\"active\"></a>active</h4><ol>\n<li><p>Increase player’s servant hp (by 500,000)</p>\n</li>\n<li><p>Set all skills lv to 10 (both servant’s and master’s)</p>\n</li>\n<li><p>Change all skills charge turn down (to 1)</p>\n</li>\n<li><p>Try to disable codestage anti-cheat engine (notice that there is <strong>NO WAY</strong> to cheat safely cause anyway the battle data will be sent to game server)</p>\n</li>\n</ol>\n<h4 id=\"inactive\"><a href=\"#inactive\" class=\"headerlink\" title=\"inactive\"></a>inactive</h4><ol>\n<li><p>Never die (reset hp every time servant dies)</p>\n</li>\n<li><p>Increase attack &amp; defence np rate</p>\n</li>\n<li><p>Increase attack star rate</p>\n</li>\n</ol>\n<h3 id=\"Issues\"><a href=\"#Issues\" class=\"headerlink\" title=\"Issues\"></a>Issues</h3><ul>\n<li><p>Could not ran with X64-based simulator such as MuMu (tested) at this time (<a href=\"https://github.com/vfsfitvnm/frida-il2cpp-bridge\">frida-il2cpp-bridge</a> version 0.7.9)</p>\n</li>\n<li><p>Features in <a href=\"#inactive\">inactive</a> may invoked too frequently that may cause some leakage</p>\n</li>\n</ul>\n","encrypt":true},{"title":"「に」と「で」作为场所助词时的区别","date":"2022-06-28T16:05:42.000Z","_content":"# 例句\n1. 今日はずっと家`に`います。\n2. 明日はずっと家`で`ゲームをします。\n3. あそこ`に`山が見えます。（あそこ`から`山が見えます。）\n4. 友達の家`に`携帯を忘れました。\n5. 友達の家`で`携帯を無くしました。\n6. ここ`に`車を停めてください。・ここ`で`車を停めでください。\n\n# 区别\n`に`作为场所/地点助词的时候，表达的是一种静态的结果或者一种状态，`で`则表达一个动作或者一个行为。\n\n> 今日はずっと家`に`います。\n\n表达“存在”是一种状态。\n\n> 明日はずっと家`で`ゲームをします。\n\n表达“打游戏”是一个动作。\n\n> あそこ`に`山が見えます。\n\n表达的“能被看见”是一个状态。\n\n> 友達の家`に`携帯を忘れました。\n\n表达“落在某处”是一个事实/状态。\n\n> 友達の家`で`携帯を無くしました。\n\n表达“弄丢”是一个动作。\n\n`从“弄丢了”这个动作发生开始，就一直处于”忘了“的状态。`\n\n> ここ`に`車を停めてください。\n\n把车停在这里，表达的是在这里保持一种停着的状态。\n\n> ここ`で`車を停めでください。\n\n在这里停车，表达的是“停”这个动作，至于“停”完了是保持“停”的状态还是继续发生“动”的后续动作并不是重点。\n\n```text\n再比如说：寝る，有两个意思，一个是“睡觉　眠る”，一个是“躺着 横たわる・横になる”\n\n「ここで寝る」表示的是在这里睡觉，因为睡觉是个动作，至于你这个动作做了会怎么样那不重要，就在这里睡就完事了。\n\n「ここに寝る」表示在这里躺着，怎么躺着的不重要，倒下去还是慢慢躺下去或者后空翻接转体三周半摔在上面都不重要，最终变成躺着就可以，只要最后是在ここ躺着的状态都OK。\n```\n","source":"_posts/jp-ni-de-basyou.md","raw":"---\ntitle: 「に」と「で」作为场所助词时的区别\ndate: 2022-06-29 00:05:42\ncategories:\n    - 基础姿势\n    - 日语\ntags:\n    - language\n    - japanese\n    - 文法\n    - grammar\n---\n# 例句\n1. 今日はずっと家`に`います。\n2. 明日はずっと家`で`ゲームをします。\n3. あそこ`に`山が見えます。（あそこ`から`山が見えます。）\n4. 友達の家`に`携帯を忘れました。\n5. 友達の家`で`携帯を無くしました。\n6. ここ`に`車を停めてください。・ここ`で`車を停めでください。\n\n# 区别\n`に`作为场所/地点助词的时候，表达的是一种静态的结果或者一种状态，`で`则表达一个动作或者一个行为。\n\n> 今日はずっと家`に`います。\n\n表达“存在”是一种状态。\n\n> 明日はずっと家`で`ゲームをします。\n\n表达“打游戏”是一个动作。\n\n> あそこ`に`山が見えます。\n\n表达的“能被看见”是一个状态。\n\n> 友達の家`に`携帯を忘れました。\n\n表达“落在某处”是一个事实/状态。\n\n> 友達の家`で`携帯を無くしました。\n\n表达“弄丢”是一个动作。\n\n`从“弄丢了”这个动作发生开始，就一直处于”忘了“的状态。`\n\n> ここ`に`車を停めてください。\n\n把车停在这里，表达的是在这里保持一种停着的状态。\n\n> ここ`で`車を停めでください。\n\n在这里停车，表达的是“停”这个动作，至于“停”完了是保持“停”的状态还是继续发生“动”的后续动作并不是重点。\n\n```text\n再比如说：寝る，有两个意思，一个是“睡觉　眠る”，一个是“躺着 横たわる・横になる”\n\n「ここで寝る」表示的是在这里睡觉，因为睡觉是个动作，至于你这个动作做了会怎么样那不重要，就在这里睡就完事了。\n\n「ここに寝る」表示在这里躺着，怎么躺着的不重要，倒下去还是慢慢躺下去或者后空翻接转体三周半摔在上面都不重要，最终变成躺着就可以，只要最后是在ここ躺着的状态都OK。\n```\n","slug":"jp-ni-de-basyou","published":1,"updated":"2023-03-17T02:30:47.695Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdt5000gxtuj2om2c7kb","content":"<h1 id=\"例句\"><a href=\"#例句\" class=\"headerlink\" title=\"例句\"></a>例句</h1><ol>\n<li>今日はずっと家<code>に</code>います。</li>\n<li>明日はずっと家<code>で</code>ゲームをします。</li>\n<li>あそこ<code>に</code>山が見えます。（あそこ<code>から</code>山が見えます。）</li>\n<li>友達の家<code>に</code>携帯を忘れました。</li>\n<li>友達の家<code>で</code>携帯を無くしました。</li>\n<li>ここ<code>に</code>車を停めてください。・ここ<code>で</code>車を停めでください。</li>\n</ol>\n<h1 id=\"区别\"><a href=\"#区别\" class=\"headerlink\" title=\"区别\"></a>区别</h1><p><code>に</code>作为场所&#x2F;地点助词的时候，表达的是一种静态的结果或者一种状态，<code>で</code>则表达一个动作或者一个行为。</p>\n<blockquote>\n<p>今日はずっと家<code>に</code>います。</p>\n</blockquote>\n<p>表达“存在”是一种状态。</p>\n<blockquote>\n<p>明日はずっと家<code>で</code>ゲームをします。</p>\n</blockquote>\n<p>表达“打游戏”是一个动作。</p>\n<blockquote>\n<p>あそこ<code>に</code>山が見えます。</p>\n</blockquote>\n<p>表达的“能被看见”是一个状态。</p>\n<blockquote>\n<p>友達の家<code>に</code>携帯を忘れました。</p>\n</blockquote>\n<p>表达“落在某处”是一个事实&#x2F;状态。</p>\n<blockquote>\n<p>友達の家<code>で</code>携帯を無くしました。</p>\n</blockquote>\n<p>表达“弄丢”是一个动作。</p>\n<p><code>从“弄丢了”这个动作发生开始，就一直处于”忘了“的状态。</code></p>\n<blockquote>\n<p>ここ<code>に</code>車を停めてください。</p>\n</blockquote>\n<p>把车停在这里，表达的是在这里保持一种停着的状态。</p>\n<blockquote>\n<p>ここ<code>で</code>車を停めでください。</p>\n</blockquote>\n<p>在这里停车，表达的是“停”这个动作，至于“停”完了是保持“停”的状态还是继续发生“动”的后续动作并不是重点。</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">再比如说：寝る，有两个意思，一个是“睡觉　眠る”，一个是“躺着 横たわる・横になる”\n\n「ここで寝る」表示的是在这里睡觉，因为睡觉是个动作，至于你这个动作做了会怎么样那不重要，就在这里睡就完事了。\n\n「ここに寝る」表示在这里躺着，怎么躺着的不重要，倒下去还是慢慢躺下去或者后空翻接转体三周半摔在上面都不重要，最终变成躺着就可以，只要最后是在ここ躺着的状态都OK。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<h1 id=\"例句\"><a href=\"#例句\" class=\"headerlink\" title=\"例句\"></a>例句</h1><ol>\n<li>今日はずっと家<code>に</code>います。</li>\n<li>明日はずっと家<code>で</code>ゲームをします。</li>\n<li>あそこ<code>に</code>山が見えます。（あそこ<code>から</code>山が見えます。）</li>\n<li>友達の家<code>に</code>携帯を忘れました。</li>\n<li>友達の家<code>で</code>携帯を無くしました。</li>\n<li>ここ<code>に</code>車を停めてください。・ここ<code>で</code>車を停めでください。</li>\n</ol>\n<h1 id=\"区别\"><a href=\"#区别\" class=\"headerlink\" title=\"区别\"></a>区别</h1><p><code>に</code>作为场所&#x2F;地点助词的时候，表达的是一种静态的结果或者一种状态，<code>で</code>则表达一个动作或者一个行为。</p>\n<blockquote>\n<p>今日はずっと家<code>に</code>います。</p>\n</blockquote>\n<p>表达“存在”是一种状态。</p>\n<blockquote>\n<p>明日はずっと家<code>で</code>ゲームをします。</p>\n</blockquote>\n<p>表达“打游戏”是一个动作。</p>\n<blockquote>\n<p>あそこ<code>に</code>山が見えます。</p>\n</blockquote>\n<p>表达的“能被看见”是一个状态。</p>\n<blockquote>\n<p>友達の家<code>に</code>携帯を忘れました。</p>\n</blockquote>\n<p>表达“落在某处”是一个事实&#x2F;状态。</p>\n<blockquote>\n<p>友達の家<code>で</code>携帯を無くしました。</p>\n</blockquote>\n<p>表达“弄丢”是一个动作。</p>\n<p><code>从“弄丢了”这个动作发生开始，就一直处于”忘了“的状态。</code></p>\n<blockquote>\n<p>ここ<code>に</code>車を停めてください。</p>\n</blockquote>\n<p>把车停在这里，表达的是在这里保持一种停着的状态。</p>\n<blockquote>\n<p>ここ<code>で</code>車を停めでください。</p>\n</blockquote>\n<p>在这里停车，表达的是“停”这个动作，至于“停”完了是保持“停”的状态还是继续发生“动”的后续动作并不是重点。</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">再比如说：寝る，有两个意思，一个是“睡觉　眠る”，一个是“躺着 横たわる・横になる”\n\n「ここで寝る」表示的是在这里睡觉，因为睡觉是个动作，至于你这个动作做了会怎么样那不重要，就在这里睡就完事了。\n\n「ここに寝る」表示在这里躺着，怎么躺着的不重要，倒下去还是慢慢躺下去或者后空翻接转体三周半摔在上面都不重要，最终变成躺着就可以，只要最后是在ここ躺着的状态都OK。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n"},{"title":"Hystrix","date":"2022-06-22T14:41:52.000Z","_content":"![hystrix](hystrix/hystrix.webp)\n\n> [官方文档](https://github.com/Netflix/Hystrix/wiki)\n## Hystrix的主要功能\n1. 线程拆分、隔离\n2. 降级、熔断\n3. 超时\n4. 缓存\n5. 监控\n\n增加服务调用方的对外吞吐，对被调用方提供保护\n\n## 线程拆分、隔离\n任务线程和请求线程隔离，不同种类任务间也可以使用不同的线程池，相互间隔离。\n\n## 降级\n超时、异常、线程池饱和（请求拒绝，不一定是线程池的maximumPoolSize或者blockingQueue的size限制，因为会优先检查`queueSizeRejectionThreshold`，这玩意儿的默认值是5）都会执行降级\n\n```java\npublic class CommandHelloWorld extends HystrixCommand<String> {\n\n  private final String name;\n\n  public CommandHelloWorld(String name) {\n    super(HystrixCommandGroupKey.Factory.asKey(\"ExampleGroup\"));\n    this.name = name;\n  }\n\n  @Override\n  protected String run() {\n      // 这里是正常业务\n    throw new RuntimeException();\n  }\n\n  @Override\n  protected String getFallback() {\n      // 降级后的内容\n      // 1. 如果这里不是固定的内容还有“降级业务”，\n      // 需要在这里创建新的command，相当于再加一级。\n      // 2. 如果这里“降级业务”是查询缓存一类的低I/O行为\n      // 可以考虑使用“信号量”\n    return \"dummy message\";\n  }\n}\n```\n## 熔断和恢复逻辑（断路器开闭切换）\n`关闭`状态，如果一段时间总的请求数达到`circuitBreaker.requestVolumeThreshold`且失败的请求数大于`circuitBreaker.errorThresholdPercentage`这个百分比，断路器就会进入`打开`状态，打开状态下所有的请求都会直接执行降级逻辑，然后在`circuitBreaker.sleepWindowInMilliseconds`这个时间后会进入`半开`状态，半开状态下会尝试放一个请求，如果：\n1. 该请求成功，则会进入`关闭`状态\n2. 该请求失败，保持`打开`状态（将当前时间设置为打开时间，再次等待`circuitBreaker.sleepWindowInMilliseconds`进入`半开`）\n\n\n## Pool配置\n\n### corePoolSize\n- > Core thread-pool size that gets passed to ThreadPoolExecutor.setCorePoolSize(int)\n- <font color=\"red\">```10 ```</font>\n\n### maximumPoolSize\n- > Maximum thread-pool size configured for threadpool. May conflict with other config, so if you need the actual value that gets passed to ThreadPoolExecutor.setMaximumPoolSize(int), use actualMaximumSize(). Given all of the thread pool configuration, what is the actual maximumSize applied to the thread pool via ThreadPoolExecutor.setMaximumPoolSize(int) Cases: 1) allowMaximumSizeToDivergeFromCoreSize == false: maximumSize is set to coreSize 2) allowMaximumSizeToDivergeFromCoreSize == true, maximumSize >= coreSize: thread pool has different core/max sizes, so return the configured max 3) allowMaximumSizeToDivergeFromCoreSize == true, maximumSize < coreSize: threadpool incorrectly configured, use coreSize for max size\n- 仅当allowMaximumSizeToDivergeFromCoreSize是true且maximumPoolSize大于coreSize时这里的值为实际传到线程池的maximumPoolSize，否则传到线程池的maximumPoolSize实际大小为coreSize\n- <font color=\"red\">```10 ```</font>\n\n### keepAliveTime\n- > Keep-alive time in minutes that gets passed to ThreadPoolExecutor.setKeepAliveTime(long, TimeUnit)\n- <font color=\"red\">```1 ```</font>\n\n### maxQueueSize\n- > Max queue size that gets passed to BlockingQueue in HystrixConcurrencyStrategy.getBlockingQueue(int) This should only affect the instantiation of a threadpool - it is not eliglible to change a queue size on the fly. For that, use queueSizeRejectionThreshold(). -1 turns it off and makes us use SynchronousQueue\n- 控制线程池的等待队列大小，不过为了能够在运行时修改这个值，hystrix往隔离线程池提交任务的时候实际参考的是queueSizeRejectionThreshold，这个值默认-1使用SynchronousQueue\n- <font color=\"red\">```-1 ```</font>\n\n### queueSizeRejectionThreshold\n- > Queue size rejection threshold is an artificial \"max\" size at which rejections will occur even if maxQueueSize has not been reached. This is done because the maxQueueSize of a BlockingQueue can not be dynamically changed and we want to support dynamically changing the queue size that affects rejections. This is used by HystrixCommand when queuing a thread for execution.\n- 实际控制等待队列大小的值，不过如果这个值小于maxQueueSize，那实际生效的还是maxQueueSize\n- <font color=\"red\">```5 ```</font>\n\n### allowMaximumSizeToDivergeFromCoreSize\n- > should the maximumSize config value get read and used in configuring the threadPool. turning this on should be a conscious decision by the user, so we default it to false.\n- <font color=\"red\">```false ```</font>\n\n### threadPoolRollingNumberStatisticalWindowInMilliseconds\n- > Duration of statistical rolling window in milliseconds. This is passed into HystrixRollingNumber inside each HystrixThreadPoolMetrics instance.\n- 滚动窗口的时间\n- <font color=\"red\">```10000 ```</font>\n\n### threadPoolRollingNumberStatisticalWindowBuckets\n- > Number of buckets the rolling statistical window is broken into. This is passed into HystrixRollingNumber inside each HystrixThreadPoolMetrics instance.\n- 滚动窗口的桶的数量\n- <font color=\"red\">``` 10 ``` ```</font>\n\n\n## Command配置\n### circuitBreakerEnabled\n- > Whether to use a HystrixCircuitBreaker or not. If false no circuit-breaker logic will be used and all requests permitted. This is similar in effect to circuitBreakerForceClosed() except that continues tracking metrics and knowing whether it should be open/closed, this property results in not even instantiating a circuit-breaker.\n- 是否启用熔断，跟circuitBreakerForceClosed的区别就是如果这个关掉的话也不会有统计数据出现\n- <font color=\"red\">```true ```</font>\n\n### circuitBreakerErrorThresholdPercentage\n- > Error percentage threshold (as whole number such as 50) at which point the circuit breaker will trip open and reject requests. It will stay tripped for the duration defined in circuitBreakerSleepWindowInMilliseconds(); The error percentage this is compared against comes from HystrixCommandMetrics.getHealthCounts().\n- 触发断路的请求数量百分比\n- <font color=\"red\">```50 ```</font>\n\n### circuitBreakerForceClosed\n- > If true the HystrixCircuitBreaker.allowRequest() will always return true to allow requests regardless of the error percentage from HystrixCommandMetrics.getHealthCounts(). The circuitBreakerForceOpen() property takes precedence so if it set to true this property does nothing.\n- <font color=\"red\">```false ```</font>\n\n### circuitBreakerForceOpen\n- > If true the HystrixCircuitBreaker.allowRequest() will always return false, causing the circuit to be open (tripped) and reject all requests. This property takes precedence over circuitBreakerForceClosed()\n- <font color=\"red\">```false ```</font>\n\n### circuitBreakerRequestVolumeThreshold\n- > Minimum number of requests in the metricsRollingStatisticalWindowInMilliseconds() that must exist before the HystrixCircuitBreaker will trip. If below this number the circuit will not trip regardless of error percentage.\n- 触发断路逻辑的最小阈值，在一个统计窗口内至少有一定数量的请求发生才会走断路判断逻辑\n- <font color=\"red\">```20 ```</font>\n\n### circuitBreakerSleepWindowInMilliseconds\n- > The time in milliseconds after a HystrixCircuitBreaker trips open that it should wait before trying requests again.\n- “半开”的尝试间隔，熔断触发之后在这个时间之后进入“半开”状态，观察请求是否恢复正常\n- <font color=\"red\">```5000 ```</font>\n\n### executionIsolationSemaphoreMaxConcurrentRequests\n- > Number of concurrent requests permitted to HystrixCommand.run(). Requests beyond the concurrent limit will be rejected. Applicable only when executionIsolationStrategy() == SEMAPHORE.\n- 最大的并发请求提交数，只在“信号量”模式下生效\n- <font color=\"red\">```10 ```</font>\n\n###  executionIsolationStrategy\n- > What isolation strategy HystrixCommand.run() will be executed with. If HystrixCommandProperties.ExecutionIsolationStrategy.THREAD then it will be executed on a separate thread and concurrent requests limited by the number of threads in the thread-pool. If HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE then it will be executed on the calling thread and concurrent requests limited by the semaphore count.\n- 隔离策略\n- <font color=\"red\">```ExecutionIsolationStrategy.THREAD ```</font>\n\n### executionIsolationThreadInterruptOnTimeout\n- > Whether the execution thread should attempt an interrupt (using Future.cancel) when a thread times out. Applicable only when executionIsolationStrategy() == THREAD.\n- 超时的时候是否尝试打断执行线程\n- <font color=\"red\">```true ```</font>\n\n### executionIsolationThreadInterruptOnFutureCancel\n- > Whether the execution thread should be interrupted if the execution observable is unsubscribed or the future is cancelled via Future.cancel(true)). Applicable only when executionIsolationStrategy() == THREAD.\n- 取消订阅或者调用future.cancel(true)时是否打断工作线程（结构化并发？）\n- <font color=\"red\">```false ```</font>\n\n### executionIsolationThreadPoolKeyOverride\n- > Allow a dynamic override of the HystrixThreadPoolKey that will dynamically change which HystrixThreadPool a HystrixCommand executes on. Typically this should return NULL which will cause it to use the HystrixThreadPoolKey injected into a HystrixCommand or derived from the HystrixCommandGroupKey. When set the injected or derived values will be ignored and a new HystrixThreadPool created (if necessary) and the HystrixCommand will begin using the newly defined pool. \n- <font color=\"red\">```null ```</font>\n\n### executionTimeoutInMilliseconds\n- > Time in milliseconds at which point the command will timeout and halt execution. If executionIsolationThreadInterruptOnTimeout == true and the command is thread-isolated, the executing thread will be interrupted. If the command is semaphore-isolated and a HystrixObservableCommand, that command will get unsubscribed. \n- <font color=\"red\">```1000 ```</font>\n\n### executionTimeoutEnabled \n- > Whether the timeout mechanism is enabled for this command\n- <font color=\"red\">```true ```</font>\n\n### fallbackIsolationSemaphoreMaxConcurrentRequests\n- > Number of concurrent requests permitted to HystrixCommand.getFallback(). Requests beyond the concurrent limit will fail-fast and not attempt retrieving a fallback.\n- 最大的并发执行fallback的请求数量，超过了就不执行fallback且抛出异常算“执行失败”\n- <font color=\"red\">```10 ```</font>\n\n### fallbackEnabled\n- > Whether HystrixCommand.getFallback() should be attempted when failure occurs.\n- <font color=\"red\">```true ```</font>\n\n### metricsHealthSnapshotIntervalInMilliseconds\n- > Time in milliseconds to wait between allowing health snapshots to be taken that calculate success and error percentages and affect HystrixCircuitBreaker.isOpen() status. On high-volume circuits the continual calculation of error percentage can become CPU intensive thus this controls how often it is calculated. \n- 健康快照的执行间隔，健康快照是用来计算成功/失败的百分比的\n- <font color=\"red\">```500 ```</font>\n\n### metricsRollingPercentileBucketSize\n- > Maximum number of values stored in each bucket of the rolling percentile. This is passed into HystrixRollingPercentile inside HystrixCommandMetrics.\n- <font color=\"red\">```100 ```</font>\n\n### metricsRollingPercentileEnabled\n- > Whether percentile metrics should be captured using HystrixRollingPercentile inside HystrixCommandMetrics.\n- <font color=\"red\">```true ```</font>\n\n### metricsRollingPercentileWindowInMilliseconds\n- > Duration of percentile rolling window in milliseconds. This is passed into HystrixRollingPercentile inside HystrixCommandMetrics.\n- <font color=\"red\">```60000 ```</font>\n\n### metricsRollingPercentileWindowBuckets\n- > Number of buckets the rolling percentile window is broken into. This is passed into HystrixRollingPercentile inside HystrixCommandMetrics.\n- <font color=\"red\">```6 ```</font>\n\n### metricsRollingStatisticalWindowInMilliseconds\n- > Duration of statistical rolling window in milliseconds. This is passed into HystrixRollingNumber inside HystrixCommandMetrics.\n- <font color=\"red\">```10000 ```</font>\n\n### metricsRollingStatisticalWindowBuckets\n- > Number of buckets the rolling statistical window is broken into. This is passed into HystrixRollingNumber inside HystrixCommandMetrics.\n- <font color=\"red\">```10 ```</font>\n\n### requestCacheEnabled\n- > Whether HystrixCommand.getCacheKey() should be used with HystrixRequestCache to provide de-duplication functionality via request-scoped caching.\n- <font color=\"red\">```true ```</font>\n\n### requestLogEnabled\n- > Whether HystrixCommand execution and events should be logged to HystrixRequestLog.\n- <font color=\"red\">```true ```</font>\n\n\n## 缓存\n*实现AbstractCommand中的`getCacheKey()`\n\n（HystrixRequestContext、略）\n\n## 监控\n*线程池的配置注意观察rejected数值\n\n（hystrix-metrics-event-stream、略）","source":"_posts/hystrix.md","raw":"---\ntitle: Hystrix\ndate: 2022-06-22 22:41:52\ncategories:\n    - 基础姿势\n    - 微服务\ntags:\n    - Netflix Hystrix\n    - Spring Cloud\n    - Java\n    - microservice\n    - distributed services\n---\n![hystrix](hystrix/hystrix.webp)\n\n> [官方文档](https://github.com/Netflix/Hystrix/wiki)\n## Hystrix的主要功能\n1. 线程拆分、隔离\n2. 降级、熔断\n3. 超时\n4. 缓存\n5. 监控\n\n增加服务调用方的对外吞吐，对被调用方提供保护\n\n## 线程拆分、隔离\n任务线程和请求线程隔离，不同种类任务间也可以使用不同的线程池，相互间隔离。\n\n## 降级\n超时、异常、线程池饱和（请求拒绝，不一定是线程池的maximumPoolSize或者blockingQueue的size限制，因为会优先检查`queueSizeRejectionThreshold`，这玩意儿的默认值是5）都会执行降级\n\n```java\npublic class CommandHelloWorld extends HystrixCommand<String> {\n\n  private final String name;\n\n  public CommandHelloWorld(String name) {\n    super(HystrixCommandGroupKey.Factory.asKey(\"ExampleGroup\"));\n    this.name = name;\n  }\n\n  @Override\n  protected String run() {\n      // 这里是正常业务\n    throw new RuntimeException();\n  }\n\n  @Override\n  protected String getFallback() {\n      // 降级后的内容\n      // 1. 如果这里不是固定的内容还有“降级业务”，\n      // 需要在这里创建新的command，相当于再加一级。\n      // 2. 如果这里“降级业务”是查询缓存一类的低I/O行为\n      // 可以考虑使用“信号量”\n    return \"dummy message\";\n  }\n}\n```\n## 熔断和恢复逻辑（断路器开闭切换）\n`关闭`状态，如果一段时间总的请求数达到`circuitBreaker.requestVolumeThreshold`且失败的请求数大于`circuitBreaker.errorThresholdPercentage`这个百分比，断路器就会进入`打开`状态，打开状态下所有的请求都会直接执行降级逻辑，然后在`circuitBreaker.sleepWindowInMilliseconds`这个时间后会进入`半开`状态，半开状态下会尝试放一个请求，如果：\n1. 该请求成功，则会进入`关闭`状态\n2. 该请求失败，保持`打开`状态（将当前时间设置为打开时间，再次等待`circuitBreaker.sleepWindowInMilliseconds`进入`半开`）\n\n\n## Pool配置\n\n### corePoolSize\n- > Core thread-pool size that gets passed to ThreadPoolExecutor.setCorePoolSize(int)\n- <font color=\"red\">```10 ```</font>\n\n### maximumPoolSize\n- > Maximum thread-pool size configured for threadpool. May conflict with other config, so if you need the actual value that gets passed to ThreadPoolExecutor.setMaximumPoolSize(int), use actualMaximumSize(). Given all of the thread pool configuration, what is the actual maximumSize applied to the thread pool via ThreadPoolExecutor.setMaximumPoolSize(int) Cases: 1) allowMaximumSizeToDivergeFromCoreSize == false: maximumSize is set to coreSize 2) allowMaximumSizeToDivergeFromCoreSize == true, maximumSize >= coreSize: thread pool has different core/max sizes, so return the configured max 3) allowMaximumSizeToDivergeFromCoreSize == true, maximumSize < coreSize: threadpool incorrectly configured, use coreSize for max size\n- 仅当allowMaximumSizeToDivergeFromCoreSize是true且maximumPoolSize大于coreSize时这里的值为实际传到线程池的maximumPoolSize，否则传到线程池的maximumPoolSize实际大小为coreSize\n- <font color=\"red\">```10 ```</font>\n\n### keepAliveTime\n- > Keep-alive time in minutes that gets passed to ThreadPoolExecutor.setKeepAliveTime(long, TimeUnit)\n- <font color=\"red\">```1 ```</font>\n\n### maxQueueSize\n- > Max queue size that gets passed to BlockingQueue in HystrixConcurrencyStrategy.getBlockingQueue(int) This should only affect the instantiation of a threadpool - it is not eliglible to change a queue size on the fly. For that, use queueSizeRejectionThreshold(). -1 turns it off and makes us use SynchronousQueue\n- 控制线程池的等待队列大小，不过为了能够在运行时修改这个值，hystrix往隔离线程池提交任务的时候实际参考的是queueSizeRejectionThreshold，这个值默认-1使用SynchronousQueue\n- <font color=\"red\">```-1 ```</font>\n\n### queueSizeRejectionThreshold\n- > Queue size rejection threshold is an artificial \"max\" size at which rejections will occur even if maxQueueSize has not been reached. This is done because the maxQueueSize of a BlockingQueue can not be dynamically changed and we want to support dynamically changing the queue size that affects rejections. This is used by HystrixCommand when queuing a thread for execution.\n- 实际控制等待队列大小的值，不过如果这个值小于maxQueueSize，那实际生效的还是maxQueueSize\n- <font color=\"red\">```5 ```</font>\n\n### allowMaximumSizeToDivergeFromCoreSize\n- > should the maximumSize config value get read and used in configuring the threadPool. turning this on should be a conscious decision by the user, so we default it to false.\n- <font color=\"red\">```false ```</font>\n\n### threadPoolRollingNumberStatisticalWindowInMilliseconds\n- > Duration of statistical rolling window in milliseconds. This is passed into HystrixRollingNumber inside each HystrixThreadPoolMetrics instance.\n- 滚动窗口的时间\n- <font color=\"red\">```10000 ```</font>\n\n### threadPoolRollingNumberStatisticalWindowBuckets\n- > Number of buckets the rolling statistical window is broken into. This is passed into HystrixRollingNumber inside each HystrixThreadPoolMetrics instance.\n- 滚动窗口的桶的数量\n- <font color=\"red\">``` 10 ``` ```</font>\n\n\n## Command配置\n### circuitBreakerEnabled\n- > Whether to use a HystrixCircuitBreaker or not. If false no circuit-breaker logic will be used and all requests permitted. This is similar in effect to circuitBreakerForceClosed() except that continues tracking metrics and knowing whether it should be open/closed, this property results in not even instantiating a circuit-breaker.\n- 是否启用熔断，跟circuitBreakerForceClosed的区别就是如果这个关掉的话也不会有统计数据出现\n- <font color=\"red\">```true ```</font>\n\n### circuitBreakerErrorThresholdPercentage\n- > Error percentage threshold (as whole number such as 50) at which point the circuit breaker will trip open and reject requests. It will stay tripped for the duration defined in circuitBreakerSleepWindowInMilliseconds(); The error percentage this is compared against comes from HystrixCommandMetrics.getHealthCounts().\n- 触发断路的请求数量百分比\n- <font color=\"red\">```50 ```</font>\n\n### circuitBreakerForceClosed\n- > If true the HystrixCircuitBreaker.allowRequest() will always return true to allow requests regardless of the error percentage from HystrixCommandMetrics.getHealthCounts(). The circuitBreakerForceOpen() property takes precedence so if it set to true this property does nothing.\n- <font color=\"red\">```false ```</font>\n\n### circuitBreakerForceOpen\n- > If true the HystrixCircuitBreaker.allowRequest() will always return false, causing the circuit to be open (tripped) and reject all requests. This property takes precedence over circuitBreakerForceClosed()\n- <font color=\"red\">```false ```</font>\n\n### circuitBreakerRequestVolumeThreshold\n- > Minimum number of requests in the metricsRollingStatisticalWindowInMilliseconds() that must exist before the HystrixCircuitBreaker will trip. If below this number the circuit will not trip regardless of error percentage.\n- 触发断路逻辑的最小阈值，在一个统计窗口内至少有一定数量的请求发生才会走断路判断逻辑\n- <font color=\"red\">```20 ```</font>\n\n### circuitBreakerSleepWindowInMilliseconds\n- > The time in milliseconds after a HystrixCircuitBreaker trips open that it should wait before trying requests again.\n- “半开”的尝试间隔，熔断触发之后在这个时间之后进入“半开”状态，观察请求是否恢复正常\n- <font color=\"red\">```5000 ```</font>\n\n### executionIsolationSemaphoreMaxConcurrentRequests\n- > Number of concurrent requests permitted to HystrixCommand.run(). Requests beyond the concurrent limit will be rejected. Applicable only when executionIsolationStrategy() == SEMAPHORE.\n- 最大的并发请求提交数，只在“信号量”模式下生效\n- <font color=\"red\">```10 ```</font>\n\n###  executionIsolationStrategy\n- > What isolation strategy HystrixCommand.run() will be executed with. If HystrixCommandProperties.ExecutionIsolationStrategy.THREAD then it will be executed on a separate thread and concurrent requests limited by the number of threads in the thread-pool. If HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE then it will be executed on the calling thread and concurrent requests limited by the semaphore count.\n- 隔离策略\n- <font color=\"red\">```ExecutionIsolationStrategy.THREAD ```</font>\n\n### executionIsolationThreadInterruptOnTimeout\n- > Whether the execution thread should attempt an interrupt (using Future.cancel) when a thread times out. Applicable only when executionIsolationStrategy() == THREAD.\n- 超时的时候是否尝试打断执行线程\n- <font color=\"red\">```true ```</font>\n\n### executionIsolationThreadInterruptOnFutureCancel\n- > Whether the execution thread should be interrupted if the execution observable is unsubscribed or the future is cancelled via Future.cancel(true)). Applicable only when executionIsolationStrategy() == THREAD.\n- 取消订阅或者调用future.cancel(true)时是否打断工作线程（结构化并发？）\n- <font color=\"red\">```false ```</font>\n\n### executionIsolationThreadPoolKeyOverride\n- > Allow a dynamic override of the HystrixThreadPoolKey that will dynamically change which HystrixThreadPool a HystrixCommand executes on. Typically this should return NULL which will cause it to use the HystrixThreadPoolKey injected into a HystrixCommand or derived from the HystrixCommandGroupKey. When set the injected or derived values will be ignored and a new HystrixThreadPool created (if necessary) and the HystrixCommand will begin using the newly defined pool. \n- <font color=\"red\">```null ```</font>\n\n### executionTimeoutInMilliseconds\n- > Time in milliseconds at which point the command will timeout and halt execution. If executionIsolationThreadInterruptOnTimeout == true and the command is thread-isolated, the executing thread will be interrupted. If the command is semaphore-isolated and a HystrixObservableCommand, that command will get unsubscribed. \n- <font color=\"red\">```1000 ```</font>\n\n### executionTimeoutEnabled \n- > Whether the timeout mechanism is enabled for this command\n- <font color=\"red\">```true ```</font>\n\n### fallbackIsolationSemaphoreMaxConcurrentRequests\n- > Number of concurrent requests permitted to HystrixCommand.getFallback(). Requests beyond the concurrent limit will fail-fast and not attempt retrieving a fallback.\n- 最大的并发执行fallback的请求数量，超过了就不执行fallback且抛出异常算“执行失败”\n- <font color=\"red\">```10 ```</font>\n\n### fallbackEnabled\n- > Whether HystrixCommand.getFallback() should be attempted when failure occurs.\n- <font color=\"red\">```true ```</font>\n\n### metricsHealthSnapshotIntervalInMilliseconds\n- > Time in milliseconds to wait between allowing health snapshots to be taken that calculate success and error percentages and affect HystrixCircuitBreaker.isOpen() status. On high-volume circuits the continual calculation of error percentage can become CPU intensive thus this controls how often it is calculated. \n- 健康快照的执行间隔，健康快照是用来计算成功/失败的百分比的\n- <font color=\"red\">```500 ```</font>\n\n### metricsRollingPercentileBucketSize\n- > Maximum number of values stored in each bucket of the rolling percentile. This is passed into HystrixRollingPercentile inside HystrixCommandMetrics.\n- <font color=\"red\">```100 ```</font>\n\n### metricsRollingPercentileEnabled\n- > Whether percentile metrics should be captured using HystrixRollingPercentile inside HystrixCommandMetrics.\n- <font color=\"red\">```true ```</font>\n\n### metricsRollingPercentileWindowInMilliseconds\n- > Duration of percentile rolling window in milliseconds. This is passed into HystrixRollingPercentile inside HystrixCommandMetrics.\n- <font color=\"red\">```60000 ```</font>\n\n### metricsRollingPercentileWindowBuckets\n- > Number of buckets the rolling percentile window is broken into. This is passed into HystrixRollingPercentile inside HystrixCommandMetrics.\n- <font color=\"red\">```6 ```</font>\n\n### metricsRollingStatisticalWindowInMilliseconds\n- > Duration of statistical rolling window in milliseconds. This is passed into HystrixRollingNumber inside HystrixCommandMetrics.\n- <font color=\"red\">```10000 ```</font>\n\n### metricsRollingStatisticalWindowBuckets\n- > Number of buckets the rolling statistical window is broken into. This is passed into HystrixRollingNumber inside HystrixCommandMetrics.\n- <font color=\"red\">```10 ```</font>\n\n### requestCacheEnabled\n- > Whether HystrixCommand.getCacheKey() should be used with HystrixRequestCache to provide de-duplication functionality via request-scoped caching.\n- <font color=\"red\">```true ```</font>\n\n### requestLogEnabled\n- > Whether HystrixCommand execution and events should be logged to HystrixRequestLog.\n- <font color=\"red\">```true ```</font>\n\n\n## 缓存\n*实现AbstractCommand中的`getCacheKey()`\n\n（HystrixRequestContext、略）\n\n## 监控\n*线程池的配置注意观察rejected数值\n\n（hystrix-metrics-event-stream、略）","slug":"hystrix","published":1,"updated":"2023-03-17T02:30:47.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdt6000jxtujda384bzm","content":"<p><img src=\"/2022/06/22/hystrix/hystrix.webp\" alt=\"hystrix\"></p>\n<blockquote>\n<p><a href=\"https://github.com/Netflix/Hystrix/wiki\">官方文档</a></p>\n</blockquote>\n<h2 id=\"Hystrix的主要功能\"><a href=\"#Hystrix的主要功能\" class=\"headerlink\" title=\"Hystrix的主要功能\"></a>Hystrix的主要功能</h2><ol>\n<li>线程拆分、隔离</li>\n<li>降级、熔断</li>\n<li>超时</li>\n<li>缓存</li>\n<li>监控</li>\n</ol>\n<p>增加服务调用方的对外吞吐，对被调用方提供保护</p>\n<h2 id=\"线程拆分、隔离\"><a href=\"#线程拆分、隔离\" class=\"headerlink\" title=\"线程拆分、隔离\"></a>线程拆分、隔离</h2><p>任务线程和请求线程隔离，不同种类任务间也可以使用不同的线程池，相互间隔离。</p>\n<h2 id=\"降级\"><a href=\"#降级\" class=\"headerlink\" title=\"降级\"></a>降级</h2><p>超时、异常、线程池饱和（请求拒绝，不一定是线程池的maximumPoolSize或者blockingQueue的size限制，因为会优先检查<code>queueSizeRejectionThreshold</code>，这玩意儿的默认值是5）都会执行降级</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CommandHelloWorld</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HystrixCommand</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">CommandHelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HystrixCommandGroupKey<span class=\"token punctuation\">.</span>Factory</span><span class=\"token punctuation\">.</span><span class=\"token function\">asKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ExampleGroup\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">protected</span> <span class=\"token class-name\">String</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 这里是正常业务</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">protected</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getFallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 降级后的内容</span>\n      <span class=\"token comment\">// 1. 如果这里不是固定的内容还有“降级业务”，</span>\n      <span class=\"token comment\">// 需要在这里创建新的command，相当于再加一级。</span>\n      <span class=\"token comment\">// 2. 如果这里“降级业务”是查询缓存一类的低I/O行为</span>\n      <span class=\"token comment\">// 可以考虑使用“信号量”</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"dummy message\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"熔断和恢复逻辑（断路器开闭切换）\"><a href=\"#熔断和恢复逻辑（断路器开闭切换）\" class=\"headerlink\" title=\"熔断和恢复逻辑（断路器开闭切换）\"></a>熔断和恢复逻辑（断路器开闭切换）</h2><p><code>关闭</code>状态，如果一段时间总的请求数达到<code>circuitBreaker.requestVolumeThreshold</code>且失败的请求数大于<code>circuitBreaker.errorThresholdPercentage</code>这个百分比，断路器就会进入<code>打开</code>状态，打开状态下所有的请求都会直接执行降级逻辑，然后在<code>circuitBreaker.sleepWindowInMilliseconds</code>这个时间后会进入<code>半开</code>状态，半开状态下会尝试放一个请求，如果：</p>\n<ol>\n<li>该请求成功，则会进入<code>关闭</code>状态</li>\n<li>该请求失败，保持<code>打开</code>状态（将当前时间设置为打开时间，再次等待<code>circuitBreaker.sleepWindowInMilliseconds</code>进入<code>半开</code>）</li>\n</ol>\n<h2 id=\"Pool配置\"><a href=\"#Pool配置\" class=\"headerlink\" title=\"Pool配置\"></a>Pool配置</h2><h3 id=\"corePoolSize\"><a href=\"#corePoolSize\" class=\"headerlink\" title=\"corePoolSize\"></a>corePoolSize</h3><ul>\n<li><blockquote>\n<p>Core thread-pool size that gets passed to ThreadPoolExecutor.setCorePoolSize(int)</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>10 </code></font></li>\n</ul>\n<h3 id=\"maximumPoolSize\"><a href=\"#maximumPoolSize\" class=\"headerlink\" title=\"maximumPoolSize\"></a>maximumPoolSize</h3><ul>\n<li><blockquote>\n<p>Maximum thread-pool size configured for threadpool. May conflict with other config, so if you need the actual value that gets passed to ThreadPoolExecutor.setMaximumPoolSize(int), use actualMaximumSize(). Given all of the thread pool configuration, what is the actual maximumSize applied to the thread pool via ThreadPoolExecutor.setMaximumPoolSize(int) Cases: 1) allowMaximumSizeToDivergeFromCoreSize &#x3D;&#x3D; false: maximumSize is set to coreSize 2) allowMaximumSizeToDivergeFromCoreSize &#x3D;&#x3D; true, maximumSize &gt;&#x3D; coreSize: thread pool has different core&#x2F;max sizes, so return the configured max 3) allowMaximumSizeToDivergeFromCoreSize &#x3D;&#x3D; true, maximumSize &lt; coreSize: threadpool incorrectly configured, use coreSize for max size</p>\n</blockquote>\n</li>\n<li>仅当allowMaximumSizeToDivergeFromCoreSize是true且maximumPoolSize大于coreSize时这里的值为实际传到线程池的maximumPoolSize，否则传到线程池的maximumPoolSize实际大小为coreSize</li>\n<li><font color=\"red\"><code>10 </code></font></li>\n</ul>\n<h3 id=\"keepAliveTime\"><a href=\"#keepAliveTime\" class=\"headerlink\" title=\"keepAliveTime\"></a>keepAliveTime</h3><ul>\n<li><blockquote>\n<p>Keep-alive time in minutes that gets passed to ThreadPoolExecutor.setKeepAliveTime(long, TimeUnit)</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>1 </code></font></li>\n</ul>\n<h3 id=\"maxQueueSize\"><a href=\"#maxQueueSize\" class=\"headerlink\" title=\"maxQueueSize\"></a>maxQueueSize</h3><ul>\n<li><blockquote>\n<p>Max queue size that gets passed to BlockingQueue in HystrixConcurrencyStrategy.getBlockingQueue(int) This should only affect the instantiation of a threadpool - it is not eliglible to change a queue size on the fly. For that, use queueSizeRejectionThreshold(). -1 turns it off and makes us use SynchronousQueue</p>\n</blockquote>\n</li>\n<li>控制线程池的等待队列大小，不过为了能够在运行时修改这个值，hystrix往隔离线程池提交任务的时候实际参考的是queueSizeRejectionThreshold，这个值默认-1使用SynchronousQueue</li>\n<li><font color=\"red\"><code>-1 </code></font></li>\n</ul>\n<h3 id=\"queueSizeRejectionThreshold\"><a href=\"#queueSizeRejectionThreshold\" class=\"headerlink\" title=\"queueSizeRejectionThreshold\"></a>queueSizeRejectionThreshold</h3><ul>\n<li><blockquote>\n<p>Queue size rejection threshold is an artificial “max” size at which rejections will occur even if maxQueueSize has not been reached. This is done because the maxQueueSize of a BlockingQueue can not be dynamically changed and we want to support dynamically changing the queue size that affects rejections. This is used by HystrixCommand when queuing a thread for execution.</p>\n</blockquote>\n</li>\n<li>实际控制等待队列大小的值，不过如果这个值小于maxQueueSize，那实际生效的还是maxQueueSize</li>\n<li><font color=\"red\"><code>5 </code></font></li>\n</ul>\n<h3 id=\"allowMaximumSizeToDivergeFromCoreSize\"><a href=\"#allowMaximumSizeToDivergeFromCoreSize\" class=\"headerlink\" title=\"allowMaximumSizeToDivergeFromCoreSize\"></a>allowMaximumSizeToDivergeFromCoreSize</h3><ul>\n<li><blockquote>\n<p>should the maximumSize config value get read and used in configuring the threadPool. turning this on should be a conscious decision by the user, so we default it to false.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>false </code></font></li>\n</ul>\n<h3 id=\"threadPoolRollingNumberStatisticalWindowInMilliseconds\"><a href=\"#threadPoolRollingNumberStatisticalWindowInMilliseconds\" class=\"headerlink\" title=\"threadPoolRollingNumberStatisticalWindowInMilliseconds\"></a>threadPoolRollingNumberStatisticalWindowInMilliseconds</h3><ul>\n<li><blockquote>\n<p>Duration of statistical rolling window in milliseconds. This is passed into HystrixRollingNumber inside each HystrixThreadPoolMetrics instance.</p>\n</blockquote>\n</li>\n<li>滚动窗口的时间</li>\n<li><font color=\"red\"><code>10000 </code></font></li>\n</ul>\n<h3 id=\"threadPoolRollingNumberStatisticalWindowBuckets\"><a href=\"#threadPoolRollingNumberStatisticalWindowBuckets\" class=\"headerlink\" title=\"threadPoolRollingNumberStatisticalWindowBuckets\"></a>threadPoolRollingNumberStatisticalWindowBuckets</h3><ul>\n<li><blockquote>\n<p>Number of buckets the rolling statistical window is broken into. This is passed into HystrixRollingNumber inside each HystrixThreadPoolMetrics instance.</p>\n</blockquote>\n</li>\n<li>滚动窗口的桶的数量</li>\n<li><font color=\"red\"><code>10</code> &#96;&#96;&#96;</font></li>\n</ul>\n<h2 id=\"Command配置\"><a href=\"#Command配置\" class=\"headerlink\" title=\"Command配置\"></a>Command配置</h2><h3 id=\"circuitBreakerEnabled\"><a href=\"#circuitBreakerEnabled\" class=\"headerlink\" title=\"circuitBreakerEnabled\"></a>circuitBreakerEnabled</h3><ul>\n<li><blockquote>\n<p>Whether to use a HystrixCircuitBreaker or not. If false no circuit-breaker logic will be used and all requests permitted. This is similar in effect to circuitBreakerForceClosed() except that continues tracking metrics and knowing whether it should be open&#x2F;closed, this property results in not even instantiating a circuit-breaker.</p>\n</blockquote>\n</li>\n<li>是否启用熔断，跟circuitBreakerForceClosed的区别就是如果这个关掉的话也不会有统计数据出现</li>\n<li><font color=\"red\"><code>true </code></font></li>\n</ul>\n<h3 id=\"circuitBreakerErrorThresholdPercentage\"><a href=\"#circuitBreakerErrorThresholdPercentage\" class=\"headerlink\" title=\"circuitBreakerErrorThresholdPercentage\"></a>circuitBreakerErrorThresholdPercentage</h3><ul>\n<li><blockquote>\n<p>Error percentage threshold (as whole number such as 50) at which point the circuit breaker will trip open and reject requests. It will stay tripped for the duration defined in circuitBreakerSleepWindowInMilliseconds(); The error percentage this is compared against comes from HystrixCommandMetrics.getHealthCounts().</p>\n</blockquote>\n</li>\n<li>触发断路的请求数量百分比</li>\n<li><font color=\"red\"><code>50 </code></font></li>\n</ul>\n<h3 id=\"circuitBreakerForceClosed\"><a href=\"#circuitBreakerForceClosed\" class=\"headerlink\" title=\"circuitBreakerForceClosed\"></a>circuitBreakerForceClosed</h3><ul>\n<li><blockquote>\n<p>If true the HystrixCircuitBreaker.allowRequest() will always return true to allow requests regardless of the error percentage from HystrixCommandMetrics.getHealthCounts(). The circuitBreakerForceOpen() property takes precedence so if it set to true this property does nothing.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>false </code></font></li>\n</ul>\n<h3 id=\"circuitBreakerForceOpen\"><a href=\"#circuitBreakerForceOpen\" class=\"headerlink\" title=\"circuitBreakerForceOpen\"></a>circuitBreakerForceOpen</h3><ul>\n<li><blockquote>\n<p>If true the HystrixCircuitBreaker.allowRequest() will always return false, causing the circuit to be open (tripped) and reject all requests. This property takes precedence over circuitBreakerForceClosed()</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>false </code></font></li>\n</ul>\n<h3 id=\"circuitBreakerRequestVolumeThreshold\"><a href=\"#circuitBreakerRequestVolumeThreshold\" class=\"headerlink\" title=\"circuitBreakerRequestVolumeThreshold\"></a>circuitBreakerRequestVolumeThreshold</h3><ul>\n<li><blockquote>\n<p>Minimum number of requests in the metricsRollingStatisticalWindowInMilliseconds() that must exist before the HystrixCircuitBreaker will trip. If below this number the circuit will not trip regardless of error percentage.</p>\n</blockquote>\n</li>\n<li>触发断路逻辑的最小阈值，在一个统计窗口内至少有一定数量的请求发生才会走断路判断逻辑</li>\n<li><font color=\"red\"><code>20 </code></font></li>\n</ul>\n<h3 id=\"circuitBreakerSleepWindowInMilliseconds\"><a href=\"#circuitBreakerSleepWindowInMilliseconds\" class=\"headerlink\" title=\"circuitBreakerSleepWindowInMilliseconds\"></a>circuitBreakerSleepWindowInMilliseconds</h3><ul>\n<li><blockquote>\n<p>The time in milliseconds after a HystrixCircuitBreaker trips open that it should wait before trying requests again.</p>\n</blockquote>\n</li>\n<li>“半开”的尝试间隔，熔断触发之后在这个时间之后进入“半开”状态，观察请求是否恢复正常</li>\n<li><font color=\"red\"><code>5000 </code></font></li>\n</ul>\n<h3 id=\"executionIsolationSemaphoreMaxConcurrentRequests\"><a href=\"#executionIsolationSemaphoreMaxConcurrentRequests\" class=\"headerlink\" title=\"executionIsolationSemaphoreMaxConcurrentRequests\"></a>executionIsolationSemaphoreMaxConcurrentRequests</h3><ul>\n<li><blockquote>\n<p>Number of concurrent requests permitted to HystrixCommand.run(). Requests beyond the concurrent limit will be rejected. Applicable only when executionIsolationStrategy() &#x3D;&#x3D; SEMAPHORE.</p>\n</blockquote>\n</li>\n<li>最大的并发请求提交数，只在“信号量”模式下生效</li>\n<li><font color=\"red\"><code>10 </code></font></li>\n</ul>\n<h3 id=\"executionIsolationStrategy\"><a href=\"#executionIsolationStrategy\" class=\"headerlink\" title=\"executionIsolationStrategy\"></a>executionIsolationStrategy</h3><ul>\n<li><blockquote>\n<p>What isolation strategy HystrixCommand.run() will be executed with. If HystrixCommandProperties.ExecutionIsolationStrategy.THREAD then it will be executed on a separate thread and concurrent requests limited by the number of threads in the thread-pool. If HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE then it will be executed on the calling thread and concurrent requests limited by the semaphore count.</p>\n</blockquote>\n</li>\n<li>隔离策略</li>\n<li><font color=\"red\"><code>ExecutionIsolationStrategy.THREAD </code></font></li>\n</ul>\n<h3 id=\"executionIsolationThreadInterruptOnTimeout\"><a href=\"#executionIsolationThreadInterruptOnTimeout\" class=\"headerlink\" title=\"executionIsolationThreadInterruptOnTimeout\"></a>executionIsolationThreadInterruptOnTimeout</h3><ul>\n<li><blockquote>\n<p>Whether the execution thread should attempt an interrupt (using Future.cancel) when a thread times out. Applicable only when executionIsolationStrategy() &#x3D;&#x3D; THREAD.</p>\n</blockquote>\n</li>\n<li>超时的时候是否尝试打断执行线程</li>\n<li><font color=\"red\"><code>true </code></font></li>\n</ul>\n<h3 id=\"executionIsolationThreadInterruptOnFutureCancel\"><a href=\"#executionIsolationThreadInterruptOnFutureCancel\" class=\"headerlink\" title=\"executionIsolationThreadInterruptOnFutureCancel\"></a>executionIsolationThreadInterruptOnFutureCancel</h3><ul>\n<li><blockquote>\n<p>Whether the execution thread should be interrupted if the execution observable is unsubscribed or the future is cancelled via Future.cancel(true)). Applicable only when executionIsolationStrategy() &#x3D;&#x3D; THREAD.</p>\n</blockquote>\n</li>\n<li>取消订阅或者调用future.cancel(true)时是否打断工作线程（结构化并发？）</li>\n<li><font color=\"red\"><code>false </code></font></li>\n</ul>\n<h3 id=\"executionIsolationThreadPoolKeyOverride\"><a href=\"#executionIsolationThreadPoolKeyOverride\" class=\"headerlink\" title=\"executionIsolationThreadPoolKeyOverride\"></a>executionIsolationThreadPoolKeyOverride</h3><ul>\n<li><blockquote>\n<p>Allow a dynamic override of the HystrixThreadPoolKey that will dynamically change which HystrixThreadPool a HystrixCommand executes on. Typically this should return NULL which will cause it to use the HystrixThreadPoolKey injected into a HystrixCommand or derived from the HystrixCommandGroupKey. When set the injected or derived values will be ignored and a new HystrixThreadPool created (if necessary) and the HystrixCommand will begin using the newly defined pool. </p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>null </code></font></li>\n</ul>\n<h3 id=\"executionTimeoutInMilliseconds\"><a href=\"#executionTimeoutInMilliseconds\" class=\"headerlink\" title=\"executionTimeoutInMilliseconds\"></a>executionTimeoutInMilliseconds</h3><ul>\n<li><blockquote>\n<p>Time in milliseconds at which point the command will timeout and halt execution. If executionIsolationThreadInterruptOnTimeout &#x3D;&#x3D; true and the command is thread-isolated, the executing thread will be interrupted. If the command is semaphore-isolated and a HystrixObservableCommand, that command will get unsubscribed. </p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>1000 </code></font></li>\n</ul>\n<h3 id=\"executionTimeoutEnabled\"><a href=\"#executionTimeoutEnabled\" class=\"headerlink\" title=\"executionTimeoutEnabled\"></a>executionTimeoutEnabled</h3><ul>\n<li><blockquote>\n<p>Whether the timeout mechanism is enabled for this command</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>true </code></font></li>\n</ul>\n<h3 id=\"fallbackIsolationSemaphoreMaxConcurrentRequests\"><a href=\"#fallbackIsolationSemaphoreMaxConcurrentRequests\" class=\"headerlink\" title=\"fallbackIsolationSemaphoreMaxConcurrentRequests\"></a>fallbackIsolationSemaphoreMaxConcurrentRequests</h3><ul>\n<li><blockquote>\n<p>Number of concurrent requests permitted to HystrixCommand.getFallback(). Requests beyond the concurrent limit will fail-fast and not attempt retrieving a fallback.</p>\n</blockquote>\n</li>\n<li>最大的并发执行fallback的请求数量，超过了就不执行fallback且抛出异常算“执行失败”</li>\n<li><font color=\"red\"><code>10 </code></font></li>\n</ul>\n<h3 id=\"fallbackEnabled\"><a href=\"#fallbackEnabled\" class=\"headerlink\" title=\"fallbackEnabled\"></a>fallbackEnabled</h3><ul>\n<li><blockquote>\n<p>Whether HystrixCommand.getFallback() should be attempted when failure occurs.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>true </code></font></li>\n</ul>\n<h3 id=\"metricsHealthSnapshotIntervalInMilliseconds\"><a href=\"#metricsHealthSnapshotIntervalInMilliseconds\" class=\"headerlink\" title=\"metricsHealthSnapshotIntervalInMilliseconds\"></a>metricsHealthSnapshotIntervalInMilliseconds</h3><ul>\n<li><blockquote>\n<p>Time in milliseconds to wait between allowing health snapshots to be taken that calculate success and error percentages and affect HystrixCircuitBreaker.isOpen() status. On high-volume circuits the continual calculation of error percentage can become CPU intensive thus this controls how often it is calculated. </p>\n</blockquote>\n</li>\n<li>健康快照的执行间隔，健康快照是用来计算成功&#x2F;失败的百分比的</li>\n<li><font color=\"red\"><code>500 </code></font></li>\n</ul>\n<h3 id=\"metricsRollingPercentileBucketSize\"><a href=\"#metricsRollingPercentileBucketSize\" class=\"headerlink\" title=\"metricsRollingPercentileBucketSize\"></a>metricsRollingPercentileBucketSize</h3><ul>\n<li><blockquote>\n<p>Maximum number of values stored in each bucket of the rolling percentile. This is passed into HystrixRollingPercentile inside HystrixCommandMetrics.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>100 </code></font></li>\n</ul>\n<h3 id=\"metricsRollingPercentileEnabled\"><a href=\"#metricsRollingPercentileEnabled\" class=\"headerlink\" title=\"metricsRollingPercentileEnabled\"></a>metricsRollingPercentileEnabled</h3><ul>\n<li><blockquote>\n<p>Whether percentile metrics should be captured using HystrixRollingPercentile inside HystrixCommandMetrics.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>true </code></font></li>\n</ul>\n<h3 id=\"metricsRollingPercentileWindowInMilliseconds\"><a href=\"#metricsRollingPercentileWindowInMilliseconds\" class=\"headerlink\" title=\"metricsRollingPercentileWindowInMilliseconds\"></a>metricsRollingPercentileWindowInMilliseconds</h3><ul>\n<li><blockquote>\n<p>Duration of percentile rolling window in milliseconds. This is passed into HystrixRollingPercentile inside HystrixCommandMetrics.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>60000 </code></font></li>\n</ul>\n<h3 id=\"metricsRollingPercentileWindowBuckets\"><a href=\"#metricsRollingPercentileWindowBuckets\" class=\"headerlink\" title=\"metricsRollingPercentileWindowBuckets\"></a>metricsRollingPercentileWindowBuckets</h3><ul>\n<li><blockquote>\n<p>Number of buckets the rolling percentile window is broken into. This is passed into HystrixRollingPercentile inside HystrixCommandMetrics.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>6 </code></font></li>\n</ul>\n<h3 id=\"metricsRollingStatisticalWindowInMilliseconds\"><a href=\"#metricsRollingStatisticalWindowInMilliseconds\" class=\"headerlink\" title=\"metricsRollingStatisticalWindowInMilliseconds\"></a>metricsRollingStatisticalWindowInMilliseconds</h3><ul>\n<li><blockquote>\n<p>Duration of statistical rolling window in milliseconds. This is passed into HystrixRollingNumber inside HystrixCommandMetrics.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>10000 </code></font></li>\n</ul>\n<h3 id=\"metricsRollingStatisticalWindowBuckets\"><a href=\"#metricsRollingStatisticalWindowBuckets\" class=\"headerlink\" title=\"metricsRollingStatisticalWindowBuckets\"></a>metricsRollingStatisticalWindowBuckets</h3><ul>\n<li><blockquote>\n<p>Number of buckets the rolling statistical window is broken into. This is passed into HystrixRollingNumber inside HystrixCommandMetrics.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>10 </code></font></li>\n</ul>\n<h3 id=\"requestCacheEnabled\"><a href=\"#requestCacheEnabled\" class=\"headerlink\" title=\"requestCacheEnabled\"></a>requestCacheEnabled</h3><ul>\n<li><blockquote>\n<p>Whether HystrixCommand.getCacheKey() should be used with HystrixRequestCache to provide de-duplication functionality via request-scoped caching.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>true </code></font></li>\n</ul>\n<h3 id=\"requestLogEnabled\"><a href=\"#requestLogEnabled\" class=\"headerlink\" title=\"requestLogEnabled\"></a>requestLogEnabled</h3><ul>\n<li><blockquote>\n<p>Whether HystrixCommand execution and events should be logged to HystrixRequestLog.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>true </code></font></li>\n</ul>\n<h2 id=\"缓存\"><a href=\"#缓存\" class=\"headerlink\" title=\"缓存\"></a>缓存</h2><p>*实现AbstractCommand中的<code>getCacheKey()</code></p>\n<p>（HystrixRequestContext、略）</p>\n<h2 id=\"监控\"><a href=\"#监控\" class=\"headerlink\" title=\"监控\"></a>监控</h2><p>*线程池的配置注意观察rejected数值</p>\n<p>（hystrix-metrics-event-stream、略）</p>\n","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<p><img src=\"/2022/06/22/hystrix/hystrix.webp\" alt=\"hystrix\"></p>\n<blockquote>\n<p><a href=\"https://github.com/Netflix/Hystrix/wiki\">官方文档</a></p>\n</blockquote>\n<h2 id=\"Hystrix的主要功能\"><a href=\"#Hystrix的主要功能\" class=\"headerlink\" title=\"Hystrix的主要功能\"></a>Hystrix的主要功能</h2><ol>\n<li>线程拆分、隔离</li>\n<li>降级、熔断</li>\n<li>超时</li>\n<li>缓存</li>\n<li>监控</li>\n</ol>\n<p>增加服务调用方的对外吞吐，对被调用方提供保护</p>\n<h2 id=\"线程拆分、隔离\"><a href=\"#线程拆分、隔离\" class=\"headerlink\" title=\"线程拆分、隔离\"></a>线程拆分、隔离</h2><p>任务线程和请求线程隔离，不同种类任务间也可以使用不同的线程池，相互间隔离。</p>\n<h2 id=\"降级\"><a href=\"#降级\" class=\"headerlink\" title=\"降级\"></a>降级</h2><p>超时、异常、线程池饱和（请求拒绝，不一定是线程池的maximumPoolSize或者blockingQueue的size限制，因为会优先检查<code>queueSizeRejectionThreshold</code>，这玩意儿的默认值是5）都会执行降级</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CommandHelloWorld</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HystrixCommand</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">CommandHelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HystrixCommandGroupKey<span class=\"token punctuation\">.</span>Factory</span><span class=\"token punctuation\">.</span><span class=\"token function\">asKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ExampleGroup\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">protected</span> <span class=\"token class-name\">String</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 这里是正常业务</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">protected</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getFallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 降级后的内容</span>\n      <span class=\"token comment\">// 1. 如果这里不是固定的内容还有“降级业务”，</span>\n      <span class=\"token comment\">// 需要在这里创建新的command，相当于再加一级。</span>\n      <span class=\"token comment\">// 2. 如果这里“降级业务”是查询缓存一类的低I/O行为</span>\n      <span class=\"token comment\">// 可以考虑使用“信号量”</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"dummy message\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"熔断和恢复逻辑（断路器开闭切换）\"><a href=\"#熔断和恢复逻辑（断路器开闭切换）\" class=\"headerlink\" title=\"熔断和恢复逻辑（断路器开闭切换）\"></a>熔断和恢复逻辑（断路器开闭切换）</h2><p><code>关闭</code>状态，如果一段时间总的请求数达到<code>circuitBreaker.requestVolumeThreshold</code>且失败的请求数大于<code>circuitBreaker.errorThresholdPercentage</code>这个百分比，断路器就会进入<code>打开</code>状态，打开状态下所有的请求都会直接执行降级逻辑，然后在<code>circuitBreaker.sleepWindowInMilliseconds</code>这个时间后会进入<code>半开</code>状态，半开状态下会尝试放一个请求，如果：</p>\n<ol>\n<li>该请求成功，则会进入<code>关闭</code>状态</li>\n<li>该请求失败，保持<code>打开</code>状态（将当前时间设置为打开时间，再次等待<code>circuitBreaker.sleepWindowInMilliseconds</code>进入<code>半开</code>）</li>\n</ol>\n<h2 id=\"Pool配置\"><a href=\"#Pool配置\" class=\"headerlink\" title=\"Pool配置\"></a>Pool配置</h2><h3 id=\"corePoolSize\"><a href=\"#corePoolSize\" class=\"headerlink\" title=\"corePoolSize\"></a>corePoolSize</h3><ul>\n<li><blockquote>\n<p>Core thread-pool size that gets passed to ThreadPoolExecutor.setCorePoolSize(int)</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>10 </code></font></li>\n</ul>\n<h3 id=\"maximumPoolSize\"><a href=\"#maximumPoolSize\" class=\"headerlink\" title=\"maximumPoolSize\"></a>maximumPoolSize</h3><ul>\n<li><blockquote>\n<p>Maximum thread-pool size configured for threadpool. May conflict with other config, so if you need the actual value that gets passed to ThreadPoolExecutor.setMaximumPoolSize(int), use actualMaximumSize(). Given all of the thread pool configuration, what is the actual maximumSize applied to the thread pool via ThreadPoolExecutor.setMaximumPoolSize(int) Cases: 1) allowMaximumSizeToDivergeFromCoreSize &#x3D;&#x3D; false: maximumSize is set to coreSize 2) allowMaximumSizeToDivergeFromCoreSize &#x3D;&#x3D; true, maximumSize &gt;&#x3D; coreSize: thread pool has different core&#x2F;max sizes, so return the configured max 3) allowMaximumSizeToDivergeFromCoreSize &#x3D;&#x3D; true, maximumSize &lt; coreSize: threadpool incorrectly configured, use coreSize for max size</p>\n</blockquote>\n</li>\n<li>仅当allowMaximumSizeToDivergeFromCoreSize是true且maximumPoolSize大于coreSize时这里的值为实际传到线程池的maximumPoolSize，否则传到线程池的maximumPoolSize实际大小为coreSize</li>\n<li><font color=\"red\"><code>10 </code></font></li>\n</ul>\n<h3 id=\"keepAliveTime\"><a href=\"#keepAliveTime\" class=\"headerlink\" title=\"keepAliveTime\"></a>keepAliveTime</h3><ul>\n<li><blockquote>\n<p>Keep-alive time in minutes that gets passed to ThreadPoolExecutor.setKeepAliveTime(long, TimeUnit)</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>1 </code></font></li>\n</ul>\n<h3 id=\"maxQueueSize\"><a href=\"#maxQueueSize\" class=\"headerlink\" title=\"maxQueueSize\"></a>maxQueueSize</h3><ul>\n<li><blockquote>\n<p>Max queue size that gets passed to BlockingQueue in HystrixConcurrencyStrategy.getBlockingQueue(int) This should only affect the instantiation of a threadpool - it is not eliglible to change a queue size on the fly. For that, use queueSizeRejectionThreshold(). -1 turns it off and makes us use SynchronousQueue</p>\n</blockquote>\n</li>\n<li>控制线程池的等待队列大小，不过为了能够在运行时修改这个值，hystrix往隔离线程池提交任务的时候实际参考的是queueSizeRejectionThreshold，这个值默认-1使用SynchronousQueue</li>\n<li><font color=\"red\"><code>-1 </code></font></li>\n</ul>\n<h3 id=\"queueSizeRejectionThreshold\"><a href=\"#queueSizeRejectionThreshold\" class=\"headerlink\" title=\"queueSizeRejectionThreshold\"></a>queueSizeRejectionThreshold</h3><ul>\n<li><blockquote>\n<p>Queue size rejection threshold is an artificial “max” size at which rejections will occur even if maxQueueSize has not been reached. This is done because the maxQueueSize of a BlockingQueue can not be dynamically changed and we want to support dynamically changing the queue size that affects rejections. This is used by HystrixCommand when queuing a thread for execution.</p>\n</blockquote>\n</li>\n<li>实际控制等待队列大小的值，不过如果这个值小于maxQueueSize，那实际生效的还是maxQueueSize</li>\n<li><font color=\"red\"><code>5 </code></font></li>\n</ul>\n<h3 id=\"allowMaximumSizeToDivergeFromCoreSize\"><a href=\"#allowMaximumSizeToDivergeFromCoreSize\" class=\"headerlink\" title=\"allowMaximumSizeToDivergeFromCoreSize\"></a>allowMaximumSizeToDivergeFromCoreSize</h3><ul>\n<li><blockquote>\n<p>should the maximumSize config value get read and used in configuring the threadPool. turning this on should be a conscious decision by the user, so we default it to false.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>false </code></font></li>\n</ul>\n<h3 id=\"threadPoolRollingNumberStatisticalWindowInMilliseconds\"><a href=\"#threadPoolRollingNumberStatisticalWindowInMilliseconds\" class=\"headerlink\" title=\"threadPoolRollingNumberStatisticalWindowInMilliseconds\"></a>threadPoolRollingNumberStatisticalWindowInMilliseconds</h3><ul>\n<li><blockquote>\n<p>Duration of statistical rolling window in milliseconds. This is passed into HystrixRollingNumber inside each HystrixThreadPoolMetrics instance.</p>\n</blockquote>\n</li>\n<li>滚动窗口的时间</li>\n<li><font color=\"red\"><code>10000 </code></font></li>\n</ul>\n<h3 id=\"threadPoolRollingNumberStatisticalWindowBuckets\"><a href=\"#threadPoolRollingNumberStatisticalWindowBuckets\" class=\"headerlink\" title=\"threadPoolRollingNumberStatisticalWindowBuckets\"></a>threadPoolRollingNumberStatisticalWindowBuckets</h3><ul>\n<li><blockquote>\n<p>Number of buckets the rolling statistical window is broken into. This is passed into HystrixRollingNumber inside each HystrixThreadPoolMetrics instance.</p>\n</blockquote>\n</li>\n<li>滚动窗口的桶的数量</li>\n<li><font color=\"red\"><code>10</code> &#96;&#96;&#96;</font></li>\n</ul>\n<h2 id=\"Command配置\"><a href=\"#Command配置\" class=\"headerlink\" title=\"Command配置\"></a>Command配置</h2><h3 id=\"circuitBreakerEnabled\"><a href=\"#circuitBreakerEnabled\" class=\"headerlink\" title=\"circuitBreakerEnabled\"></a>circuitBreakerEnabled</h3><ul>\n<li><blockquote>\n<p>Whether to use a HystrixCircuitBreaker or not. If false no circuit-breaker logic will be used and all requests permitted. This is similar in effect to circuitBreakerForceClosed() except that continues tracking metrics and knowing whether it should be open&#x2F;closed, this property results in not even instantiating a circuit-breaker.</p>\n</blockquote>\n</li>\n<li>是否启用熔断，跟circuitBreakerForceClosed的区别就是如果这个关掉的话也不会有统计数据出现</li>\n<li><font color=\"red\"><code>true </code></font></li>\n</ul>\n<h3 id=\"circuitBreakerErrorThresholdPercentage\"><a href=\"#circuitBreakerErrorThresholdPercentage\" class=\"headerlink\" title=\"circuitBreakerErrorThresholdPercentage\"></a>circuitBreakerErrorThresholdPercentage</h3><ul>\n<li><blockquote>\n<p>Error percentage threshold (as whole number such as 50) at which point the circuit breaker will trip open and reject requests. It will stay tripped for the duration defined in circuitBreakerSleepWindowInMilliseconds(); The error percentage this is compared against comes from HystrixCommandMetrics.getHealthCounts().</p>\n</blockquote>\n</li>\n<li>触发断路的请求数量百分比</li>\n<li><font color=\"red\"><code>50 </code></font></li>\n</ul>\n<h3 id=\"circuitBreakerForceClosed\"><a href=\"#circuitBreakerForceClosed\" class=\"headerlink\" title=\"circuitBreakerForceClosed\"></a>circuitBreakerForceClosed</h3><ul>\n<li><blockquote>\n<p>If true the HystrixCircuitBreaker.allowRequest() will always return true to allow requests regardless of the error percentage from HystrixCommandMetrics.getHealthCounts(). The circuitBreakerForceOpen() property takes precedence so if it set to true this property does nothing.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>false </code></font></li>\n</ul>\n<h3 id=\"circuitBreakerForceOpen\"><a href=\"#circuitBreakerForceOpen\" class=\"headerlink\" title=\"circuitBreakerForceOpen\"></a>circuitBreakerForceOpen</h3><ul>\n<li><blockquote>\n<p>If true the HystrixCircuitBreaker.allowRequest() will always return false, causing the circuit to be open (tripped) and reject all requests. This property takes precedence over circuitBreakerForceClosed()</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>false </code></font></li>\n</ul>\n<h3 id=\"circuitBreakerRequestVolumeThreshold\"><a href=\"#circuitBreakerRequestVolumeThreshold\" class=\"headerlink\" title=\"circuitBreakerRequestVolumeThreshold\"></a>circuitBreakerRequestVolumeThreshold</h3><ul>\n<li><blockquote>\n<p>Minimum number of requests in the metricsRollingStatisticalWindowInMilliseconds() that must exist before the HystrixCircuitBreaker will trip. If below this number the circuit will not trip regardless of error percentage.</p>\n</blockquote>\n</li>\n<li>触发断路逻辑的最小阈值，在一个统计窗口内至少有一定数量的请求发生才会走断路判断逻辑</li>\n<li><font color=\"red\"><code>20 </code></font></li>\n</ul>\n<h3 id=\"circuitBreakerSleepWindowInMilliseconds\"><a href=\"#circuitBreakerSleepWindowInMilliseconds\" class=\"headerlink\" title=\"circuitBreakerSleepWindowInMilliseconds\"></a>circuitBreakerSleepWindowInMilliseconds</h3><ul>\n<li><blockquote>\n<p>The time in milliseconds after a HystrixCircuitBreaker trips open that it should wait before trying requests again.</p>\n</blockquote>\n</li>\n<li>“半开”的尝试间隔，熔断触发之后在这个时间之后进入“半开”状态，观察请求是否恢复正常</li>\n<li><font color=\"red\"><code>5000 </code></font></li>\n</ul>\n<h3 id=\"executionIsolationSemaphoreMaxConcurrentRequests\"><a href=\"#executionIsolationSemaphoreMaxConcurrentRequests\" class=\"headerlink\" title=\"executionIsolationSemaphoreMaxConcurrentRequests\"></a>executionIsolationSemaphoreMaxConcurrentRequests</h3><ul>\n<li><blockquote>\n<p>Number of concurrent requests permitted to HystrixCommand.run(). Requests beyond the concurrent limit will be rejected. Applicable only when executionIsolationStrategy() &#x3D;&#x3D; SEMAPHORE.</p>\n</blockquote>\n</li>\n<li>最大的并发请求提交数，只在“信号量”模式下生效</li>\n<li><font color=\"red\"><code>10 </code></font></li>\n</ul>\n<h3 id=\"executionIsolationStrategy\"><a href=\"#executionIsolationStrategy\" class=\"headerlink\" title=\"executionIsolationStrategy\"></a>executionIsolationStrategy</h3><ul>\n<li><blockquote>\n<p>What isolation strategy HystrixCommand.run() will be executed with. If HystrixCommandProperties.ExecutionIsolationStrategy.THREAD then it will be executed on a separate thread and concurrent requests limited by the number of threads in the thread-pool. If HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE then it will be executed on the calling thread and concurrent requests limited by the semaphore count.</p>\n</blockquote>\n</li>\n<li>隔离策略</li>\n<li><font color=\"red\"><code>ExecutionIsolationStrategy.THREAD </code></font></li>\n</ul>\n<h3 id=\"executionIsolationThreadInterruptOnTimeout\"><a href=\"#executionIsolationThreadInterruptOnTimeout\" class=\"headerlink\" title=\"executionIsolationThreadInterruptOnTimeout\"></a>executionIsolationThreadInterruptOnTimeout</h3><ul>\n<li><blockquote>\n<p>Whether the execution thread should attempt an interrupt (using Future.cancel) when a thread times out. Applicable only when executionIsolationStrategy() &#x3D;&#x3D; THREAD.</p>\n</blockquote>\n</li>\n<li>超时的时候是否尝试打断执行线程</li>\n<li><font color=\"red\"><code>true </code></font></li>\n</ul>\n<h3 id=\"executionIsolationThreadInterruptOnFutureCancel\"><a href=\"#executionIsolationThreadInterruptOnFutureCancel\" class=\"headerlink\" title=\"executionIsolationThreadInterruptOnFutureCancel\"></a>executionIsolationThreadInterruptOnFutureCancel</h3><ul>\n<li><blockquote>\n<p>Whether the execution thread should be interrupted if the execution observable is unsubscribed or the future is cancelled via Future.cancel(true)). Applicable only when executionIsolationStrategy() &#x3D;&#x3D; THREAD.</p>\n</blockquote>\n</li>\n<li>取消订阅或者调用future.cancel(true)时是否打断工作线程（结构化并发？）</li>\n<li><font color=\"red\"><code>false </code></font></li>\n</ul>\n<h3 id=\"executionIsolationThreadPoolKeyOverride\"><a href=\"#executionIsolationThreadPoolKeyOverride\" class=\"headerlink\" title=\"executionIsolationThreadPoolKeyOverride\"></a>executionIsolationThreadPoolKeyOverride</h3><ul>\n<li><blockquote>\n<p>Allow a dynamic override of the HystrixThreadPoolKey that will dynamically change which HystrixThreadPool a HystrixCommand executes on. Typically this should return NULL which will cause it to use the HystrixThreadPoolKey injected into a HystrixCommand or derived from the HystrixCommandGroupKey. When set the injected or derived values will be ignored and a new HystrixThreadPool created (if necessary) and the HystrixCommand will begin using the newly defined pool. </p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>null </code></font></li>\n</ul>\n<h3 id=\"executionTimeoutInMilliseconds\"><a href=\"#executionTimeoutInMilliseconds\" class=\"headerlink\" title=\"executionTimeoutInMilliseconds\"></a>executionTimeoutInMilliseconds</h3><ul>\n<li><blockquote>\n<p>Time in milliseconds at which point the command will timeout and halt execution. If executionIsolationThreadInterruptOnTimeout &#x3D;&#x3D; true and the command is thread-isolated, the executing thread will be interrupted. If the command is semaphore-isolated and a HystrixObservableCommand, that command will get unsubscribed. </p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>1000 </code></font></li>\n</ul>\n<h3 id=\"executionTimeoutEnabled\"><a href=\"#executionTimeoutEnabled\" class=\"headerlink\" title=\"executionTimeoutEnabled\"></a>executionTimeoutEnabled</h3><ul>\n<li><blockquote>\n<p>Whether the timeout mechanism is enabled for this command</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>true </code></font></li>\n</ul>\n<h3 id=\"fallbackIsolationSemaphoreMaxConcurrentRequests\"><a href=\"#fallbackIsolationSemaphoreMaxConcurrentRequests\" class=\"headerlink\" title=\"fallbackIsolationSemaphoreMaxConcurrentRequests\"></a>fallbackIsolationSemaphoreMaxConcurrentRequests</h3><ul>\n<li><blockquote>\n<p>Number of concurrent requests permitted to HystrixCommand.getFallback(). Requests beyond the concurrent limit will fail-fast and not attempt retrieving a fallback.</p>\n</blockquote>\n</li>\n<li>最大的并发执行fallback的请求数量，超过了就不执行fallback且抛出异常算“执行失败”</li>\n<li><font color=\"red\"><code>10 </code></font></li>\n</ul>\n<h3 id=\"fallbackEnabled\"><a href=\"#fallbackEnabled\" class=\"headerlink\" title=\"fallbackEnabled\"></a>fallbackEnabled</h3><ul>\n<li><blockquote>\n<p>Whether HystrixCommand.getFallback() should be attempted when failure occurs.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>true </code></font></li>\n</ul>\n<h3 id=\"metricsHealthSnapshotIntervalInMilliseconds\"><a href=\"#metricsHealthSnapshotIntervalInMilliseconds\" class=\"headerlink\" title=\"metricsHealthSnapshotIntervalInMilliseconds\"></a>metricsHealthSnapshotIntervalInMilliseconds</h3><ul>\n<li><blockquote>\n<p>Time in milliseconds to wait between allowing health snapshots to be taken that calculate success and error percentages and affect HystrixCircuitBreaker.isOpen() status. On high-volume circuits the continual calculation of error percentage can become CPU intensive thus this controls how often it is calculated. </p>\n</blockquote>\n</li>\n<li>健康快照的执行间隔，健康快照是用来计算成功&#x2F;失败的百分比的</li>\n<li><font color=\"red\"><code>500 </code></font></li>\n</ul>\n<h3 id=\"metricsRollingPercentileBucketSize\"><a href=\"#metricsRollingPercentileBucketSize\" class=\"headerlink\" title=\"metricsRollingPercentileBucketSize\"></a>metricsRollingPercentileBucketSize</h3><ul>\n<li><blockquote>\n<p>Maximum number of values stored in each bucket of the rolling percentile. This is passed into HystrixRollingPercentile inside HystrixCommandMetrics.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>100 </code></font></li>\n</ul>\n<h3 id=\"metricsRollingPercentileEnabled\"><a href=\"#metricsRollingPercentileEnabled\" class=\"headerlink\" title=\"metricsRollingPercentileEnabled\"></a>metricsRollingPercentileEnabled</h3><ul>\n<li><blockquote>\n<p>Whether percentile metrics should be captured using HystrixRollingPercentile inside HystrixCommandMetrics.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>true </code></font></li>\n</ul>\n<h3 id=\"metricsRollingPercentileWindowInMilliseconds\"><a href=\"#metricsRollingPercentileWindowInMilliseconds\" class=\"headerlink\" title=\"metricsRollingPercentileWindowInMilliseconds\"></a>metricsRollingPercentileWindowInMilliseconds</h3><ul>\n<li><blockquote>\n<p>Duration of percentile rolling window in milliseconds. This is passed into HystrixRollingPercentile inside HystrixCommandMetrics.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>60000 </code></font></li>\n</ul>\n<h3 id=\"metricsRollingPercentileWindowBuckets\"><a href=\"#metricsRollingPercentileWindowBuckets\" class=\"headerlink\" title=\"metricsRollingPercentileWindowBuckets\"></a>metricsRollingPercentileWindowBuckets</h3><ul>\n<li><blockquote>\n<p>Number of buckets the rolling percentile window is broken into. This is passed into HystrixRollingPercentile inside HystrixCommandMetrics.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>6 </code></font></li>\n</ul>\n<h3 id=\"metricsRollingStatisticalWindowInMilliseconds\"><a href=\"#metricsRollingStatisticalWindowInMilliseconds\" class=\"headerlink\" title=\"metricsRollingStatisticalWindowInMilliseconds\"></a>metricsRollingStatisticalWindowInMilliseconds</h3><ul>\n<li><blockquote>\n<p>Duration of statistical rolling window in milliseconds. This is passed into HystrixRollingNumber inside HystrixCommandMetrics.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>10000 </code></font></li>\n</ul>\n<h3 id=\"metricsRollingStatisticalWindowBuckets\"><a href=\"#metricsRollingStatisticalWindowBuckets\" class=\"headerlink\" title=\"metricsRollingStatisticalWindowBuckets\"></a>metricsRollingStatisticalWindowBuckets</h3><ul>\n<li><blockquote>\n<p>Number of buckets the rolling statistical window is broken into. This is passed into HystrixRollingNumber inside HystrixCommandMetrics.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>10 </code></font></li>\n</ul>\n<h3 id=\"requestCacheEnabled\"><a href=\"#requestCacheEnabled\" class=\"headerlink\" title=\"requestCacheEnabled\"></a>requestCacheEnabled</h3><ul>\n<li><blockquote>\n<p>Whether HystrixCommand.getCacheKey() should be used with HystrixRequestCache to provide de-duplication functionality via request-scoped caching.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>true </code></font></li>\n</ul>\n<h3 id=\"requestLogEnabled\"><a href=\"#requestLogEnabled\" class=\"headerlink\" title=\"requestLogEnabled\"></a>requestLogEnabled</h3><ul>\n<li><blockquote>\n<p>Whether HystrixCommand execution and events should be logged to HystrixRequestLog.</p>\n</blockquote>\n</li>\n<li><font color=\"red\"><code>true </code></font></li>\n</ul>\n<h2 id=\"缓存\"><a href=\"#缓存\" class=\"headerlink\" title=\"缓存\"></a>缓存</h2><p>*实现AbstractCommand中的<code>getCacheKey()</code></p>\n<p>（HystrixRequestContext、略）</p>\n<h2 id=\"监控\"><a href=\"#监控\" class=\"headerlink\" title=\"监控\"></a>监控</h2><p>*线程池的配置注意观察rejected数值</p>\n<p>（hystrix-metrics-event-stream、略）</p>\n"},{"title":"文法「ところ」","date":"2022-06-23T00:08:45.000Z","_content":"# N4\n## 原型或は意志型・ている・た　＋　ところだ\n動作をするタイミングを表す表現です。\n\n> 今は寝るところだ。\n> さっきは寝ているところだ。\n\n## のところ\n今の状況を表す表現です。\n> 今のところ、寝ることはできない。\n\n# N2\n## たところ（が）\n逆接を表す表現です。\n> 羊を数えたところが、眠れなっかた。\n\n## たところ\nB結果がどうなるかどうか分からず・B結果を期待せずにA行動を行った。\nA行動はB結果のきっかけだ。\n> 単にベッドに着いたところ、ちゃんと寝る始めた。\n\n## ところを\nA動作をする時に、Bが発生した・していた。\n> 寝ているところを騒音に起こした。\n\n## ところだった・でした\nA条件が異なれば、B結果になる。\nB事項が発生する前にA条件で回避したことができた。\nA条件で、危うくB結果になった。\n> 寝不足のせいで、さっき歩く時寝るところだった。\n\n## ところを見ると\nA状況から、B状況を推測する表現です。\n> 瞼がすごく重く見えるところを見ると、さぞ昨日の夜は夜更かしをしたな。\n\n## ところまで\n動作は到達できる限界点を表す表現です。\n> 出来るところまで寝てください。\n\n## ていたところだ・〜ところに〜・〜ところへ〜\nちょうどAをする前に・をしている時に・が終わった時にBが発生した。\n> 寝ようといたところに、チャイムが鳴った。\n\n# N1\n## ところ・ところを\n相手に対する謝罪・依頼・挨拶などの場合に使う。\n> お忙しいところ中申し訳ございませんが、少し休暇の話ですが…\n\n## たところで\n「１」A動作が終わった後すぐB動作が発生したことを表す。\n> ベッドに着いたところですぐに寝た。\n\n「２」A事項が仮に成立したとしても、B事項に影響はほぼないことを表す表現です。\n> 今起きるところで世界は平和になるはずない。\n\n## ところで\n話題を変える表現です。\n> ところで寝ませんか？一緒に。\n\n## 〜たら・ば〜ところだ\n実際には起こらなかったA事項は、もし起こっていればB状況になる表現です。\n> 徹夜をしたら、起きないところだ。","source":"_posts/jp-tokoro.md","raw":"---\ntitle: 文法「ところ」\ndate: 2022-06-23 08:08:45\ncategories:\n    - 基础姿势\n    - 日语\ntags:\n    - language\n    - japanese\n    - 文法\n    - grammar\n---\n# N4\n## 原型或は意志型・ている・た　＋　ところだ\n動作をするタイミングを表す表現です。\n\n> 今は寝るところだ。\n> さっきは寝ているところだ。\n\n## のところ\n今の状況を表す表現です。\n> 今のところ、寝ることはできない。\n\n# N2\n## たところ（が）\n逆接を表す表現です。\n> 羊を数えたところが、眠れなっかた。\n\n## たところ\nB結果がどうなるかどうか分からず・B結果を期待せずにA行動を行った。\nA行動はB結果のきっかけだ。\n> 単にベッドに着いたところ、ちゃんと寝る始めた。\n\n## ところを\nA動作をする時に、Bが発生した・していた。\n> 寝ているところを騒音に起こした。\n\n## ところだった・でした\nA条件が異なれば、B結果になる。\nB事項が発生する前にA条件で回避したことができた。\nA条件で、危うくB結果になった。\n> 寝不足のせいで、さっき歩く時寝るところだった。\n\n## ところを見ると\nA状況から、B状況を推測する表現です。\n> 瞼がすごく重く見えるところを見ると、さぞ昨日の夜は夜更かしをしたな。\n\n## ところまで\n動作は到達できる限界点を表す表現です。\n> 出来るところまで寝てください。\n\n## ていたところだ・〜ところに〜・〜ところへ〜\nちょうどAをする前に・をしている時に・が終わった時にBが発生した。\n> 寝ようといたところに、チャイムが鳴った。\n\n# N1\n## ところ・ところを\n相手に対する謝罪・依頼・挨拶などの場合に使う。\n> お忙しいところ中申し訳ございませんが、少し休暇の話ですが…\n\n## たところで\n「１」A動作が終わった後すぐB動作が発生したことを表す。\n> ベッドに着いたところですぐに寝た。\n\n「２」A事項が仮に成立したとしても、B事項に影響はほぼないことを表す表現です。\n> 今起きるところで世界は平和になるはずない。\n\n## ところで\n話題を変える表現です。\n> ところで寝ませんか？一緒に。\n\n## 〜たら・ば〜ところだ\n実際には起こらなかったA事項は、もし起こっていればB状況になる表現です。\n> 徹夜をしたら、起きないところだ。","slug":"jp-tokoro","published":1,"updated":"2023-03-17T02:30:47.695Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdt7000kxtuj4fvzajmx","content":"<h1 id=\"N4\"><a href=\"#N4\" class=\"headerlink\" title=\"N4\"></a>N4</h1><h2 id=\"原型或は意志型・ている・た-＋-ところだ\"><a href=\"#原型或は意志型・ている・た-＋-ところだ\" class=\"headerlink\" title=\"原型或は意志型・ている・た　＋　ところだ\"></a>原型或は意志型・ている・た　＋　ところだ</h2><p>動作をするタイミングを表す表現です。</p>\n<blockquote>\n<p>今は寝るところだ。<br>さっきは寝ているところだ。</p>\n</blockquote>\n<h2 id=\"のところ\"><a href=\"#のところ\" class=\"headerlink\" title=\"のところ\"></a>のところ</h2><p>今の状況を表す表現です。</p>\n<blockquote>\n<p>今のところ、寝ることはできない。</p>\n</blockquote>\n<h1 id=\"N2\"><a href=\"#N2\" class=\"headerlink\" title=\"N2\"></a>N2</h1><h2 id=\"たところ（が）\"><a href=\"#たところ（が）\" class=\"headerlink\" title=\"たところ（が）\"></a>たところ（が）</h2><p>逆接を表す表現です。</p>\n<blockquote>\n<p>羊を数えたところが、眠れなっかた。</p>\n</blockquote>\n<h2 id=\"たところ\"><a href=\"#たところ\" class=\"headerlink\" title=\"たところ\"></a>たところ</h2><p>B結果がどうなるかどうか分からず・B結果を期待せずにA行動を行った。<br>A行動はB結果のきっかけだ。</p>\n<blockquote>\n<p>単にベッドに着いたところ、ちゃんと寝る始めた。</p>\n</blockquote>\n<h2 id=\"ところを\"><a href=\"#ところを\" class=\"headerlink\" title=\"ところを\"></a>ところを</h2><p>A動作をする時に、Bが発生した・していた。</p>\n<blockquote>\n<p>寝ているところを騒音に起こした。</p>\n</blockquote>\n<h2 id=\"ところだった・でした\"><a href=\"#ところだった・でした\" class=\"headerlink\" title=\"ところだった・でした\"></a>ところだった・でした</h2><p>A条件が異なれば、B結果になる。<br>B事項が発生する前にA条件で回避したことができた。<br>A条件で、危うくB結果になった。</p>\n<blockquote>\n<p>寝不足のせいで、さっき歩く時寝るところだった。</p>\n</blockquote>\n<h2 id=\"ところを見ると\"><a href=\"#ところを見ると\" class=\"headerlink\" title=\"ところを見ると\"></a>ところを見ると</h2><p>A状況から、B状況を推測する表現です。</p>\n<blockquote>\n<p>瞼がすごく重く見えるところを見ると、さぞ昨日の夜は夜更かしをしたな。</p>\n</blockquote>\n<h2 id=\"ところまで\"><a href=\"#ところまで\" class=\"headerlink\" title=\"ところまで\"></a>ところまで</h2><p>動作は到達できる限界点を表す表現です。</p>\n<blockquote>\n<p>出来るところまで寝てください。</p>\n</blockquote>\n<h2 id=\"ていたところだ・〜ところに〜・〜ところへ〜\"><a href=\"#ていたところだ・〜ところに〜・〜ところへ〜\" class=\"headerlink\" title=\"ていたところだ・〜ところに〜・〜ところへ〜\"></a>ていたところだ・〜ところに〜・〜ところへ〜</h2><p>ちょうどAをする前に・をしている時に・が終わった時にBが発生した。</p>\n<blockquote>\n<p>寝ようといたところに、チャイムが鳴った。</p>\n</blockquote>\n<h1 id=\"N1\"><a href=\"#N1\" class=\"headerlink\" title=\"N1\"></a>N1</h1><h2 id=\"ところ・ところを\"><a href=\"#ところ・ところを\" class=\"headerlink\" title=\"ところ・ところを\"></a>ところ・ところを</h2><p>相手に対する謝罪・依頼・挨拶などの場合に使う。</p>\n<blockquote>\n<p>お忙しいところ中申し訳ございませんが、少し休暇の話ですが…</p>\n</blockquote>\n<h2 id=\"たところで\"><a href=\"#たところで\" class=\"headerlink\" title=\"たところで\"></a>たところで</h2><p>「１」A動作が終わった後すぐB動作が発生したことを表す。</p>\n<blockquote>\n<p>ベッドに着いたところですぐに寝た。</p>\n</blockquote>\n<p>「２」A事項が仮に成立したとしても、B事項に影響はほぼないことを表す表現です。</p>\n<blockquote>\n<p>今起きるところで世界は平和になるはずない。</p>\n</blockquote>\n<h2 id=\"ところで\"><a href=\"#ところで\" class=\"headerlink\" title=\"ところで\"></a>ところで</h2><p>話題を変える表現です。</p>\n<blockquote>\n<p>ところで寝ませんか？一緒に。</p>\n</blockquote>\n<h2 id=\"〜たら・ば〜ところだ\"><a href=\"#〜たら・ば〜ところだ\" class=\"headerlink\" title=\"〜たら・ば〜ところだ\"></a>〜たら・ば〜ところだ</h2><p>実際には起こらなかったA事項は、もし起こっていればB状況になる表現です。</p>\n<blockquote>\n<p>徹夜をしたら、起きないところだ。</p>\n</blockquote>\n","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<h1 id=\"N4\"><a href=\"#N4\" class=\"headerlink\" title=\"N4\"></a>N4</h1><h2 id=\"原型或は意志型・ている・た-＋-ところだ\"><a href=\"#原型或は意志型・ている・た-＋-ところだ\" class=\"headerlink\" title=\"原型或は意志型・ている・た　＋　ところだ\"></a>原型或は意志型・ている・た　＋　ところだ</h2><p>動作をするタイミングを表す表現です。</p>\n<blockquote>\n<p>今は寝るところだ。<br>さっきは寝ているところだ。</p>\n</blockquote>\n<h2 id=\"のところ\"><a href=\"#のところ\" class=\"headerlink\" title=\"のところ\"></a>のところ</h2><p>今の状況を表す表現です。</p>\n<blockquote>\n<p>今のところ、寝ることはできない。</p>\n</blockquote>\n<h1 id=\"N2\"><a href=\"#N2\" class=\"headerlink\" title=\"N2\"></a>N2</h1><h2 id=\"たところ（が）\"><a href=\"#たところ（が）\" class=\"headerlink\" title=\"たところ（が）\"></a>たところ（が）</h2><p>逆接を表す表現です。</p>\n<blockquote>\n<p>羊を数えたところが、眠れなっかた。</p>\n</blockquote>\n<h2 id=\"たところ\"><a href=\"#たところ\" class=\"headerlink\" title=\"たところ\"></a>たところ</h2><p>B結果がどうなるかどうか分からず・B結果を期待せずにA行動を行った。<br>A行動はB結果のきっかけだ。</p>\n<blockquote>\n<p>単にベッドに着いたところ、ちゃんと寝る始めた。</p>\n</blockquote>\n<h2 id=\"ところを\"><a href=\"#ところを\" class=\"headerlink\" title=\"ところを\"></a>ところを</h2><p>A動作をする時に、Bが発生した・していた。</p>\n<blockquote>\n<p>寝ているところを騒音に起こした。</p>\n</blockquote>\n<h2 id=\"ところだった・でした\"><a href=\"#ところだった・でした\" class=\"headerlink\" title=\"ところだった・でした\"></a>ところだった・でした</h2><p>A条件が異なれば、B結果になる。<br>B事項が発生する前にA条件で回避したことができた。<br>A条件で、危うくB結果になった。</p>\n<blockquote>\n<p>寝不足のせいで、さっき歩く時寝るところだった。</p>\n</blockquote>\n<h2 id=\"ところを見ると\"><a href=\"#ところを見ると\" class=\"headerlink\" title=\"ところを見ると\"></a>ところを見ると</h2><p>A状況から、B状況を推測する表現です。</p>\n<blockquote>\n<p>瞼がすごく重く見えるところを見ると、さぞ昨日の夜は夜更かしをしたな。</p>\n</blockquote>\n<h2 id=\"ところまで\"><a href=\"#ところまで\" class=\"headerlink\" title=\"ところまで\"></a>ところまで</h2><p>動作は到達できる限界点を表す表現です。</p>\n<blockquote>\n<p>出来るところまで寝てください。</p>\n</blockquote>\n<h2 id=\"ていたところだ・〜ところに〜・〜ところへ〜\"><a href=\"#ていたところだ・〜ところに〜・〜ところへ〜\" class=\"headerlink\" title=\"ていたところだ・〜ところに〜・〜ところへ〜\"></a>ていたところだ・〜ところに〜・〜ところへ〜</h2><p>ちょうどAをする前に・をしている時に・が終わった時にBが発生した。</p>\n<blockquote>\n<p>寝ようといたところに、チャイムが鳴った。</p>\n</blockquote>\n<h1 id=\"N1\"><a href=\"#N1\" class=\"headerlink\" title=\"N1\"></a>N1</h1><h2 id=\"ところ・ところを\"><a href=\"#ところ・ところを\" class=\"headerlink\" title=\"ところ・ところを\"></a>ところ・ところを</h2><p>相手に対する謝罪・依頼・挨拶などの場合に使う。</p>\n<blockquote>\n<p>お忙しいところ中申し訳ございませんが、少し休暇の話ですが…</p>\n</blockquote>\n<h2 id=\"たところで\"><a href=\"#たところで\" class=\"headerlink\" title=\"たところで\"></a>たところで</h2><p>「１」A動作が終わった後すぐB動作が発生したことを表す。</p>\n<blockquote>\n<p>ベッドに着いたところですぐに寝た。</p>\n</blockquote>\n<p>「２」A事項が仮に成立したとしても、B事項に影響はほぼないことを表す表現です。</p>\n<blockquote>\n<p>今起きるところで世界は平和になるはずない。</p>\n</blockquote>\n<h2 id=\"ところで\"><a href=\"#ところで\" class=\"headerlink\" title=\"ところで\"></a>ところで</h2><p>話題を変える表現です。</p>\n<blockquote>\n<p>ところで寝ませんか？一緒に。</p>\n</blockquote>\n<h2 id=\"〜たら・ば〜ところだ\"><a href=\"#〜たら・ば〜ところだ\" class=\"headerlink\" title=\"〜たら・ば〜ところだ\"></a>〜たら・ば〜ところだ</h2><p>実際には起こらなかったA事項は、もし起こっていればB状況になる表現です。</p>\n<blockquote>\n<p>徹夜をしたら、起きないところだ。</p>\n</blockquote>\n"},{"title":"Skip List 跳跃表","date":"2022-07-27T13:30:59.000Z","_content":"## [Skip List](https://en.wikipedia.org/wiki/Skip_list)\n\n论文地址：[Skip Lists: A Probabilistic Alternative to Balanced Trees](https://15721.courses.cs.cmu.edu/spring2018/papers/08-oltpindexes1/pugh-skiplists-cacm1990.pdf)\n\n### 查询\n从最顶层开始，沿着链表指针向右查找到下一个节点值不小于查询值或者不存在下一个节点时，向下一层链表移动继续查找，直到进行至第一层，此时如果下一个节点值等于查找值则查找成功，否则查找失败：\n\n这里分为两个子查询逻辑：\n\n1. 在某一层的查询逻辑（向右查询）\n```lua\n-- 假设当前遍历节点为x\nwhile x节点的次节点key < searchKey do\n        x = x次节点\n```\n2. 在某个节点的查询逻辑（向下查询）\n```lua\n-- 假设当前层序为i\nfor i to 1 do\n    同层查询\n```\n\n所以整体的查询算法实现：\n```lua\nSearch(list, searchKey)\n    x := list→header\n    -- loop invariant: x→key < searchKey\n    -- 向下查询\n    for i := list→level downto 1 do\n        -- 同层查询\n        while x→forward[i]→key < searchKey do\n            x := x→forward[i]\n    -- x→key < searchKey ≤ x→forward[1]→key\n    x := x→forward[1]\n    if x→key = searchKey then return x→value\n        else return failure\n```\n\n### 插入和删除\n通过查询查找到符合条件的节点x（x的次节点不存在或者次节点不小于查找值），有两点需要注意：\n1. 为了在插入或者删除的时候能够更新每一层的元素，需要在`某一层查找`结束向下层移动前记录当时的节点。\n2. 在插入或者删除后要更新最高层，插入时可能层数+1，删除时则可能最大层数-1。\n\n```lua\nInsert(list, searchKey, newValue)\n    -- update数组/list用来存放每一层在插入后需要更新的节点\n    local update[1..MaxLevel]\n    x := list→header\n    for i := list→level downto 1 do\n        while x→forward[i]→key < searchKey do\n            x := x→forward[i]\n        -- x→key < searchKey ≤ x→forward[i]→key\n        update[i] := x\n    x := x→forward[1]\n    -- 如果查找成功则不会进行插入，当然也存在允许重复值插入的“变种”跳跃表\n    if x→key = searchKey then x→value := newValue\n    else\n        -- randomLevel给出当前插入的节点最高需要插入到第几层\n        lvl := randomLevel()\n        -- 如果高于当前最高层，需要更新update数组/list，并更新最高层数\n        if lvl > list→level then\n            for i := list→level + 1 to lvl do\n                update[i] := list→header\n            list→level := lvl\n        x := makeNode(lvl, searchKey, value)\n        -- 遍历每层，更新update中的节点的次节点指针（链表插入操作）\n        for i := 1 to level do\n            x→forward[i] := update[i]→forward[i]\n            update[i]→forward[i] := x\n```\n\n```lua\nDelete(list, searchKey)\n    local update[1..MaxLevel]\n    x := list→header\n    for i := list→level downto 1 do\n        while x→forward[i]→key < searchKey do\n            x := x→forward[i]\n        update[i] := x\n    x := x→forward[1]\n    if x→key = searchKey then\n        -- 删掉每一层的节点\n        for i := 1 to list→level do\n            if update[i]→forward[i] ≠ x then break\n            update[i]→forward[i] := x→forward[i]\n        free(x)\n        -- 删除因节点被删而空掉（指向NIL）的层\n        while list→level > 1 and \n          list→header→forward[list→level] = NIL do\n            list→level := list→level – 1\n```\n关于`randomLevel()`，论文里也给出了探讨建议。\n\n记预期的i+1层节点数与i层节点数的比值为`p`，则`p`为1/2表示i层有一半的节点会在i+1层出现（1/2拥有i层指针的节点也拥有i+1层的指针）,那么新插入的节点应该最高到第几层呢？从第一层开始每一层这个新节点有`p`的概率能拥有+1层的指针：\n```lua\nrandomLevel()\n    lvl := 1\n    -- random() that returns a random value in [0...1)\n    while random() < p and lvl < MaxLevel do\n        lvl := lvl + 1\n    return lvl\n```\n\n关于从第几层开始搜索，论文的`At what level do we start a search? Defining L(n)`部分也给出了几种方案，不过综合来看从最高层开始搜索也并不会有什么大问题，实现也较为简单。\n\n其中提出的可以用来计算层数`L(n)`的公式还是比较重要的：\n```text\n    L(n) = log1/p n\n```\n`p`同上，指某一层的节点能够拥有更高一层的指针的概率，`n`是指skip list中的元素数量（等同于第一层的节点数）\n\n例：\n\n*已知n=16，p=1/2，合适的maxLevel=4*\n\n*已知maxLevel=16，p=1/3，存放n=3^16元素会比较合理*\n\n### Java实现\n数据结构部分：\n```java\n/**\n * 跳跃表\n */\nclass SkipList{\n    Node head;\n    // 当前层数\n    int level;\n    // 最大层数\n    int maxLevel;\n}\n\n/**\n * 链表节点\n */\nclass Node{\n    Object key;\n\n    // 存放层指针\n    Node[] forward;\n}\n```","source":"_posts/lc-skip-list.md","raw":"---\ntitle: Skip List 跳跃表\ndate: 2022-07-27 21:30:59\ntags:\n    - data structures\n    - leetcode\n    - algorithm\ncategories:\n    - 伸展运动\n    - 数据结构\n---\n## [Skip List](https://en.wikipedia.org/wiki/Skip_list)\n\n论文地址：[Skip Lists: A Probabilistic Alternative to Balanced Trees](https://15721.courses.cs.cmu.edu/spring2018/papers/08-oltpindexes1/pugh-skiplists-cacm1990.pdf)\n\n### 查询\n从最顶层开始，沿着链表指针向右查找到下一个节点值不小于查询值或者不存在下一个节点时，向下一层链表移动继续查找，直到进行至第一层，此时如果下一个节点值等于查找值则查找成功，否则查找失败：\n\n这里分为两个子查询逻辑：\n\n1. 在某一层的查询逻辑（向右查询）\n```lua\n-- 假设当前遍历节点为x\nwhile x节点的次节点key < searchKey do\n        x = x次节点\n```\n2. 在某个节点的查询逻辑（向下查询）\n```lua\n-- 假设当前层序为i\nfor i to 1 do\n    同层查询\n```\n\n所以整体的查询算法实现：\n```lua\nSearch(list, searchKey)\n    x := list→header\n    -- loop invariant: x→key < searchKey\n    -- 向下查询\n    for i := list→level downto 1 do\n        -- 同层查询\n        while x→forward[i]→key < searchKey do\n            x := x→forward[i]\n    -- x→key < searchKey ≤ x→forward[1]→key\n    x := x→forward[1]\n    if x→key = searchKey then return x→value\n        else return failure\n```\n\n### 插入和删除\n通过查询查找到符合条件的节点x（x的次节点不存在或者次节点不小于查找值），有两点需要注意：\n1. 为了在插入或者删除的时候能够更新每一层的元素，需要在`某一层查找`结束向下层移动前记录当时的节点。\n2. 在插入或者删除后要更新最高层，插入时可能层数+1，删除时则可能最大层数-1。\n\n```lua\nInsert(list, searchKey, newValue)\n    -- update数组/list用来存放每一层在插入后需要更新的节点\n    local update[1..MaxLevel]\n    x := list→header\n    for i := list→level downto 1 do\n        while x→forward[i]→key < searchKey do\n            x := x→forward[i]\n        -- x→key < searchKey ≤ x→forward[i]→key\n        update[i] := x\n    x := x→forward[1]\n    -- 如果查找成功则不会进行插入，当然也存在允许重复值插入的“变种”跳跃表\n    if x→key = searchKey then x→value := newValue\n    else\n        -- randomLevel给出当前插入的节点最高需要插入到第几层\n        lvl := randomLevel()\n        -- 如果高于当前最高层，需要更新update数组/list，并更新最高层数\n        if lvl > list→level then\n            for i := list→level + 1 to lvl do\n                update[i] := list→header\n            list→level := lvl\n        x := makeNode(lvl, searchKey, value)\n        -- 遍历每层，更新update中的节点的次节点指针（链表插入操作）\n        for i := 1 to level do\n            x→forward[i] := update[i]→forward[i]\n            update[i]→forward[i] := x\n```\n\n```lua\nDelete(list, searchKey)\n    local update[1..MaxLevel]\n    x := list→header\n    for i := list→level downto 1 do\n        while x→forward[i]→key < searchKey do\n            x := x→forward[i]\n        update[i] := x\n    x := x→forward[1]\n    if x→key = searchKey then\n        -- 删掉每一层的节点\n        for i := 1 to list→level do\n            if update[i]→forward[i] ≠ x then break\n            update[i]→forward[i] := x→forward[i]\n        free(x)\n        -- 删除因节点被删而空掉（指向NIL）的层\n        while list→level > 1 and \n          list→header→forward[list→level] = NIL do\n            list→level := list→level – 1\n```\n关于`randomLevel()`，论文里也给出了探讨建议。\n\n记预期的i+1层节点数与i层节点数的比值为`p`，则`p`为1/2表示i层有一半的节点会在i+1层出现（1/2拥有i层指针的节点也拥有i+1层的指针）,那么新插入的节点应该最高到第几层呢？从第一层开始每一层这个新节点有`p`的概率能拥有+1层的指针：\n```lua\nrandomLevel()\n    lvl := 1\n    -- random() that returns a random value in [0...1)\n    while random() < p and lvl < MaxLevel do\n        lvl := lvl + 1\n    return lvl\n```\n\n关于从第几层开始搜索，论文的`At what level do we start a search? Defining L(n)`部分也给出了几种方案，不过综合来看从最高层开始搜索也并不会有什么大问题，实现也较为简单。\n\n其中提出的可以用来计算层数`L(n)`的公式还是比较重要的：\n```text\n    L(n) = log1/p n\n```\n`p`同上，指某一层的节点能够拥有更高一层的指针的概率，`n`是指skip list中的元素数量（等同于第一层的节点数）\n\n例：\n\n*已知n=16，p=1/2，合适的maxLevel=4*\n\n*已知maxLevel=16，p=1/3，存放n=3^16元素会比较合理*\n\n### Java实现\n数据结构部分：\n```java\n/**\n * 跳跃表\n */\nclass SkipList{\n    Node head;\n    // 当前层数\n    int level;\n    // 最大层数\n    int maxLevel;\n}\n\n/**\n * 链表节点\n */\nclass Node{\n    Object key;\n\n    // 存放层指针\n    Node[] forward;\n}\n```","slug":"lc-skip-list","published":1,"updated":"2023-03-17T02:30:47.719Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdt7000nxtuj02j3f7v3","content":"<h2 id=\"Skip-List\"><a href=\"#Skip-List\" class=\"headerlink\" title=\"Skip List\"></a><a href=\"https://en.wikipedia.org/wiki/Skip_list\">Skip List</a></h2><p>论文地址：<a href=\"https://15721.courses.cs.cmu.edu/spring2018/papers/08-oltpindexes1/pugh-skiplists-cacm1990.pdf\">Skip Lists: A Probabilistic Alternative to Balanced Trees</a></p>\n<h3 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h3><p>从最顶层开始，沿着链表指针向右查找到下一个节点值不小于查询值或者不存在下一个节点时，向下一层链表移动继续查找，直到进行至第一层，此时如果下一个节点值等于查找值则查找成功，否则查找失败：</p>\n<p>这里分为两个子查询逻辑：</p>\n<ol>\n<li>在某一层的查询逻辑（向右查询）<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token comment\">-- 假设当前遍历节点为x</span>\n<span class=\"token keyword\">while</span> x节点的次节点key <span class=\"token operator\">&lt;</span> searchKey <span class=\"token keyword\">do</span>\n        x <span class=\"token operator\">=</span> x次节点<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li>在某个节点的查询逻辑（向下查询）<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token comment\">-- 假设当前层序为i</span>\n<span class=\"token keyword\">for</span> i to <span class=\"token number\">1</span> <span class=\"token keyword\">do</span>\n    同层查询<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<p>所以整体的查询算法实现：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token function\">Search</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> searchKey<span class=\"token punctuation\">)</span>\n    x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→header\n    <span class=\"token comment\">-- loop invariant: x→key &lt; searchKey</span>\n    <span class=\"token comment\">-- 向下查询</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→level downto <span class=\"token number\">1</span> <span class=\"token keyword\">do</span>\n        <span class=\"token comment\">-- 同层查询</span>\n        <span class=\"token keyword\">while</span> x→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>→key <span class=\"token operator\">&lt;</span> searchKey <span class=\"token keyword\">do</span>\n            x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    <span class=\"token comment\">-- x→key &lt; searchKey ≤ x→forward[1]→key</span>\n    x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x→forward<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> x→key <span class=\"token operator\">=</span> searchKey <span class=\"token keyword\">then</span> <span class=\"token keyword\">return</span> x→value\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> failure<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"插入和删除\"><a href=\"#插入和删除\" class=\"headerlink\" title=\"插入和删除\"></a>插入和删除</h3><p>通过查询查找到符合条件的节点x（x的次节点不存在或者次节点不小于查找值），有两点需要注意：</p>\n<ol>\n<li>为了在插入或者删除的时候能够更新每一层的元素，需要在<code>某一层查找</code>结束向下层移动前记录当时的节点。</li>\n<li>在插入或者删除后要更新最高层，插入时可能层数+1，删除时则可能最大层数-1。</li>\n</ol>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token function\">Insert</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> searchKey<span class=\"token punctuation\">,</span> newValue<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">-- update数组/list用来存放每一层在插入后需要更新的节点</span>\n    <span class=\"token keyword\">local</span> update<span class=\"token punctuation\">[</span><span class=\"token number\">1.</span><span class=\"token punctuation\">.</span>MaxLevel<span class=\"token punctuation\">]</span>\n    x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→header\n    <span class=\"token keyword\">for</span> i <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→level downto <span class=\"token number\">1</span> <span class=\"token keyword\">do</span>\n        <span class=\"token keyword\">while</span> x→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>→key <span class=\"token operator\">&lt;</span> searchKey <span class=\"token keyword\">do</span>\n            x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token comment\">-- x→key &lt; searchKey ≤ x→forward[i]→key</span>\n        update<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x\n    x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x→forward<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\">-- 如果查找成功则不会进行插入，当然也存在允许重复值插入的“变种”跳跃表</span>\n    <span class=\"token keyword\">if</span> x→key <span class=\"token operator\">=</span> searchKey <span class=\"token keyword\">then</span> x→value <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> newValue\n    <span class=\"token keyword\">else</span>\n        <span class=\"token comment\">-- randomLevel给出当前插入的节点最高需要插入到第几层</span>\n        lvl <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> <span class=\"token function\">randomLevel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">-- 如果高于当前最高层，需要更新update数组/list，并更新最高层数</span>\n        <span class=\"token keyword\">if</span> lvl <span class=\"token operator\">></span> list→level <span class=\"token keyword\">then</span>\n            <span class=\"token keyword\">for</span> i <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→level <span class=\"token operator\">+</span> <span class=\"token number\">1</span> to lvl <span class=\"token keyword\">do</span>\n                update<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→header\n            list→level <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> lvl\n        x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> <span class=\"token function\">makeNode</span><span class=\"token punctuation\">(</span>lvl<span class=\"token punctuation\">,</span> searchKey<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">-- 遍历每层，更新update中的节点的次节点指针（链表插入操作）</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span> to level <span class=\"token keyword\">do</span>\n            x→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> update<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n            update<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> searchKey<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">local</span> update<span class=\"token punctuation\">[</span><span class=\"token number\">1.</span><span class=\"token punctuation\">.</span>MaxLevel<span class=\"token punctuation\">]</span>\n    x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→header\n    <span class=\"token keyword\">for</span> i <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→level downto <span class=\"token number\">1</span> <span class=\"token keyword\">do</span>\n        <span class=\"token keyword\">while</span> x→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>→key <span class=\"token operator\">&lt;</span> searchKey <span class=\"token keyword\">do</span>\n            x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        update<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x\n    x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x→forward<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> x→key <span class=\"token operator\">=</span> searchKey <span class=\"token keyword\">then</span>\n        <span class=\"token comment\">-- 删掉每一层的节点</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span> to list→level <span class=\"token keyword\">do</span>\n            <span class=\"token keyword\">if</span> update<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> ≠ x <span class=\"token keyword\">then</span> <span class=\"token keyword\">break</span>\n            update<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">-- 删除因节点被删而空掉（指向NIL）的层</span>\n        <span class=\"token keyword\">while</span> list→level <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token keyword\">and</span> \n          list→header→forward<span class=\"token punctuation\">[</span>list→level<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> NIL <span class=\"token keyword\">do</span>\n            list→level <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→level – <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>关于<code>randomLevel()</code>，论文里也给出了探讨建议。</p>\n<p>记预期的i+1层节点数与i层节点数的比值为<code>p</code>，则<code>p</code>为1&#x2F;2表示i层有一半的节点会在i+1层出现（1&#x2F;2拥有i层指针的节点也拥有i+1层的指针）,那么新插入的节点应该最高到第几层呢？从第一层开始每一层这个新节点有<code>p</code>的概率能拥有+1层的指针：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token function\">randomLevel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    lvl <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token comment\">-- random() that returns a random value in [0...1)</span>\n    <span class=\"token keyword\">while</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> p <span class=\"token keyword\">and</span> lvl <span class=\"token operator\">&lt;</span> MaxLevel <span class=\"token keyword\">do</span>\n        lvl <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> lvl <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> lvl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>关于从第几层开始搜索，论文的<code>At what level do we start a search? Defining L(n)</code>部分也给出了几种方案，不过综合来看从最高层开始搜索也并不会有什么大问题，实现也较为简单。</p>\n<p>其中提出的可以用来计算层数<code>L(n)</code>的公式还是比较重要的：</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">L(n) = log1/p n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><code>p</code>同上，指某一层的节点能够拥有更高一层的指针的概率，<code>n</code>是指skip list中的元素数量（等同于第一层的节点数）</p>\n<p>例：</p>\n<p><em>已知n&#x3D;16，p&#x3D;1&#x2F;2，合适的maxLevel&#x3D;4</em></p>\n<p><em>已知maxLevel&#x3D;16，p&#x3D;1&#x2F;3，存放n&#x3D;3^16元素会比较合理</em></p>\n<h3 id=\"Java实现\"><a href=\"#Java实现\" class=\"headerlink\" title=\"Java实现\"></a>Java实现</h3><p>数据结构部分：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 跳跃表\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SkipList</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Node</span> head<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 当前层数</span>\n    <span class=\"token keyword\">int</span> level<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 最大层数</span>\n    <span class=\"token keyword\">int</span> maxLevel<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/**\n * 链表节点\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 存放层指针</span>\n    <span class=\"token class-name\">Node</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> forward<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<h2 id=\"Skip-List\"><a href=\"#Skip-List\" class=\"headerlink\" title=\"Skip List\"></a><a href=\"https://en.wikipedia.org/wiki/Skip_list\">Skip List</a></h2><p>论文地址：<a href=\"https://15721.courses.cs.cmu.edu/spring2018/papers/08-oltpindexes1/pugh-skiplists-cacm1990.pdf\">Skip Lists: A Probabilistic Alternative to Balanced Trees</a></p>\n<h3 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h3><p>从最顶层开始，沿着链表指针向右查找到下一个节点值不小于查询值或者不存在下一个节点时，向下一层链表移动继续查找，直到进行至第一层，此时如果下一个节点值等于查找值则查找成功，否则查找失败：</p>\n<p>这里分为两个子查询逻辑：</p>\n<ol>\n<li>在某一层的查询逻辑（向右查询）<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token comment\">-- 假设当前遍历节点为x</span>\n<span class=\"token keyword\">while</span> x节点的次节点key <span class=\"token operator\">&lt;</span> searchKey <span class=\"token keyword\">do</span>\n        x <span class=\"token operator\">=</span> x次节点<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li>在某个节点的查询逻辑（向下查询）<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token comment\">-- 假设当前层序为i</span>\n<span class=\"token keyword\">for</span> i to <span class=\"token number\">1</span> <span class=\"token keyword\">do</span>\n    同层查询<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<p>所以整体的查询算法实现：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token function\">Search</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> searchKey<span class=\"token punctuation\">)</span>\n    x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→header\n    <span class=\"token comment\">-- loop invariant: x→key &lt; searchKey</span>\n    <span class=\"token comment\">-- 向下查询</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→level downto <span class=\"token number\">1</span> <span class=\"token keyword\">do</span>\n        <span class=\"token comment\">-- 同层查询</span>\n        <span class=\"token keyword\">while</span> x→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>→key <span class=\"token operator\">&lt;</span> searchKey <span class=\"token keyword\">do</span>\n            x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    <span class=\"token comment\">-- x→key &lt; searchKey ≤ x→forward[1]→key</span>\n    x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x→forward<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> x→key <span class=\"token operator\">=</span> searchKey <span class=\"token keyword\">then</span> <span class=\"token keyword\">return</span> x→value\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> failure<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"插入和删除\"><a href=\"#插入和删除\" class=\"headerlink\" title=\"插入和删除\"></a>插入和删除</h3><p>通过查询查找到符合条件的节点x（x的次节点不存在或者次节点不小于查找值），有两点需要注意：</p>\n<ol>\n<li>为了在插入或者删除的时候能够更新每一层的元素，需要在<code>某一层查找</code>结束向下层移动前记录当时的节点。</li>\n<li>在插入或者删除后要更新最高层，插入时可能层数+1，删除时则可能最大层数-1。</li>\n</ol>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token function\">Insert</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> searchKey<span class=\"token punctuation\">,</span> newValue<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">-- update数组/list用来存放每一层在插入后需要更新的节点</span>\n    <span class=\"token keyword\">local</span> update<span class=\"token punctuation\">[</span><span class=\"token number\">1.</span><span class=\"token punctuation\">.</span>MaxLevel<span class=\"token punctuation\">]</span>\n    x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→header\n    <span class=\"token keyword\">for</span> i <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→level downto <span class=\"token number\">1</span> <span class=\"token keyword\">do</span>\n        <span class=\"token keyword\">while</span> x→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>→key <span class=\"token operator\">&lt;</span> searchKey <span class=\"token keyword\">do</span>\n            x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token comment\">-- x→key &lt; searchKey ≤ x→forward[i]→key</span>\n        update<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x\n    x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x→forward<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\">-- 如果查找成功则不会进行插入，当然也存在允许重复值插入的“变种”跳跃表</span>\n    <span class=\"token keyword\">if</span> x→key <span class=\"token operator\">=</span> searchKey <span class=\"token keyword\">then</span> x→value <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> newValue\n    <span class=\"token keyword\">else</span>\n        <span class=\"token comment\">-- randomLevel给出当前插入的节点最高需要插入到第几层</span>\n        lvl <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> <span class=\"token function\">randomLevel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">-- 如果高于当前最高层，需要更新update数组/list，并更新最高层数</span>\n        <span class=\"token keyword\">if</span> lvl <span class=\"token operator\">></span> list→level <span class=\"token keyword\">then</span>\n            <span class=\"token keyword\">for</span> i <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→level <span class=\"token operator\">+</span> <span class=\"token number\">1</span> to lvl <span class=\"token keyword\">do</span>\n                update<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→header\n            list→level <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> lvl\n        x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> <span class=\"token function\">makeNode</span><span class=\"token punctuation\">(</span>lvl<span class=\"token punctuation\">,</span> searchKey<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">-- 遍历每层，更新update中的节点的次节点指针（链表插入操作）</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span> to level <span class=\"token keyword\">do</span>\n            x→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> update<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n            update<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> searchKey<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">local</span> update<span class=\"token punctuation\">[</span><span class=\"token number\">1.</span><span class=\"token punctuation\">.</span>MaxLevel<span class=\"token punctuation\">]</span>\n    x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→header\n    <span class=\"token keyword\">for</span> i <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→level downto <span class=\"token number\">1</span> <span class=\"token keyword\">do</span>\n        <span class=\"token keyword\">while</span> x→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>→key <span class=\"token operator\">&lt;</span> searchKey <span class=\"token keyword\">do</span>\n            x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        update<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x\n    x <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x→forward<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> x→key <span class=\"token operator\">=</span> searchKey <span class=\"token keyword\">then</span>\n        <span class=\"token comment\">-- 删掉每一层的节点</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span> to list→level <span class=\"token keyword\">do</span>\n            <span class=\"token keyword\">if</span> update<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> ≠ x <span class=\"token keyword\">then</span> <span class=\"token keyword\">break</span>\n            update<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> x→forward<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">-- 删除因节点被删而空掉（指向NIL）的层</span>\n        <span class=\"token keyword\">while</span> list→level <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token keyword\">and</span> \n          list→header→forward<span class=\"token punctuation\">[</span>list→level<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> NIL <span class=\"token keyword\">do</span>\n            list→level <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> list→level – <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>关于<code>randomLevel()</code>，论文里也给出了探讨建议。</p>\n<p>记预期的i+1层节点数与i层节点数的比值为<code>p</code>，则<code>p</code>为1&#x2F;2表示i层有一半的节点会在i+1层出现（1&#x2F;2拥有i层指针的节点也拥有i+1层的指针）,那么新插入的节点应该最高到第几层呢？从第一层开始每一层这个新节点有<code>p</code>的概率能拥有+1层的指针：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token function\">randomLevel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    lvl <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token comment\">-- random() that returns a random value in [0...1)</span>\n    <span class=\"token keyword\">while</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> p <span class=\"token keyword\">and</span> lvl <span class=\"token operator\">&lt;</span> MaxLevel <span class=\"token keyword\">do</span>\n        lvl <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> lvl <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> lvl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>关于从第几层开始搜索，论文的<code>At what level do we start a search? Defining L(n)</code>部分也给出了几种方案，不过综合来看从最高层开始搜索也并不会有什么大问题，实现也较为简单。</p>\n<p>其中提出的可以用来计算层数<code>L(n)</code>的公式还是比较重要的：</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">L(n) = log1/p n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><code>p</code>同上，指某一层的节点能够拥有更高一层的指针的概率，<code>n</code>是指skip list中的元素数量（等同于第一层的节点数）</p>\n<p>例：</p>\n<p><em>已知n&#x3D;16，p&#x3D;1&#x2F;2，合适的maxLevel&#x3D;4</em></p>\n<p><em>已知maxLevel&#x3D;16，p&#x3D;1&#x2F;3，存放n&#x3D;3^16元素会比较合理</em></p>\n<h3 id=\"Java实现\"><a href=\"#Java实现\" class=\"headerlink\" title=\"Java实现\"></a>Java实现</h3><p>数据结构部分：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 跳跃表\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SkipList</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Node</span> head<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 当前层数</span>\n    <span class=\"token keyword\">int</span> level<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 最大层数</span>\n    <span class=\"token keyword\">int</span> maxLevel<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/**\n * 链表节点\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 存放层指针</span>\n    <span class=\"token class-name\">Node</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> forward<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"Hash Table 散列表","date":"2022-08-01T12:20:14.000Z","_content":"## [Hash Table](https://zh.wikipedia.org/wiki/%E5%93%88%E5%B8%8C%E8%A1%A8)\n\n### Hash函数\n#### 直接定址\n- hash(k) = k，用key\n- hash(k) = ak + b，key相关的`线性函数`\n\n适用key集中的情况，如果key分散的话空间浪费会比较严重。\n\n#### 数字分析\n找出key的规律，利用规律降低冲突（和直接定址的线性函数有一点重叠，但是数字分析重点是规律，也就不局限于‘线性’），比如用身份证的月日加上后四位。\n\n#### 平方取中\n[平方取中](https://zh.wikipedia.org/wiki/%E5%B9%B3%E6%96%B9%E5%8F%96%E4%B8%AD%E6%B3%95)是一种‘伪随机数算法’，可以得到特定长度内的伪随机数。\n\n#### 折叠\n按位数分割，然后各部分叠加，舍去进位。\n\n#### 随机数\n[平方取中](#平方取中)算是其中一种。\n\n#### 取余\n最大长度m，选取一个数p不大于m，\n\nhash(k) = k mod p, p < m\n\n### 冲突解决方案\n#### 开放定址\nhash_i = (hash(k) + d_i) mod m, 其中m是最大长度，i是定址次数，d_i是第i次的序列：\n\n- 线性探测，d=1,2,3...\n- 平方探测，d=1^2,2^2,3^2...\n- 伪随机探测，d=ran(k)\n\n开放定址的hash函数要求比较高，需要非常均匀，否则一旦出现聚集插入数据时就会增加定址次数\n\n#### 单独链表\n在冲突的位置放置链表\n\n#### 双散列\nhash两次\n\n#### 再散列\n准备一堆hash函数，然后冲突了就套娃：\n\nk_i = hash_i-1(....(k))\n\n#### 公共溢出区\n比如准备一个链表，和单独链表有点像，只不过这里的链表是放在“公共”区的，冲突的元素都放在一个链表里，当然用别的数据结构也可以。\n\n### Load factor 载荷因子\n元素个数/表长度，由于即使hash足够均匀，最终的元素必须放置在小于表长度的位置中，留给余下的元素的位置越少，产生冲突的概率越大：\n\n假设有一个长度为m、载荷因子为a的表，且hash函数相对均匀，\n\n那么不难得出，在写入第n个元素时冲突的概率p为`n-1/m，n <= a*m`,\n\n若取a的极限值0，也就是不会有元素写入，可以看作冲突概率p恒为0。\n\n换成朴素的证明：\n```text\n当a = 0.8\n    n=1，m=10时，p=0/10\n    n=2，m=10时，p=1/10\n    ...\n    n=8，m=10时，p=7/10\n    n=9，因为此时9 > 0.8 * 10，不满足n <= a*m，需要对表扩容或者不再写入，因此a=0.8时最大的冲突概率为7/10\n再\n当a = 0.6\n    n=1，m=10时，p=0/10\n    ...\n    n=6，m=10时，p=1/2\n    n=7，此时原因同上，a=0.6时最大的冲突概率为1/2\n当a = 0.5，最大p=2/5\n...\n```\n因此，在相同的hash函数下，理论上载荷因子越小，冲突的概率越小，但是载荷因子过于小会造成空间的浪费。\n\n### 性能因素\n1. hash的均匀程度（冲突概率，冲突必然增加开销）\n2. 冲突解决方案\n    1. 比如单链增加空间开销和时间开销、开放定址增加时间开销、再散列增加时间开销等\n    2. 各种冲突方案的开销并不是定量的，比如单链增加的时间开销和开放定址增加的时间开销并不相当，需要考虑开放定址的hash函数算法的时间复杂度与链表查询的时间复杂度，且即使开放定址的hash函数时间复杂度为O(n)，其n的常数系数也大概率与链表的不同\n3. 载荷因子（冲突概率）\n\n### Java实现\n数据结构部分：\n```java\n/**\n * 散列表\n * 冲突策略：单链\n */\nclass HashTable{\n    Node[] hashSlots;\n    // 散列槽数量\n    int slotsSize;\n    // 当前元素数量\n    int elementCount;\n    // load factor\n    float loadFactor = 0.6f;\n}\n\n/**\n * 节点\n */\nclass Node{\n    Object key;\n    Object object;\n    // 下一个节点\n    Node next;\n}\n```","source":"_posts/lc-hash-table.md","raw":"---\ntitle: Hash Table 散列表\ndate: 2022-08-01 20:20:14\ntags:\n    - data structures\n    - leetcode\n    - algorithm\ncategories:\n    - 伸展运动\n    - 数据结构\n---\n## [Hash Table](https://zh.wikipedia.org/wiki/%E5%93%88%E5%B8%8C%E8%A1%A8)\n\n### Hash函数\n#### 直接定址\n- hash(k) = k，用key\n- hash(k) = ak + b，key相关的`线性函数`\n\n适用key集中的情况，如果key分散的话空间浪费会比较严重。\n\n#### 数字分析\n找出key的规律，利用规律降低冲突（和直接定址的线性函数有一点重叠，但是数字分析重点是规律，也就不局限于‘线性’），比如用身份证的月日加上后四位。\n\n#### 平方取中\n[平方取中](https://zh.wikipedia.org/wiki/%E5%B9%B3%E6%96%B9%E5%8F%96%E4%B8%AD%E6%B3%95)是一种‘伪随机数算法’，可以得到特定长度内的伪随机数。\n\n#### 折叠\n按位数分割，然后各部分叠加，舍去进位。\n\n#### 随机数\n[平方取中](#平方取中)算是其中一种。\n\n#### 取余\n最大长度m，选取一个数p不大于m，\n\nhash(k) = k mod p, p < m\n\n### 冲突解决方案\n#### 开放定址\nhash_i = (hash(k) + d_i) mod m, 其中m是最大长度，i是定址次数，d_i是第i次的序列：\n\n- 线性探测，d=1,2,3...\n- 平方探测，d=1^2,2^2,3^2...\n- 伪随机探测，d=ran(k)\n\n开放定址的hash函数要求比较高，需要非常均匀，否则一旦出现聚集插入数据时就会增加定址次数\n\n#### 单独链表\n在冲突的位置放置链表\n\n#### 双散列\nhash两次\n\n#### 再散列\n准备一堆hash函数，然后冲突了就套娃：\n\nk_i = hash_i-1(....(k))\n\n#### 公共溢出区\n比如准备一个链表，和单独链表有点像，只不过这里的链表是放在“公共”区的，冲突的元素都放在一个链表里，当然用别的数据结构也可以。\n\n### Load factor 载荷因子\n元素个数/表长度，由于即使hash足够均匀，最终的元素必须放置在小于表长度的位置中，留给余下的元素的位置越少，产生冲突的概率越大：\n\n假设有一个长度为m、载荷因子为a的表，且hash函数相对均匀，\n\n那么不难得出，在写入第n个元素时冲突的概率p为`n-1/m，n <= a*m`,\n\n若取a的极限值0，也就是不会有元素写入，可以看作冲突概率p恒为0。\n\n换成朴素的证明：\n```text\n当a = 0.8\n    n=1，m=10时，p=0/10\n    n=2，m=10时，p=1/10\n    ...\n    n=8，m=10时，p=7/10\n    n=9，因为此时9 > 0.8 * 10，不满足n <= a*m，需要对表扩容或者不再写入，因此a=0.8时最大的冲突概率为7/10\n再\n当a = 0.6\n    n=1，m=10时，p=0/10\n    ...\n    n=6，m=10时，p=1/2\n    n=7，此时原因同上，a=0.6时最大的冲突概率为1/2\n当a = 0.5，最大p=2/5\n...\n```\n因此，在相同的hash函数下，理论上载荷因子越小，冲突的概率越小，但是载荷因子过于小会造成空间的浪费。\n\n### 性能因素\n1. hash的均匀程度（冲突概率，冲突必然增加开销）\n2. 冲突解决方案\n    1. 比如单链增加空间开销和时间开销、开放定址增加时间开销、再散列增加时间开销等\n    2. 各种冲突方案的开销并不是定量的，比如单链增加的时间开销和开放定址增加的时间开销并不相当，需要考虑开放定址的hash函数算法的时间复杂度与链表查询的时间复杂度，且即使开放定址的hash函数时间复杂度为O(n)，其n的常数系数也大概率与链表的不同\n3. 载荷因子（冲突概率）\n\n### Java实现\n数据结构部分：\n```java\n/**\n * 散列表\n * 冲突策略：单链\n */\nclass HashTable{\n    Node[] hashSlots;\n    // 散列槽数量\n    int slotsSize;\n    // 当前元素数量\n    int elementCount;\n    // load factor\n    float loadFactor = 0.6f;\n}\n\n/**\n * 节点\n */\nclass Node{\n    Object key;\n    Object object;\n    // 下一个节点\n    Node next;\n}\n```","slug":"lc-hash-table","published":1,"updated":"2023-03-17T02:30:47.717Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdt7000pxtuj041zgfuq","content":"<h2 id=\"Hash-Table\"><a href=\"#Hash-Table\" class=\"headerlink\" title=\"Hash Table\"></a><a href=\"https://zh.wikipedia.org/wiki/%E5%93%88%E5%B8%8C%E8%A1%A8\">Hash Table</a></h2><h3 id=\"Hash函数\"><a href=\"#Hash函数\" class=\"headerlink\" title=\"Hash函数\"></a>Hash函数</h3><h4 id=\"直接定址\"><a href=\"#直接定址\" class=\"headerlink\" title=\"直接定址\"></a>直接定址</h4><ul>\n<li>hash(k) &#x3D; k，用key</li>\n<li>hash(k) &#x3D; ak + b，key相关的<code>线性函数</code></li>\n</ul>\n<p>适用key集中的情况，如果key分散的话空间浪费会比较严重。</p>\n<h4 id=\"数字分析\"><a href=\"#数字分析\" class=\"headerlink\" title=\"数字分析\"></a>数字分析</h4><p>找出key的规律，利用规律降低冲突（和直接定址的线性函数有一点重叠，但是数字分析重点是规律，也就不局限于‘线性’），比如用身份证的月日加上后四位。</p>\n<h4 id=\"平方取中\"><a href=\"#平方取中\" class=\"headerlink\" title=\"平方取中\"></a>平方取中</h4><p><a href=\"https://zh.wikipedia.org/wiki/%E5%B9%B3%E6%96%B9%E5%8F%96%E4%B8%AD%E6%B3%95\">平方取中</a>是一种‘伪随机数算法’，可以得到特定长度内的伪随机数。</p>\n<h4 id=\"折叠\"><a href=\"#折叠\" class=\"headerlink\" title=\"折叠\"></a>折叠</h4><p>按位数分割，然后各部分叠加，舍去进位。</p>\n<h4 id=\"随机数\"><a href=\"#随机数\" class=\"headerlink\" title=\"随机数\"></a>随机数</h4><p><a href=\"#%E5%B9%B3%E6%96%B9%E5%8F%96%E4%B8%AD\">平方取中</a>算是其中一种。</p>\n<h4 id=\"取余\"><a href=\"#取余\" class=\"headerlink\" title=\"取余\"></a>取余</h4><p>最大长度m，选取一个数p不大于m，</p>\n<p>hash(k) &#x3D; k mod p, p &lt; m</p>\n<h3 id=\"冲突解决方案\"><a href=\"#冲突解决方案\" class=\"headerlink\" title=\"冲突解决方案\"></a>冲突解决方案</h3><h4 id=\"开放定址\"><a href=\"#开放定址\" class=\"headerlink\" title=\"开放定址\"></a>开放定址</h4><p>hash_i &#x3D; (hash(k) + d_i) mod m, 其中m是最大长度，i是定址次数，d_i是第i次的序列：</p>\n<ul>\n<li>线性探测，d&#x3D;1,2,3…</li>\n<li>平方探测，d&#x3D;1^2,2^2,3^2…</li>\n<li>伪随机探测，d&#x3D;ran(k)</li>\n</ul>\n<p>开放定址的hash函数要求比较高，需要非常均匀，否则一旦出现聚集插入数据时就会增加定址次数</p>\n<h4 id=\"单独链表\"><a href=\"#单独链表\" class=\"headerlink\" title=\"单独链表\"></a>单独链表</h4><p>在冲突的位置放置链表</p>\n<h4 id=\"双散列\"><a href=\"#双散列\" class=\"headerlink\" title=\"双散列\"></a>双散列</h4><p>hash两次</p>\n<h4 id=\"再散列\"><a href=\"#再散列\" class=\"headerlink\" title=\"再散列\"></a>再散列</h4><p>准备一堆hash函数，然后冲突了就套娃：</p>\n<p>k_i &#x3D; hash_i-1(….(k))</p>\n<h4 id=\"公共溢出区\"><a href=\"#公共溢出区\" class=\"headerlink\" title=\"公共溢出区\"></a>公共溢出区</h4><p>比如准备一个链表，和单独链表有点像，只不过这里的链表是放在“公共”区的，冲突的元素都放在一个链表里，当然用别的数据结构也可以。</p>\n<h3 id=\"Load-factor-载荷因子\"><a href=\"#Load-factor-载荷因子\" class=\"headerlink\" title=\"Load factor 载荷因子\"></a>Load factor 载荷因子</h3><p>元素个数&#x2F;表长度，由于即使hash足够均匀，最终的元素必须放置在小于表长度的位置中，留给余下的元素的位置越少，产生冲突的概率越大：</p>\n<p>假设有一个长度为m、载荷因子为a的表，且hash函数相对均匀，</p>\n<p>那么不难得出，在写入第n个元素时冲突的概率p为<code>n-1/m，n &lt;= a*m</code>,</p>\n<p>若取a的极限值0，也就是不会有元素写入，可以看作冲突概率p恒为0。</p>\n<p>换成朴素的证明：</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">当a = 0.8\n    n=1，m=10时，p=0/10\n    n=2，m=10时，p=1/10\n    ...\n    n=8，m=10时，p=7/10\n    n=9，因为此时9 > 0.8 * 10，不满足n &lt;= a*m，需要对表扩容或者不再写入，因此a=0.8时最大的冲突概率为7/10\n再\n当a = 0.6\n    n=1，m=10时，p=0/10\n    ...\n    n=6，m=10时，p=1/2\n    n=7，此时原因同上，a=0.6时最大的冲突概率为1/2\n当a = 0.5，最大p=2/5\n...<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>因此，在相同的hash函数下，理论上载荷因子越小，冲突的概率越小，但是载荷因子过于小会造成空间的浪费。</p>\n<h3 id=\"性能因素\"><a href=\"#性能因素\" class=\"headerlink\" title=\"性能因素\"></a>性能因素</h3><ol>\n<li>hash的均匀程度（冲突概率，冲突必然增加开销）</li>\n<li>冲突解决方案<ol>\n<li>比如单链增加空间开销和时间开销、开放定址增加时间开销、再散列增加时间开销等</li>\n<li>各种冲突方案的开销并不是定量的，比如单链增加的时间开销和开放定址增加的时间开销并不相当，需要考虑开放定址的hash函数算法的时间复杂度与链表查询的时间复杂度，且即使开放定址的hash函数时间复杂度为O(n)，其n的常数系数也大概率与链表的不同</li>\n</ol>\n</li>\n<li>载荷因子（冲突概率）</li>\n</ol>\n<h3 id=\"Java实现\"><a href=\"#Java实现\" class=\"headerlink\" title=\"Java实现\"></a>Java实现</h3><p>数据结构部分：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 散列表\n * 冲突策略：单链\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HashTable</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Node</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hashSlots<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 散列槽数量</span>\n    <span class=\"token keyword\">int</span> slotsSize<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 当前元素数量</span>\n    <span class=\"token keyword\">int</span> elementCount<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// load factor</span>\n    <span class=\"token keyword\">float</span> loadFactor <span class=\"token operator\">=</span> <span class=\"token number\">0.6f</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/**\n * 节点\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Object</span> object<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 下一个节点</span>\n    <span class=\"token class-name\">Node</span> next<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<h2 id=\"Hash-Table\"><a href=\"#Hash-Table\" class=\"headerlink\" title=\"Hash Table\"></a><a href=\"https://zh.wikipedia.org/wiki/%E5%93%88%E5%B8%8C%E8%A1%A8\">Hash Table</a></h2><h3 id=\"Hash函数\"><a href=\"#Hash函数\" class=\"headerlink\" title=\"Hash函数\"></a>Hash函数</h3><h4 id=\"直接定址\"><a href=\"#直接定址\" class=\"headerlink\" title=\"直接定址\"></a>直接定址</h4><ul>\n<li>hash(k) &#x3D; k，用key</li>\n<li>hash(k) &#x3D; ak + b，key相关的<code>线性函数</code></li>\n</ul>\n<p>适用key集中的情况，如果key分散的话空间浪费会比较严重。</p>\n<h4 id=\"数字分析\"><a href=\"#数字分析\" class=\"headerlink\" title=\"数字分析\"></a>数字分析</h4><p>找出key的规律，利用规律降低冲突（和直接定址的线性函数有一点重叠，但是数字分析重点是规律，也就不局限于‘线性’），比如用身份证的月日加上后四位。</p>\n<h4 id=\"平方取中\"><a href=\"#平方取中\" class=\"headerlink\" title=\"平方取中\"></a>平方取中</h4><p><a href=\"https://zh.wikipedia.org/wiki/%E5%B9%B3%E6%96%B9%E5%8F%96%E4%B8%AD%E6%B3%95\">平方取中</a>是一种‘伪随机数算法’，可以得到特定长度内的伪随机数。</p>\n<h4 id=\"折叠\"><a href=\"#折叠\" class=\"headerlink\" title=\"折叠\"></a>折叠</h4><p>按位数分割，然后各部分叠加，舍去进位。</p>\n<h4 id=\"随机数\"><a href=\"#随机数\" class=\"headerlink\" title=\"随机数\"></a>随机数</h4><p><a href=\"#%E5%B9%B3%E6%96%B9%E5%8F%96%E4%B8%AD\">平方取中</a>算是其中一种。</p>\n<h4 id=\"取余\"><a href=\"#取余\" class=\"headerlink\" title=\"取余\"></a>取余</h4><p>最大长度m，选取一个数p不大于m，</p>\n<p>hash(k) &#x3D; k mod p, p &lt; m</p>\n<h3 id=\"冲突解决方案\"><a href=\"#冲突解决方案\" class=\"headerlink\" title=\"冲突解决方案\"></a>冲突解决方案</h3><h4 id=\"开放定址\"><a href=\"#开放定址\" class=\"headerlink\" title=\"开放定址\"></a>开放定址</h4><p>hash_i &#x3D; (hash(k) + d_i) mod m, 其中m是最大长度，i是定址次数，d_i是第i次的序列：</p>\n<ul>\n<li>线性探测，d&#x3D;1,2,3…</li>\n<li>平方探测，d&#x3D;1^2,2^2,3^2…</li>\n<li>伪随机探测，d&#x3D;ran(k)</li>\n</ul>\n<p>开放定址的hash函数要求比较高，需要非常均匀，否则一旦出现聚集插入数据时就会增加定址次数</p>\n<h4 id=\"单独链表\"><a href=\"#单独链表\" class=\"headerlink\" title=\"单独链表\"></a>单独链表</h4><p>在冲突的位置放置链表</p>\n<h4 id=\"双散列\"><a href=\"#双散列\" class=\"headerlink\" title=\"双散列\"></a>双散列</h4><p>hash两次</p>\n<h4 id=\"再散列\"><a href=\"#再散列\" class=\"headerlink\" title=\"再散列\"></a>再散列</h4><p>准备一堆hash函数，然后冲突了就套娃：</p>\n<p>k_i &#x3D; hash_i-1(….(k))</p>\n<h4 id=\"公共溢出区\"><a href=\"#公共溢出区\" class=\"headerlink\" title=\"公共溢出区\"></a>公共溢出区</h4><p>比如准备一个链表，和单独链表有点像，只不过这里的链表是放在“公共”区的，冲突的元素都放在一个链表里，当然用别的数据结构也可以。</p>\n<h3 id=\"Load-factor-载荷因子\"><a href=\"#Load-factor-载荷因子\" class=\"headerlink\" title=\"Load factor 载荷因子\"></a>Load factor 载荷因子</h3><p>元素个数&#x2F;表长度，由于即使hash足够均匀，最终的元素必须放置在小于表长度的位置中，留给余下的元素的位置越少，产生冲突的概率越大：</p>\n<p>假设有一个长度为m、载荷因子为a的表，且hash函数相对均匀，</p>\n<p>那么不难得出，在写入第n个元素时冲突的概率p为<code>n-1/m，n &lt;= a*m</code>,</p>\n<p>若取a的极限值0，也就是不会有元素写入，可以看作冲突概率p恒为0。</p>\n<p>换成朴素的证明：</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">当a = 0.8\n    n=1，m=10时，p=0/10\n    n=2，m=10时，p=1/10\n    ...\n    n=8，m=10时，p=7/10\n    n=9，因为此时9 > 0.8 * 10，不满足n &lt;= a*m，需要对表扩容或者不再写入，因此a=0.8时最大的冲突概率为7/10\n再\n当a = 0.6\n    n=1，m=10时，p=0/10\n    ...\n    n=6，m=10时，p=1/2\n    n=7，此时原因同上，a=0.6时最大的冲突概率为1/2\n当a = 0.5，最大p=2/5\n...<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>因此，在相同的hash函数下，理论上载荷因子越小，冲突的概率越小，但是载荷因子过于小会造成空间的浪费。</p>\n<h3 id=\"性能因素\"><a href=\"#性能因素\" class=\"headerlink\" title=\"性能因素\"></a>性能因素</h3><ol>\n<li>hash的均匀程度（冲突概率，冲突必然增加开销）</li>\n<li>冲突解决方案<ol>\n<li>比如单链增加空间开销和时间开销、开放定址增加时间开销、再散列增加时间开销等</li>\n<li>各种冲突方案的开销并不是定量的，比如单链增加的时间开销和开放定址增加的时间开销并不相当，需要考虑开放定址的hash函数算法的时间复杂度与链表查询的时间复杂度，且即使开放定址的hash函数时间复杂度为O(n)，其n的常数系数也大概率与链表的不同</li>\n</ol>\n</li>\n<li>载荷因子（冲突概率）</li>\n</ol>\n<h3 id=\"Java实现\"><a href=\"#Java实现\" class=\"headerlink\" title=\"Java实现\"></a>Java实现</h3><p>数据结构部分：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 散列表\n * 冲突策略：单链\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HashTable</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Node</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hashSlots<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 散列槽数量</span>\n    <span class=\"token keyword\">int</span> slotsSize<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 当前元素数量</span>\n    <span class=\"token keyword\">int</span> elementCount<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// load factor</span>\n    <span class=\"token keyword\">float</span> loadFactor <span class=\"token operator\">=</span> <span class=\"token number\">0.6f</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/**\n * 节点\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Object</span> object<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 下一个节点</span>\n    <span class=\"token class-name\">Node</span> next<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"错误的动态类加载方式引发的metaspace内存泄漏","date":"2022-03-17T07:59:28.000Z","_content":"\n## 现象\n\n通过`ClassLoader#defineClass`方法重复定义指定`name`的类, HotSpot JVM最终会在metaspace中抛出OOM。\n\n## `ClassLoader#defineClass`的行为\n\n![defineClass](jvm-metaspace-leakage-caused-by-loading-dynamic-class/0.png)\n\n`ClassLoader#defineClass`是JVM本地方法, 主要的执行步骤:\n\n1. 解析class文件并检查class文件格式是否正确。\n   \n   ![vm specification](jvm-metaspace-leakage-caused-by-loading-dynamic-class/1.png)\n\n2. 根据`name`检查`systemDictionary`中class对应的类数据Klass/KlassHandler是否已经加载过。\n\n\n## HotSpot VM解析class的时候实际行为\n\n在解析和检查class格式过程中, HotSpot VM同时也在metaspace中产生了对应class文件的结构数据 (class code, vtable, itable, etc.)。 所以即使传入的`name`完全一样, 也会在metaspace中不断产生“重复”的class数据。\n\n![native define class](jvm-metaspace-leakage-caused-by-loading-dynamic-class/2.png)\n\n![find klass in dict](jvm-metaspace-leakage-caused-by-loading-dynamic-class/3.png)\n\n![check if class already defined](jvm-metaspace-leakage-caused-by-loading-dynamic-class/4.png)\n\n选择在解析的过程中保留完整的class数据（这里“完整”指的是相对与解析一部分之后丢弃一部分的做法），除了不这么做会增加代码复杂度、增加class数据解析的次数、产生更多的内存碎片之外，另一个考虑是正确且规范的动态类加载方式应该是通过`ClassLoader#loadClass()`来进行，而不是直接调用native方法，因为直接调用native方法并不会得到不一样的结果。\n\n![loadClass in java](jvm-metaspace-leakage-caused-by-loading-dynamic-class/5.png)\n\n## metaspace中Class数据的GC时机\n\n实际上没有特定针对metaspace的GC行为，GC总是在堆中工作。但当堆中包含metaspace的class数据指针的class对象被执行回收时，class数据占用的空间也会被同时释放。\n\n![metaspace 'GC'](jvm-metaspace-leakage-caused-by-loading-dynamic-class/6.png)","source":"_posts/jvm-metaspace-leakage-caused-by-loading-dynamic-class.md","raw":"---\ntitle: 错误的动态类加载方式引发的metaspace内存泄漏\ndate: 2022-03-17 15:59:28\ncategories: \n  - 群英荟萃\n  - BUG草集\ntags:\n  - JVM\n  - JVM Memory\n  - Java\n---\n\n## 现象\n\n通过`ClassLoader#defineClass`方法重复定义指定`name`的类, HotSpot JVM最终会在metaspace中抛出OOM。\n\n## `ClassLoader#defineClass`的行为\n\n![defineClass](jvm-metaspace-leakage-caused-by-loading-dynamic-class/0.png)\n\n`ClassLoader#defineClass`是JVM本地方法, 主要的执行步骤:\n\n1. 解析class文件并检查class文件格式是否正确。\n   \n   ![vm specification](jvm-metaspace-leakage-caused-by-loading-dynamic-class/1.png)\n\n2. 根据`name`检查`systemDictionary`中class对应的类数据Klass/KlassHandler是否已经加载过。\n\n\n## HotSpot VM解析class的时候实际行为\n\n在解析和检查class格式过程中, HotSpot VM同时也在metaspace中产生了对应class文件的结构数据 (class code, vtable, itable, etc.)。 所以即使传入的`name`完全一样, 也会在metaspace中不断产生“重复”的class数据。\n\n![native define class](jvm-metaspace-leakage-caused-by-loading-dynamic-class/2.png)\n\n![find klass in dict](jvm-metaspace-leakage-caused-by-loading-dynamic-class/3.png)\n\n![check if class already defined](jvm-metaspace-leakage-caused-by-loading-dynamic-class/4.png)\n\n选择在解析的过程中保留完整的class数据（这里“完整”指的是相对与解析一部分之后丢弃一部分的做法），除了不这么做会增加代码复杂度、增加class数据解析的次数、产生更多的内存碎片之外，另一个考虑是正确且规范的动态类加载方式应该是通过`ClassLoader#loadClass()`来进行，而不是直接调用native方法，因为直接调用native方法并不会得到不一样的结果。\n\n![loadClass in java](jvm-metaspace-leakage-caused-by-loading-dynamic-class/5.png)\n\n## metaspace中Class数据的GC时机\n\n实际上没有特定针对metaspace的GC行为，GC总是在堆中工作。但当堆中包含metaspace的class数据指针的class对象被执行回收时，class数据占用的空间也会被同时释放。\n\n![metaspace 'GC'](jvm-metaspace-leakage-caused-by-loading-dynamic-class/6.png)","slug":"jvm-metaspace-leakage-caused-by-loading-dynamic-class","published":1,"updated":"2023-03-17T02:30:47.695Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdt8000txtuj5lcnd7by","content":"<h2 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h2><p>通过<code>ClassLoader#defineClass</code>方法重复定义指定<code>name</code>的类, HotSpot JVM最终会在metaspace中抛出OOM。</p>\n<h2 id=\"ClassLoader-defineClass的行为\"><a href=\"#ClassLoader-defineClass的行为\" class=\"headerlink\" title=\"ClassLoader#defineClass的行为\"></a><code>ClassLoader#defineClass</code>的行为</h2><p><img src=\"/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/0.png\" alt=\"defineClass\"></p>\n<p><code>ClassLoader#defineClass</code>是JVM本地方法, 主要的执行步骤:</p>\n<ol>\n<li><p>解析class文件并检查class文件格式是否正确。</p>\n<p><img src=\"/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/1.png\" alt=\"vm specification\"></p>\n</li>\n<li><p>根据<code>name</code>检查<code>systemDictionary</code>中class对应的类数据Klass&#x2F;KlassHandler是否已经加载过。</p>\n</li>\n</ol>\n<h2 id=\"HotSpot-VM解析class的时候实际行为\"><a href=\"#HotSpot-VM解析class的时候实际行为\" class=\"headerlink\" title=\"HotSpot VM解析class的时候实际行为\"></a>HotSpot VM解析class的时候实际行为</h2><p>在解析和检查class格式过程中, HotSpot VM同时也在metaspace中产生了对应class文件的结构数据 (class code, vtable, itable, etc.)。 所以即使传入的<code>name</code>完全一样, 也会在metaspace中不断产生“重复”的class数据。</p>\n<p><img src=\"/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/2.png\" alt=\"native define class\"></p>\n<p><img src=\"/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/3.png\" alt=\"find klass in dict\"></p>\n<p><img src=\"/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/4.png\" alt=\"check if class already defined\"></p>\n<p>选择在解析的过程中保留完整的class数据（这里“完整”指的是相对与解析一部分之后丢弃一部分的做法），除了不这么做会增加代码复杂度、增加class数据解析的次数、产生更多的内存碎片之外，另一个考虑是正确且规范的动态类加载方式应该是通过<code>ClassLoader#loadClass()</code>来进行，而不是直接调用native方法，因为直接调用native方法并不会得到不一样的结果。</p>\n<p><img src=\"/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/5.png\" alt=\"loadClass in java\"></p>\n<h2 id=\"metaspace中Class数据的GC时机\"><a href=\"#metaspace中Class数据的GC时机\" class=\"headerlink\" title=\"metaspace中Class数据的GC时机\"></a>metaspace中Class数据的GC时机</h2><p>实际上没有特定针对metaspace的GC行为，GC总是在堆中工作。但当堆中包含metaspace的class数据指针的class对象被执行回收时，class数据占用的空间也会被同时释放。</p>\n<p><img src=\"/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/6.png\" alt=\"metaspace &#39;GC&#39;\"></p>\n","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<h2 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h2><p>通过<code>ClassLoader#defineClass</code>方法重复定义指定<code>name</code>的类, HotSpot JVM最终会在metaspace中抛出OOM。</p>\n<h2 id=\"ClassLoader-defineClass的行为\"><a href=\"#ClassLoader-defineClass的行为\" class=\"headerlink\" title=\"ClassLoader#defineClass的行为\"></a><code>ClassLoader#defineClass</code>的行为</h2><p><img src=\"/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/0.png\" alt=\"defineClass\"></p>\n<p><code>ClassLoader#defineClass</code>是JVM本地方法, 主要的执行步骤:</p>\n<ol>\n<li><p>解析class文件并检查class文件格式是否正确。</p>\n<p><img src=\"/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/1.png\" alt=\"vm specification\"></p>\n</li>\n<li><p>根据<code>name</code>检查<code>systemDictionary</code>中class对应的类数据Klass&#x2F;KlassHandler是否已经加载过。</p>\n</li>\n</ol>\n<h2 id=\"HotSpot-VM解析class的时候实际行为\"><a href=\"#HotSpot-VM解析class的时候实际行为\" class=\"headerlink\" title=\"HotSpot VM解析class的时候实际行为\"></a>HotSpot VM解析class的时候实际行为</h2><p>在解析和检查class格式过程中, HotSpot VM同时也在metaspace中产生了对应class文件的结构数据 (class code, vtable, itable, etc.)。 所以即使传入的<code>name</code>完全一样, 也会在metaspace中不断产生“重复”的class数据。</p>\n<p><img src=\"/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/2.png\" alt=\"native define class\"></p>\n<p><img src=\"/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/3.png\" alt=\"find klass in dict\"></p>\n<p><img src=\"/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/4.png\" alt=\"check if class already defined\"></p>\n<p>选择在解析的过程中保留完整的class数据（这里“完整”指的是相对与解析一部分之后丢弃一部分的做法），除了不这么做会增加代码复杂度、增加class数据解析的次数、产生更多的内存碎片之外，另一个考虑是正确且规范的动态类加载方式应该是通过<code>ClassLoader#loadClass()</code>来进行，而不是直接调用native方法，因为直接调用native方法并不会得到不一样的结果。</p>\n<p><img src=\"/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/5.png\" alt=\"loadClass in java\"></p>\n<h2 id=\"metaspace中Class数据的GC时机\"><a href=\"#metaspace中Class数据的GC时机\" class=\"headerlink\" title=\"metaspace中Class数据的GC时机\"></a>metaspace中Class数据的GC时机</h2><p>实际上没有特定针对metaspace的GC行为，GC总是在堆中工作。但当堆中包含metaspace的class数据指针的class对象被执行回收时，class数据占用的空间也会被同时释放。</p>\n<p><img src=\"/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/6.png\" alt=\"metaspace &#39;GC&#39;\"></p>\n"},{"title":"Project Loom 预览","date":"2022-07-14T09:02:15.000Z","_content":"## 相关资源\n> 主页：[https://openjdk.org/projects/loom/](https://openjdk.org/projects/loom/)\n> \n> 提案：[http://cr.openjdk.java.net/~rpressler/loom/Loom-Proposal.html](http://cr.openjdk.java.net/~rpressler/loom/Loom-Proposal.html)\n>\n> 预览：[https://jdk.java.net/loom/](https://jdk.java.net/loom/)\n\n## EA in JDK19\n> [https://github.com/Attt/Loom-Preview](https://github.com/Attt/Loom-Preview)\n\n```java\n// 创建builder\nThread.Builder.OfVirtual ofVirtual = Thread.ofVirtual()\n        // 名称，start表示种子1步进递增\n        .name(\"virtual-thread-\", 0)\n        // 是否允许set threadLocal\n        .allowSetThreadLocals(true)\n        // 是否允许使用可继承的threadLocal\n        .inheritInheritableThreadLocals(true)\n        // 未捕获异常处理器\n        .uncaughtExceptionHandler((t, e) -> {\n            System.out.println(t);\n            e.printStackTrace();\n        });\n\n// 执行\nofVirtual.start(() -> {\n    // do something\n    System.out.println(Thread.currentThread().getName());\n    System.out.println(Thread.currentThread().isDaemon());\n    System.out.println(Thread.currentThread().isVirtual());\n}).join();\n\n// 预设任务，返回Thread实例\nThread unstarted = ofVirtual\n        .unstarted(() -> {\n            System.out.println(Thread.currentThread().getName());\n            System.out.println(\"Wooooow!\");\n        });\n// 开启任务\nunstarted.start();\n\n// 基于Executors#newThreadPerTaskExecutor，使用VirtualThreadFactory作为线程工厂\n// 为每个提交的任务开启一个thread，无界\nExecutorService virtualThreadPerTaskExecutor = Executors.newVirtualThreadPerTaskExecutor();\nvirtualThreadPerTaskExecutor.submit(() -> {\n    System.out.printf(\"%s-newVirtualThreadPerTaskExecutor %n\", Thread.currentThread().getName());\n});\n\n// 使用builder的设置值创建的perTaskExecutor\nExecutorService perTaskExecutor = Executors.newThreadPerTaskExecutor(ofVirtual.factory());\nperTaskExecutor.submit(() -> {\n    System.out.printf(\"%s-newThreadPerTaskExecutor %n\", Thread.currentThread().getName());\n});\n\n// 结构化并发\nStructuredTaskScope.ShutdownOnFailure shutdownOnFailure = new StructuredTaskScope.ShutdownOnFailure();\nshutdownOnFailure.fork(() -> {\n    System.out.println(\"taskA\");\n    TimeUnit.SECONDS.sleep(1);\n    throw new RuntimeException(\"error occurred in taskA\");\n});\n\nshutdownOnFailure.fork(() -> {\n    System.out.println(\"taskB...\");\n    TimeUnit.SECONDS.sleep(5);\n    System.out.println(\"taskB is finished.\");\n    return null;\n});\n\ntry {\n    shutdownOnFailure.joinUntil(LocalDateTime.now().plusSeconds(10).toInstant(ZoneOffset.UTC));\n} catch (TimeoutException e) {\n    e.printStackTrace();\n}\n```\n\n## Benchmark\n```java\nBenchmark                                  Mode  Cnt     Score     Error   Units\nThreadThroughputBenchmark.platformThread  thrpt    5    10.788 ±   0.677  ops/ms\nThreadThroughputBenchmark.virtualThread   thrpt    5  4201.740 ± 475.806  ops/ms\n```\n\n## Q&A\n1. 命名\n- [Virtual Threads: A Short Note about Naming](https://mail.openjdk.org/pipermail/loom-dev/2019-November/000864.html)\n\n2. 为什么不用类似于await/async提供的协作调度？协作调度能够明确调度点在哪里，也能简化并发编程？\n- Java已经有基于抢占式调度的线程，增加协作调度只会增加兼容问题\n- 协作调度是一种较差的调度方案，协作调度意味着每个操作都是在临界区发生的不能互相交错，明确定义了交错的点，抢占式调度正相反，明确了不能交错的地方，使得交错能够发生在其他的任何地方，对于服务端来说大多数操作对调度点并不敏感不明确的交错可以更高效，而且每一次添加调度点也需要考虑更多的事情\n\n\n## 关于并发编程的吐槽：函数颜色问题\n[what-color-is-your-function](http://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/)，假设某种语言中一种函数是<font color='red'>红色</font>的，另一种函数是<font color='#0099ff'>蓝色</font>的：\n\n那么这种语言实际存在两种`function`关键字：`blue_func`和`red_func`\n```javascript\nblue_func sync(){...}\n\nred_func async(callback){...}\n```\n其中，<font color='red'>红色</font>函数的结果不通过方法返回，而是传递给参数中的函数，那么就会有这样的问题：\n- 在<font color='red'>红色</font>函数中可以调用<font color='#0099ff'>蓝色</font>函数，因为<font color='#0099ff'>蓝色</font>函数的返回值通过方法返回能够拿到。\n- 而在<font color='#0099ff'>蓝色</font>函数中是不能轻易调用<font color='red'>红色</font>函数的，因为结果已经传递到<font color='red'>红色</font>函数的参数函数里了，在<font color='#0099ff'>蓝色</font>函数线性执行过程中不能保证能够从<font color='red'>红色</font>函数的参数函数里获取结果。\n\n```javascript\nred_func async(callback){\n    sync() // 可以调用\n}\n\nblue_func sync(){\n    async(callback) // 不能调用\n}\n```\n所谓的<font color='red'>红色</font>函数就是异步函数，上面的这个“颜色问题”就是“回调地狱”(\"callback hell\")的另一种感受方法😅。\n\n在函数式编程中，异步存在两个比较炸裂的问题：1. 回调地狱😅；2. 一个被广泛使用的同步函数的异步化所需要的大量的修改和重写量可以让任何一个开发直接爆炸：\n\n```javascript\nfunc syncC(shit){\n    printf \"shit is %s\", shit\n}\n\nfunc asyncB(callbackB){\n    var b\n    // do something\n    callbackB(b)\n}\n\nfunc syncB(fart){\n    printf \"fart is %s\", fart\n    asyncB(syncC)\n}\n\nfunc asyncA(callbackA){\n    var a\n    // do something\n    callbackA(a)\n}\n\nfunc syncA(){\n    asyncA(syncB)\n}\n```\n看到这段代码已经开始焦虑了，如果简化一下：\n```javascript\nfunc asyncB(callbackB){\n    var b\n    // do something\n    callbackB(b)\n}\n\nfunc asyncA(callbackA){\n    var a\n    // do something\n    callbackA(a)\n}\n\nfunc syncA(){\n    asyncA(fart -> {\n        printf \"fart is %s\", fart\n        asyncB(shit -> {\n            printf \"shit is %s\", shit\n        })\n    })\n}\n```\n有人可以看出是现有fart还是现有shit吗...\n","source":"_posts/project-loom-preview.md","raw":"---\ntitle: Project Loom 预览\ndate: 2022-07-14 17:02:15\ncategories:\n    - 基础姿势\n    - 并发编程\ntags:\n    - Java\n    - virtual threads\n    - fiber\n    - asynchronization\n    - concurrency\n    - continuations\n---\n## 相关资源\n> 主页：[https://openjdk.org/projects/loom/](https://openjdk.org/projects/loom/)\n> \n> 提案：[http://cr.openjdk.java.net/~rpressler/loom/Loom-Proposal.html](http://cr.openjdk.java.net/~rpressler/loom/Loom-Proposal.html)\n>\n> 预览：[https://jdk.java.net/loom/](https://jdk.java.net/loom/)\n\n## EA in JDK19\n> [https://github.com/Attt/Loom-Preview](https://github.com/Attt/Loom-Preview)\n\n```java\n// 创建builder\nThread.Builder.OfVirtual ofVirtual = Thread.ofVirtual()\n        // 名称，start表示种子1步进递增\n        .name(\"virtual-thread-\", 0)\n        // 是否允许set threadLocal\n        .allowSetThreadLocals(true)\n        // 是否允许使用可继承的threadLocal\n        .inheritInheritableThreadLocals(true)\n        // 未捕获异常处理器\n        .uncaughtExceptionHandler((t, e) -> {\n            System.out.println(t);\n            e.printStackTrace();\n        });\n\n// 执行\nofVirtual.start(() -> {\n    // do something\n    System.out.println(Thread.currentThread().getName());\n    System.out.println(Thread.currentThread().isDaemon());\n    System.out.println(Thread.currentThread().isVirtual());\n}).join();\n\n// 预设任务，返回Thread实例\nThread unstarted = ofVirtual\n        .unstarted(() -> {\n            System.out.println(Thread.currentThread().getName());\n            System.out.println(\"Wooooow!\");\n        });\n// 开启任务\nunstarted.start();\n\n// 基于Executors#newThreadPerTaskExecutor，使用VirtualThreadFactory作为线程工厂\n// 为每个提交的任务开启一个thread，无界\nExecutorService virtualThreadPerTaskExecutor = Executors.newVirtualThreadPerTaskExecutor();\nvirtualThreadPerTaskExecutor.submit(() -> {\n    System.out.printf(\"%s-newVirtualThreadPerTaskExecutor %n\", Thread.currentThread().getName());\n});\n\n// 使用builder的设置值创建的perTaskExecutor\nExecutorService perTaskExecutor = Executors.newThreadPerTaskExecutor(ofVirtual.factory());\nperTaskExecutor.submit(() -> {\n    System.out.printf(\"%s-newThreadPerTaskExecutor %n\", Thread.currentThread().getName());\n});\n\n// 结构化并发\nStructuredTaskScope.ShutdownOnFailure shutdownOnFailure = new StructuredTaskScope.ShutdownOnFailure();\nshutdownOnFailure.fork(() -> {\n    System.out.println(\"taskA\");\n    TimeUnit.SECONDS.sleep(1);\n    throw new RuntimeException(\"error occurred in taskA\");\n});\n\nshutdownOnFailure.fork(() -> {\n    System.out.println(\"taskB...\");\n    TimeUnit.SECONDS.sleep(5);\n    System.out.println(\"taskB is finished.\");\n    return null;\n});\n\ntry {\n    shutdownOnFailure.joinUntil(LocalDateTime.now().plusSeconds(10).toInstant(ZoneOffset.UTC));\n} catch (TimeoutException e) {\n    e.printStackTrace();\n}\n```\n\n## Benchmark\n```java\nBenchmark                                  Mode  Cnt     Score     Error   Units\nThreadThroughputBenchmark.platformThread  thrpt    5    10.788 ±   0.677  ops/ms\nThreadThroughputBenchmark.virtualThread   thrpt    5  4201.740 ± 475.806  ops/ms\n```\n\n## Q&A\n1. 命名\n- [Virtual Threads: A Short Note about Naming](https://mail.openjdk.org/pipermail/loom-dev/2019-November/000864.html)\n\n2. 为什么不用类似于await/async提供的协作调度？协作调度能够明确调度点在哪里，也能简化并发编程？\n- Java已经有基于抢占式调度的线程，增加协作调度只会增加兼容问题\n- 协作调度是一种较差的调度方案，协作调度意味着每个操作都是在临界区发生的不能互相交错，明确定义了交错的点，抢占式调度正相反，明确了不能交错的地方，使得交错能够发生在其他的任何地方，对于服务端来说大多数操作对调度点并不敏感不明确的交错可以更高效，而且每一次添加调度点也需要考虑更多的事情\n\n\n## 关于并发编程的吐槽：函数颜色问题\n[what-color-is-your-function](http://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/)，假设某种语言中一种函数是<font color='red'>红色</font>的，另一种函数是<font color='#0099ff'>蓝色</font>的：\n\n那么这种语言实际存在两种`function`关键字：`blue_func`和`red_func`\n```javascript\nblue_func sync(){...}\n\nred_func async(callback){...}\n```\n其中，<font color='red'>红色</font>函数的结果不通过方法返回，而是传递给参数中的函数，那么就会有这样的问题：\n- 在<font color='red'>红色</font>函数中可以调用<font color='#0099ff'>蓝色</font>函数，因为<font color='#0099ff'>蓝色</font>函数的返回值通过方法返回能够拿到。\n- 而在<font color='#0099ff'>蓝色</font>函数中是不能轻易调用<font color='red'>红色</font>函数的，因为结果已经传递到<font color='red'>红色</font>函数的参数函数里了，在<font color='#0099ff'>蓝色</font>函数线性执行过程中不能保证能够从<font color='red'>红色</font>函数的参数函数里获取结果。\n\n```javascript\nred_func async(callback){\n    sync() // 可以调用\n}\n\nblue_func sync(){\n    async(callback) // 不能调用\n}\n```\n所谓的<font color='red'>红色</font>函数就是异步函数，上面的这个“颜色问题”就是“回调地狱”(\"callback hell\")的另一种感受方法😅。\n\n在函数式编程中，异步存在两个比较炸裂的问题：1. 回调地狱😅；2. 一个被广泛使用的同步函数的异步化所需要的大量的修改和重写量可以让任何一个开发直接爆炸：\n\n```javascript\nfunc syncC(shit){\n    printf \"shit is %s\", shit\n}\n\nfunc asyncB(callbackB){\n    var b\n    // do something\n    callbackB(b)\n}\n\nfunc syncB(fart){\n    printf \"fart is %s\", fart\n    asyncB(syncC)\n}\n\nfunc asyncA(callbackA){\n    var a\n    // do something\n    callbackA(a)\n}\n\nfunc syncA(){\n    asyncA(syncB)\n}\n```\n看到这段代码已经开始焦虑了，如果简化一下：\n```javascript\nfunc asyncB(callbackB){\n    var b\n    // do something\n    callbackB(b)\n}\n\nfunc asyncA(callbackA){\n    var a\n    // do something\n    callbackA(a)\n}\n\nfunc syncA(){\n    asyncA(fart -> {\n        printf \"fart is %s\", fart\n        asyncB(shit -> {\n            printf \"shit is %s\", shit\n        })\n    })\n}\n```\n有人可以看出是现有fart还是现有shit吗...\n","slug":"project-loom-preview","published":1,"updated":"2023-03-17T02:30:47.719Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdt8000vxtujeia51wsr","content":"<h2 id=\"相关资源\"><a href=\"#相关资源\" class=\"headerlink\" title=\"相关资源\"></a>相关资源</h2><blockquote>\n<p>主页：<a href=\"https://openjdk.org/projects/loom/\">https://openjdk.org/projects/loom/</a></p>\n<p>提案：<a href=\"http://cr.openjdk.java.net/~rpressler/loom/Loom-Proposal.html\">http://cr.openjdk.java.net/~rpressler&#x2F;loom&#x2F;Loom-Proposal.html</a></p>\n<p>预览：<a href=\"https://jdk.java.net/loom/\">https://jdk.java.net/loom/</a></p>\n</blockquote>\n<h2 id=\"EA-in-JDK19\"><a href=\"#EA-in-JDK19\" class=\"headerlink\" title=\"EA in JDK19\"></a>EA in JDK19</h2><blockquote>\n<p><a href=\"https://github.com/Attt/Loom-Preview\">https://github.com/Attt/Loom-Preview</a></p>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 创建builder</span>\n<span class=\"token class-name\">Thread<span class=\"token punctuation\">.</span>Builder<span class=\"token punctuation\">.</span>OfVirtual</span> ofVirtual <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofVirtual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// 名称，start表示种子1步进递增</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"virtual-thread-\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// 是否允许set threadLocal</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">allowSetThreadLocals</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// 是否允许使用可继承的threadLocal</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">inheritInheritableThreadLocals</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// 未捕获异常处理器</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">uncaughtExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 执行</span>\nofVirtual<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// do something</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isDaemon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isVirtual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 预设任务，返回Thread实例</span>\n<span class=\"token class-name\">Thread</span> unstarted <span class=\"token operator\">=</span> ofVirtual\n        <span class=\"token punctuation\">.</span><span class=\"token function\">unstarted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Wooooow!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 开启任务</span>\nunstarted<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 基于Executors#newThreadPerTaskExecutor，使用VirtualThreadFactory作为线程工厂</span>\n<span class=\"token comment\">// 为每个提交的任务开启一个thread，无界</span>\n<span class=\"token class-name\">ExecutorService</span> virtualThreadPerTaskExecutor <span class=\"token operator\">=</span> <span class=\"token class-name\">Executors</span><span class=\"token punctuation\">.</span><span class=\"token function\">newVirtualThreadPerTaskExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvirtualThreadPerTaskExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s-newVirtualThreadPerTaskExecutor %n\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 使用builder的设置值创建的perTaskExecutor</span>\n<span class=\"token class-name\">ExecutorService</span> perTaskExecutor <span class=\"token operator\">=</span> <span class=\"token class-name\">Executors</span><span class=\"token punctuation\">.</span><span class=\"token function\">newThreadPerTaskExecutor</span><span class=\"token punctuation\">(</span>ofVirtual<span class=\"token punctuation\">.</span><span class=\"token function\">factory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nperTaskExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s-newThreadPerTaskExecutor %n\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 结构化并发</span>\n<span class=\"token class-name\">StructuredTaskScope<span class=\"token punctuation\">.</span>ShutdownOnFailure</span> shutdownOnFailure <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StructuredTaskScope<span class=\"token punctuation\">.</span>ShutdownOnFailure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nshutdownOnFailure<span class=\"token punctuation\">.</span><span class=\"token function\">fork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"taskA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SECONDS</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error occurred in taskA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nshutdownOnFailure<span class=\"token punctuation\">.</span><span class=\"token function\">fork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"taskB...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SECONDS</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"taskB is finished.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    shutdownOnFailure<span class=\"token punctuation\">.</span><span class=\"token function\">joinUntil</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">plusSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInstant</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ZoneOffset</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UTC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TimeoutException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Benchmark\"><a href=\"#Benchmark\" class=\"headerlink\" title=\"Benchmark\"></a>Benchmark</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Benchmark</span>                                  <span class=\"token class-name\">Mode</span>  <span class=\"token class-name\">Cnt</span>     <span class=\"token class-name\">Score</span>     <span class=\"token class-name\">Error</span>   <span class=\"token class-name\">Units</span>\n<span class=\"token class-name\">ThreadThroughputBenchmark</span><span class=\"token punctuation\">.</span>platformThread  thrpt    <span class=\"token number\">5</span>    <span class=\"token number\">10.788</span> ±   <span class=\"token number\">0.677</span>  ops<span class=\"token operator\">/</span>ms\n<span class=\"token class-name\">ThreadThroughputBenchmark</span><span class=\"token punctuation\">.</span>virtualThread   thrpt    <span class=\"token number\">5</span>  <span class=\"token number\">4201.740</span> ± <span class=\"token number\">475.806</span>  ops<span class=\"token operator\">/</span>ms<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Q-amp-A\"><a href=\"#Q-amp-A\" class=\"headerlink\" title=\"Q&amp;A\"></a>Q&amp;A</h2><ol>\n<li>命名</li>\n</ol>\n<ul>\n<li><a href=\"https://mail.openjdk.org/pipermail/loom-dev/2019-November/000864.html\">Virtual Threads: A Short Note about Naming</a></li>\n</ul>\n<ol start=\"2\">\n<li>为什么不用类似于await&#x2F;async提供的协作调度？协作调度能够明确调度点在哪里，也能简化并发编程？</li>\n</ol>\n<ul>\n<li>Java已经有基于抢占式调度的线程，增加协作调度只会增加兼容问题</li>\n<li>协作调度是一种较差的调度方案，协作调度意味着每个操作都是在临界区发生的不能互相交错，明确定义了交错的点，抢占式调度正相反，明确了不能交错的地方，使得交错能够发生在其他的任何地方，对于服务端来说大多数操作对调度点并不敏感不明确的交错可以更高效，而且每一次添加调度点也需要考虑更多的事情</li>\n</ul>\n<h2 id=\"关于并发编程的吐槽：函数颜色问题\"><a href=\"#关于并发编程的吐槽：函数颜色问题\" class=\"headerlink\" title=\"关于并发编程的吐槽：函数颜色问题\"></a>关于并发编程的吐槽：函数颜色问题</h2><p><a href=\"http://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/\">what-color-is-your-function</a>，假设某种语言中一种函数是<font color='red'>红色</font>的，另一种函数是<font color='#0099ff'>蓝色</font>的：</p>\n<p>那么这种语言实际存在两种<code>function</code>关键字：<code>blue_func</code>和<code>red_func</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">blue_func <span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">...</span><span class=\"token punctuation\">&#125;</span>\n\nred_func <span class=\"token keyword\">async</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">...</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>其中，<font color='red'>红色</font>函数的结果不通过方法返回，而是传递给参数中的函数，那么就会有这样的问题：</p>\n<ul>\n<li>在<font color='red'>红色</font>函数中可以调用<font color='#0099ff'>蓝色</font>函数，因为<font color='#0099ff'>蓝色</font>函数的返回值通过方法返回能够拿到。</li>\n<li>而在<font color='#0099ff'>蓝色</font>函数中是不能轻易调用<font color='red'>红色</font>函数的，因为结果已经传递到<font color='red'>红色</font>函数的参数函数里了，在<font color='#0099ff'>蓝色</font>函数线性执行过程中不能保证能够从<font color='red'>红色</font>函数的参数函数里获取结果。</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">red_func <span class=\"token keyword\">async</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 可以调用</span>\n<span class=\"token punctuation\">&#125;</span>\n\nblue_func <span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">async</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 不能调用</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>所谓的<font color='red'>红色</font>函数就是异步函数，上面的这个“颜色问题”就是“回调地狱”(“callback hell”)的另一种感受方法😅。</p>\n<p>在函数式编程中，异步存在两个比较炸裂的问题：1. 回调地狱😅；2. 一个被广泛使用的同步函数的异步化所需要的大量的修改和重写量可以让任何一个开发直接爆炸：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">func <span class=\"token function\">syncC</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">shit</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    printf <span class=\"token string\">\"shit is %s\"</span><span class=\"token punctuation\">,</span> shit\n<span class=\"token punctuation\">&#125;</span>\n\nfunc <span class=\"token function\">asyncB</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callbackB</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> b\n    <span class=\"token comment\">// do something</span>\n    <span class=\"token function\">callbackB</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\nfunc <span class=\"token function\">syncB</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fart</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    printf <span class=\"token string\">\"fart is %s\"</span><span class=\"token punctuation\">,</span> fart\n    <span class=\"token function\">asyncB</span><span class=\"token punctuation\">(</span>syncC<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\nfunc <span class=\"token function\">asyncA</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callbackA</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> a\n    <span class=\"token comment\">// do something</span>\n    <span class=\"token function\">callbackA</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\nfunc <span class=\"token function\">syncA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">asyncA</span><span class=\"token punctuation\">(</span>syncB<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>看到这段代码已经开始焦虑了，如果简化一下：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">func <span class=\"token function\">asyncB</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callbackB</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> b\n    <span class=\"token comment\">// do something</span>\n    <span class=\"token function\">callbackB</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\nfunc <span class=\"token function\">asyncA</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callbackA</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> a\n    <span class=\"token comment\">// do something</span>\n    <span class=\"token function\">callbackA</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\nfunc <span class=\"token function\">syncA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">asyncA</span><span class=\"token punctuation\">(</span>fart <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n        printf <span class=\"token string\">\"fart is %s\"</span><span class=\"token punctuation\">,</span> fart\n        <span class=\"token function\">asyncB</span><span class=\"token punctuation\">(</span>shit <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n            printf <span class=\"token string\">\"shit is %s\"</span><span class=\"token punctuation\">,</span> shit\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>有人可以看出是现有fart还是现有shit吗…</p>\n","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<h2 id=\"相关资源\"><a href=\"#相关资源\" class=\"headerlink\" title=\"相关资源\"></a>相关资源</h2><blockquote>\n<p>主页：<a href=\"https://openjdk.org/projects/loom/\">https://openjdk.org/projects/loom/</a></p>\n<p>提案：<a href=\"http://cr.openjdk.java.net/~rpressler/loom/Loom-Proposal.html\">http://cr.openjdk.java.net/~rpressler&#x2F;loom&#x2F;Loom-Proposal.html</a></p>\n<p>预览：<a href=\"https://jdk.java.net/loom/\">https://jdk.java.net/loom/</a></p>\n</blockquote>\n<h2 id=\"EA-in-JDK19\"><a href=\"#EA-in-JDK19\" class=\"headerlink\" title=\"EA in JDK19\"></a>EA in JDK19</h2><blockquote>\n<p><a href=\"https://github.com/Attt/Loom-Preview\">https://github.com/Attt/Loom-Preview</a></p>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 创建builder</span>\n<span class=\"token class-name\">Thread<span class=\"token punctuation\">.</span>Builder<span class=\"token punctuation\">.</span>OfVirtual</span> ofVirtual <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofVirtual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// 名称，start表示种子1步进递增</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"virtual-thread-\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// 是否允许set threadLocal</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">allowSetThreadLocals</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// 是否允许使用可继承的threadLocal</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">inheritInheritableThreadLocals</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// 未捕获异常处理器</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">uncaughtExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 执行</span>\nofVirtual<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// do something</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isDaemon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isVirtual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 预设任务，返回Thread实例</span>\n<span class=\"token class-name\">Thread</span> unstarted <span class=\"token operator\">=</span> ofVirtual\n        <span class=\"token punctuation\">.</span><span class=\"token function\">unstarted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Wooooow!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 开启任务</span>\nunstarted<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 基于Executors#newThreadPerTaskExecutor，使用VirtualThreadFactory作为线程工厂</span>\n<span class=\"token comment\">// 为每个提交的任务开启一个thread，无界</span>\n<span class=\"token class-name\">ExecutorService</span> virtualThreadPerTaskExecutor <span class=\"token operator\">=</span> <span class=\"token class-name\">Executors</span><span class=\"token punctuation\">.</span><span class=\"token function\">newVirtualThreadPerTaskExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvirtualThreadPerTaskExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s-newVirtualThreadPerTaskExecutor %n\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 使用builder的设置值创建的perTaskExecutor</span>\n<span class=\"token class-name\">ExecutorService</span> perTaskExecutor <span class=\"token operator\">=</span> <span class=\"token class-name\">Executors</span><span class=\"token punctuation\">.</span><span class=\"token function\">newThreadPerTaskExecutor</span><span class=\"token punctuation\">(</span>ofVirtual<span class=\"token punctuation\">.</span><span class=\"token function\">factory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nperTaskExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s-newThreadPerTaskExecutor %n\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 结构化并发</span>\n<span class=\"token class-name\">StructuredTaskScope<span class=\"token punctuation\">.</span>ShutdownOnFailure</span> shutdownOnFailure <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StructuredTaskScope<span class=\"token punctuation\">.</span>ShutdownOnFailure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nshutdownOnFailure<span class=\"token punctuation\">.</span><span class=\"token function\">fork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"taskA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SECONDS</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error occurred in taskA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nshutdownOnFailure<span class=\"token punctuation\">.</span><span class=\"token function\">fork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"taskB...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SECONDS</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"taskB is finished.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    shutdownOnFailure<span class=\"token punctuation\">.</span><span class=\"token function\">joinUntil</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">plusSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInstant</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ZoneOffset</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UTC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TimeoutException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Benchmark\"><a href=\"#Benchmark\" class=\"headerlink\" title=\"Benchmark\"></a>Benchmark</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Benchmark</span>                                  <span class=\"token class-name\">Mode</span>  <span class=\"token class-name\">Cnt</span>     <span class=\"token class-name\">Score</span>     <span class=\"token class-name\">Error</span>   <span class=\"token class-name\">Units</span>\n<span class=\"token class-name\">ThreadThroughputBenchmark</span><span class=\"token punctuation\">.</span>platformThread  thrpt    <span class=\"token number\">5</span>    <span class=\"token number\">10.788</span> ±   <span class=\"token number\">0.677</span>  ops<span class=\"token operator\">/</span>ms\n<span class=\"token class-name\">ThreadThroughputBenchmark</span><span class=\"token punctuation\">.</span>virtualThread   thrpt    <span class=\"token number\">5</span>  <span class=\"token number\">4201.740</span> ± <span class=\"token number\">475.806</span>  ops<span class=\"token operator\">/</span>ms<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Q-amp-A\"><a href=\"#Q-amp-A\" class=\"headerlink\" title=\"Q&amp;A\"></a>Q&amp;A</h2><ol>\n<li>命名</li>\n</ol>\n<ul>\n<li><a href=\"https://mail.openjdk.org/pipermail/loom-dev/2019-November/000864.html\">Virtual Threads: A Short Note about Naming</a></li>\n</ul>\n<ol start=\"2\">\n<li>为什么不用类似于await&#x2F;async提供的协作调度？协作调度能够明确调度点在哪里，也能简化并发编程？</li>\n</ol>\n<ul>\n<li>Java已经有基于抢占式调度的线程，增加协作调度只会增加兼容问题</li>\n<li>协作调度是一种较差的调度方案，协作调度意味着每个操作都是在临界区发生的不能互相交错，明确定义了交错的点，抢占式调度正相反，明确了不能交错的地方，使得交错能够发生在其他的任何地方，对于服务端来说大多数操作对调度点并不敏感不明确的交错可以更高效，而且每一次添加调度点也需要考虑更多的事情</li>\n</ul>\n<h2 id=\"关于并发编程的吐槽：函数颜色问题\"><a href=\"#关于并发编程的吐槽：函数颜色问题\" class=\"headerlink\" title=\"关于并发编程的吐槽：函数颜色问题\"></a>关于并发编程的吐槽：函数颜色问题</h2><p><a href=\"http://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/\">what-color-is-your-function</a>，假设某种语言中一种函数是<font color='red'>红色</font>的，另一种函数是<font color='#0099ff'>蓝色</font>的：</p>\n<p>那么这种语言实际存在两种<code>function</code>关键字：<code>blue_func</code>和<code>red_func</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">blue_func <span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">...</span><span class=\"token punctuation\">&#125;</span>\n\nred_func <span class=\"token keyword\">async</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token operator\">...</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>其中，<font color='red'>红色</font>函数的结果不通过方法返回，而是传递给参数中的函数，那么就会有这样的问题：</p>\n<ul>\n<li>在<font color='red'>红色</font>函数中可以调用<font color='#0099ff'>蓝色</font>函数，因为<font color='#0099ff'>蓝色</font>函数的返回值通过方法返回能够拿到。</li>\n<li>而在<font color='#0099ff'>蓝色</font>函数中是不能轻易调用<font color='red'>红色</font>函数的，因为结果已经传递到<font color='red'>红色</font>函数的参数函数里了，在<font color='#0099ff'>蓝色</font>函数线性执行过程中不能保证能够从<font color='red'>红色</font>函数的参数函数里获取结果。</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">red_func <span class=\"token keyword\">async</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 可以调用</span>\n<span class=\"token punctuation\">&#125;</span>\n\nblue_func <span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">async</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 不能调用</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>所谓的<font color='red'>红色</font>函数就是异步函数，上面的这个“颜色问题”就是“回调地狱”(“callback hell”)的另一种感受方法😅。</p>\n<p>在函数式编程中，异步存在两个比较炸裂的问题：1. 回调地狱😅；2. 一个被广泛使用的同步函数的异步化所需要的大量的修改和重写量可以让任何一个开发直接爆炸：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">func <span class=\"token function\">syncC</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">shit</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    printf <span class=\"token string\">\"shit is %s\"</span><span class=\"token punctuation\">,</span> shit\n<span class=\"token punctuation\">&#125;</span>\n\nfunc <span class=\"token function\">asyncB</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callbackB</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> b\n    <span class=\"token comment\">// do something</span>\n    <span class=\"token function\">callbackB</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\nfunc <span class=\"token function\">syncB</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fart</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    printf <span class=\"token string\">\"fart is %s\"</span><span class=\"token punctuation\">,</span> fart\n    <span class=\"token function\">asyncB</span><span class=\"token punctuation\">(</span>syncC<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\nfunc <span class=\"token function\">asyncA</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callbackA</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> a\n    <span class=\"token comment\">// do something</span>\n    <span class=\"token function\">callbackA</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\nfunc <span class=\"token function\">syncA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">asyncA</span><span class=\"token punctuation\">(</span>syncB<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>看到这段代码已经开始焦虑了，如果简化一下：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">func <span class=\"token function\">asyncB</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callbackB</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> b\n    <span class=\"token comment\">// do something</span>\n    <span class=\"token function\">callbackB</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\nfunc <span class=\"token function\">asyncA</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callbackA</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> a\n    <span class=\"token comment\">// do something</span>\n    <span class=\"token function\">callbackA</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\nfunc <span class=\"token function\">syncA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">asyncA</span><span class=\"token punctuation\">(</span>fart <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n        printf <span class=\"token string\">\"fart is %s\"</span><span class=\"token punctuation\">,</span> fart\n        <span class=\"token function\">asyncB</span><span class=\"token punctuation\">(</span>shit <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n            printf <span class=\"token string\">\"shit is %s\"</span><span class=\"token punctuation\">,</span> shit\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>有人可以看出是现有fart还是现有shit吗…</p>\n"},{"title":"Computer Networking - Application Layer","date":"2023-03-13T15:21:31.000Z","password":"Application Layer","_content":"\n>好记性不如流水账\n\n## Principles of Network Applications\n\n应用层的程序编写不需要过多考虑网络的核心设备的运行，这是网络中各种各样应用发展快的原因。\n![](reading-memo-networking-top-down-ch1/截屏2023-03-14%2021.10.56.png)\n\n### Network Application Architectures\n\n应用层程序架构\n- client-server（中心化）\n- peer-to-peer（无中心化）\n\nclient-server架构中，通常client互相不会通信，server处于持续运行状态且拥有固定的地址（域名、IP），因此所有的client都可以轻松访问获取内容，同时为了防止单个server出现单点故障，通常会在多个data center部署多个server。\n\nP2P架构中，几乎不依赖data center中的server，不同的hosts间相互通信，称为peer。P2P架构的优势是成本低（不用专用的server）、self-scalability（自我扩展），与之相对的可靠性、安全性、性能也是其缺点。\n\n### Processes Communicating\n\n网络中讨论的process间的通讯指不同end system上的processes之间的通讯。*（这里可以复习一下本地processess间的通讯途径和实现）*\n\n**Client and Server Processes**\n\n如何定义client process和server process：\n> In the context of a communication session between a pair of processes, the pro- cess that initiates the communication (that is, initially contacts the other process at the beginning of the session) is labeled as the client. The process that waits to be contacted to begin the session is the server.\n\n为了简化模型client和server的分别只是看哪一方先发起communication session，因此在P2P架构中也有client和server，只不过peer可以扮演两种角色。（要区别“full-duplex”和“half-duplex”，全双工/半双工的概念指的是能否同时进行上下行通信，而client process和server process讨论的是角色）\n\n**The Interface Between the Process and the Computer Network**\n\nprocess通过叫做“socket”的software interface发出消息到网络（对于process来说消息给到socket之后确实就属于“网络”了，因为process并不用关心细节），也通过socket来接受消息。（这东西翻译成“套接字”是真的...)\n\nsocket是software层面的定义，实际作用是给了个入口和出口，将消息转移到下一层（通常是transport-layer）。通常transport-layer的细节实现都由OS来负责。\n\n可以这么理解：socket是OS获取打包好的application-layer消息并且进一步打包成transport-layer消息（传出）、拆解transport-layer消息取出并送达application-layer消息（传入）的API。（在transport-layer这方面，应用程序顶多只能做选择。选择比努力更...）\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-14%2021.51.57.png)\n\n**Addressing Processes**\n\nIP address确定目标host，port number确定目标host上的目标process。\n\n### Transport Services Available to Applications\n\ntransport-layer提供的服务分为四个方面：可靠数据传输、吞吐量、即时性、安全性。\n\n**Reliable Data Transfer**\n\n具体问题具体分析，比如音视频流可能不太需要过于可靠（有点数据丢失或者错误问题不大），文件传输或者邮件之类的可能就必须保证可靠性。\n\n押镖就不能把货弄丢喽，传情书就无所谓了，反正是缘分。\n\n**Throughput**\n\n对速率bitrate有保障，比如指定码率的直播推流，就需要有一定的速率保障。\n\n**Timing**\n\n即时性，即时通讯、在线游戏之类的都需要保障一定的即时性，但邮件这种肯定不需要。\n\n其实邮件也可以要，但 没必要。\n\n**Security**\n\n不只是加密，还包括了完整性验证和身份验证。\n\n总之突出一个安全放心。\n\n### Transport Services Provided by the Internet\n\n互联网提供了TCP和UDP两种协议（TM不是只有这两种！是互联网the Internet提供了这两种）。\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-14%2022.06.50.png)\n\n**TCP Services**\n\nTCP协议提供的服务：\n- Connection-oriented service\n- Reliable data transfer service\n\nconnection这个概念其实是个抽象的东西，不是说建立了connection就是千里姻缘一线牵了，不是真的有个什么东西连上了。\n\n那为啥要这个抽象的概念呢，就是为了搞事情，搞拆分、搞flow control、搞congestion control、再搞搞retransmission什么的。要让分别在两个host上的两个process之间完成基本交流通过四元组（src IP + src port + dest IP + dest port）就够了，但是如果要搞事情，就还需要记一些东西，比如接收方记录一下现在哪些segment已经送到了，发送方当然也要记录，就要有buffer来放这些记录，来记状态。\n\n所以总有个时机来创建这些个buffer，所以约定一个牵手流程（建立connection)，手一牵上那大家就准备准备要开始做笔记了。\n\n分手这笔记就可以撕了。\n\ncongestion-control mechanism，拥堵控制是用来保证整个网络的可用性和公平性。（TCP协议的研究大部分是在这个上面做文章）\n\n安全性方面TLS\n\n**UDP Services**\n\n无connection，最基础的传输层协议，除了把消息发出去，基本上只有校验数据包完整性的功能。\n\n**Services Not Provided by Internet Transport Protocols**\n\n> today’s Internet can often provide satisfactory service to time-sensitive applications, but it cannot provide any timing or throughput guarantees.\n\n互联网不提供即时性和吞吐的保障。由于网络的复杂性，每次消息都会经过多个节点多个ISP无数条线路，基于成本很难保证这两个特性。不过应用程序（end system）可以曲线救国，通过增加线路、冗余发送、压缩等手段提高即时性和吞吐。\n\n### Application-Layer Protocols\n\n一个application-layer protocol定义了：\n\n- 消息类型，请求和响应\n- 如何区分消息类型\n- 消息中各个部分的含义\n- process如何处理（接收、发送、解释）消息\n\nHTTP是RFC(Request for Comments)定义的公开协议。（当然也可以定义私有协议）\n\n## The Web and HTTP\n### Overview of HTTP\n\n基于**TCP**协议的**无状态**的*HyperText Transfer Protocol*，可靠完整由TCP来保证。（HTTP/3基于UDP，因此一些TCP保证的特性需要在上一层也就是application-layer的HTTP/3中实现）\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2010.57.16.png)\n\n### Non-Persistent and Persistent Connections\n\n**HTTP with Non-Persistent Connections**\n\n初代HTTP，每个请求都发起一次新的TCP连接，简约而不简单。\n\n**HTTP with Persistent Connections**\n\nHTTP/1.1开始，多个请求复用TCP连接，也给大家伙儿带来了HOL问题。\n\n### HTTP Message Format\n\nRFC：\n- [Hypertext Transfer Protocol -- HTTP/1.0](https://www.rfc-editor.org/rfc/rfc1945)\n- [Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing](https://www.rfc-editor.org/rfc/rfc7230)\n- [Hypertext Transfer Protocol Version 2 (HTTP/2)](https://www.rfc-editor.org/rfc/rfc7540)\n- [HTTP/2](https://www.rfc-editor.org/rfc/rfc9113)\n- [HTTP/3](https://www.rfc-editor.org/rfc/rfc9114)\n\n\n**HTTP Request Message**\n\n```\nGET /somedir/page.html HTTP/1.1 \nHost: www.someschool.edu \nConnection: close\nUser-agent: Mozilla/5.0 \nAccept-language: fr\n```\n1. HTTP消息是由ASCII文字编写\n2. 第一行是request line(请求行)：格式是 [method] [url] [protocol/version], 接下来的都是header line(头行?)\n3. Host指明了目标host的位置（这是application-layer的事情，TCP虽然已经连上了，但是由于HTTP是无状态的，不同的TCP连接可能处理完全相同的HTTP请求，那如果要做web缓存，肯定是基于这个host比较好。而且web缓存也是application-layer）\n4. Connection，close表示请求完成之后关闭连接，具体定义参照RFC：\n\n>   o  If the \"close\" connection option is present, the connection will\n>      not persist after the current response; else,\n>\n>   o  If the received protocol is HTTP/1.1 (or later), the connection\n>      will persist after the current response; else,\n>\n>   o  If the received protocol is HTTP/1.0, the \"keep-alive\" connection\n>      option is present, the recipient is not a proxy, and the recipient\n>      wishes to honor the HTTP/1.0 \"keep-alive\" mechanism, the\n>      connection will persist after the current response; otherwise,\n> \n>   o  The connection will close after the current response.\n\n1. User-agent用户代理，提供当前client的信息\n2. Accept-language表示client能够接受的内容语言\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2014.01.32.png)\n\n7. entity body是POST用的，GET方法参数是通过URL携带\n8. 最开始的RFC里URL没有规定长度，但是某些浏览器限制2000chars，且CDN也会限制URL的长度，最好短点，有话放在body说。\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2014.22.39.png)\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2014.25.06.png)\n\n**HTTP Response Message**\n\n```lua\nHTTP/1.1 200 OK\nConnection: close\nDate: Tue, 18 Aug 2015 15:44:04 GMT\nServer: Apache/2.2.3 (CentOS)\nLast-Modified: Tue, 18 Aug 2015 15:11:03 GMT \nContent-Length: 6821\nContent-Type: text/html\n(data data data data data ...)\n```\n\n1. 第一行是status line(状态行)，格式[protocol/version] [status code] + [phrase]，接下来是header line，最后是entity body\n2. Connection和request时意义一样，这里是server告诉client接下来会关闭连接\n3. Date是server发送响应的时间\n4. Server提供server的信息\n5. Last-Modified是资源最后被修改的时间（包括创建），这个对web缓存很重要\n6. Content-Length内容的长度\n7. Content-Type返回响应的资源类型\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2014.35.29.png)\n\n### User-Server Interaction: Cookies\n\nRFC:\n\n[HTTP State Management Mechanism](https://www.rfc-editor.org/rfc/rfc6265)\n\n最初设计是想用来标识用户身份，后来用于保存会话状态，本质是提供了一个手段让无状态的HTTP带上那么点状态。\n\n### Web Caching\n\n看图说话\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2020.37.43.png)\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2020.38.01.png)\n\n还是缓存的基本作用，CDN（Content Distribution Networks）也没差。\n\n**The Conditional GET**\n\n引入缓存后第一个要考虑一致性问题：\n\n1. cache向server请求时server在响应中会带上`Last-Modified`头信息，表示资源的修改时间，这个时间也会被缓存下来。\n2. 如果再次请求这个资源时，cache会发起conditional GET，头信息包含`If-Modified-Since`，这个时间就是cache中的资源时间，此时\n   1. 如果server的资源修改过，会返回新的资源响应，带上最新的Last-Modified，然后cache更新。\n   2. 如果server的资源在Last-Modified之后没有修改过，则向cache返回只包含status line和header line的响应（304 Not Modified）。 \n\n会增加一点响应时间和带宽消耗。\n\n### HTTP/2\n\n>The primary goals for HTTP/2 are to reduce perceived latency by enabling request and response multiplexing over a single TCP connection, provide request prioritization and server push, and provide efficient compression of HTTP header fields. HTTP/2 does not change HTTP methods, status codes, URLs, or header fields. Instead, HTTP/2 changes how the data is formatted and transported between the client and server.\n\n1. 在单个TCP连接上实现请求和响应的multiplexing来减少perceived latency（感知延迟）\n2. 优先级请求\n3. 服务端推送\n4. HTTP头的高效压缩\n\nHead of Line (HOL) blocking，头阻塞问题：如果多个不同的请求都经过一个TCP连接发送，但不幸的是发送队列的头部有个大对象（耗时）的请求，那么在队列后面的即使是小对象的请求也不得不等待。\n\n*这个看似总等待时间没有变化，但是会严重影响用户的感知延迟，假如一个页面上有多个请求，除了一个超级大的视频之外全部都是文字和小图片，这时候哦豁视频的响应先来了，那么在视频请求完成之前页面就是一片白*\n\nHTTP/1.1的浏览器通过多个TCP连接来缓解这个问题（说好的复用TCP呢。），而且由此方案带来另一个问题：由于TCP的公平性是基于连接的，多个TCP连接理论上可以获得更多带宽，从整个网络设计层面来看，来骗来偷袭更多的带宽这好吗这不好。\n\n*减少TCP连接其实是想节省资源(socket、内存,etc.）的占用*\n\n**HTTP/2 Framing**\n\n目标是彻底解决HOL问题，将响应数据拆分成frame，头部数据拆成一个frame，剩下的数据拆成一个或多个frames，对这些frame进行二进制编码，这样就可以交错的在一个TCP连接上传输响应。（可能带来的问题就是需要更大的buffer开销，毕竟需要等到某一个响应的所有frames都到达后才能对进行后续处理）\n\n**Response Message Prioritization and Server Pushing**\n\n优先级基本靠浏览器实现，不同的浏览器有不同的优先级策略。（体验下用chromium内核之前的edge和用了之后的edge是两个东西，edge真好用！所以我用chrome）\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2021.37.10.png)\n\nserver push需要配置实现，目的减少请求量，比如server除了响应本身请求的网页内容还可以push网页上依赖的资源\n\n举个例子，nginx配置\n```\nserver {\n    listen 443 ssl http2;\n    server_name  localhost;\n\n    ssl                      on;\n    ssl_certificate          /etc/nginx/certs/example.crt;\n    ssl_certificate_key      /etc/nginx/certs/example.key;\n\n    ssl_session_timeout  5m;\n\n    ssl_ciphers HIGH:!aNULL:!MD5;\n    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;\n    ssl_prefer_server_ciphers   on;\n\n    location / {\n      root   /usr/share/nginx/html;\n      index  index.html index.htm;\n      http2_push /style.css; -- 推送style.css\n      http2_push /example.png; -- 推送example.png\n    }\n}\n```\n请求根目录/时，server会push配置的两个资源。\n\n**HTTP/3**\n\nQUIC，基于UDP的HTTP协议，可靠性公平性都是由application-layer来实现。\n\n## Electronic Mail in the Internet\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2021.40.53.png)\n\n### SMTP\n\nSimple Mail Transfer Protocol (SMTP)，基于TCP，远古协议，比HTTP早得多，ASCII编码。\n\n### Mail Message Formats\n\n```\nFrom: alice@crepes.fr\nTo: bob@hamburger.edu\nSubject: Searching for the meaning of life.\n```\n\n### Mail Access Protocols\n\nInternet Mail Access Protocol (IMAP)，用于访问邮件服务器的协议，客户端接入用这个（省啊，HTTP有点肥大），网页上用HTTP。\n\n## DNS—The Internet’s Directory Service\n\nhostname 和 IP Address映射，将hostname转换为IP Address\n\n### Services Provided by DNS\n\n组成部分：\n- 分布式数据库\n- 可供host查询该数据库的application-layer protocol，DNS协议\n\n举例，访问一个域名的步骤：\n1. 本地运行DNS的client（这东西OS的）\n2. 浏览器访问www.xxx.com下的资源时，将www.xxx.com传递给DNS的client\n3. DNS的client向DNS的server请求www.xxx.com的IP address\n4. 浏览器收到DNS client返回的IP address，通过这个IP建立TCP连接然后发送HTTP请求\n\n比用IP直接访问肯定会增加延迟，为了减小延迟DNS服务器实际上不止一台，并且会尽量让所请求的DNS服务器更靠近client。\n\nDNS提供的服务：\n- host别名\n- 邮件服务器别名\n- 负载分布\n\n多对多的映射能力，前两个是域名-IP多对一，后面是一对多。\n\n### Overview of How DNS Works\n\n基于UDP，默认53端口。\n\n**A Distributed, Hierarchical Database**\n\nDNS是分布式服务（Distributed），同时是分层服务（Hierarchical）\n\n看图说话\n![](reading-memo-networking-top-down-ch1/截屏2023-03-16%2014.23.27.png)\n\nDNS分三类：\n- root DNS servers，根DNS服务器\n- top-level domain (TLD) DNS servers，顶级域DNS服务器\n- authoritative DNS servers，授权DNS服务器\n\n***root DNS server***\n\n全世界1000+的root DNS服务器（2020），提供下一层TLD DNS server的IP地址。\n![](reading-memo-networking-top-down-ch1/截屏2023-03-16%2014.27.20.png)\n\n***TLD DNS server***\n\n顶级域DNS服务器。com或者国家fr、jp这种级别\n\n***local DNS server***\n\n每个ISP（机构/住宅）都会有自己的local DNS。\n\nlocal DNS不在DNS分层结构中，发起DNS请求时先到local DNS：\n![](reading-memo-networking-top-down-ch1/截屏2023-03-16%2015.00.39.png)\n\n1. 本地host发起DNS查询请求到local DNS\n2. local DNS查询root DNS\n3. root DNS返回负责的TLD DNS的IP\n4. local DNS查询TLD DNS\n5. TLD DNS返回负责的authoritative DNS的IP\n6. local DNS查询authoritative DNS\n7. authoritative DNS返回请求的host的IP\n8. local DNS将IP地址返回给本地host\n\n八次请求！八次！\n\nTLD DNS不是总是有authoritative DNS的地址，还会有中间DNS。\n\nDNS查询的递归+迭代：查询local DNS是递归，因为local DNS还要查别的DNS；local DNS查别的DNS是迭代，平级的。\n\n当然理论上也可以都是递归的，实际一般不这么实现：\n![](reading-memo-networking-top-down-ch1/截屏2023-03-16%2015.16.17.png)\n\n*这种实现有个问题：图中local DNS到root DNS的请求也就是2那个请求，需要等到3456请求都完成了才能返回，root DNS在这种实现模型下负载会更高*\n\n**DNS Caching**\n\n顾名思义。\n\n### DNS Records and Messages\n\nresource record(RR)的格式：\n```\n(Name, Value, Type, TTL)\n```\n\nname和value的含义要看type是什么：\n- Type=A\n  - name是hostname\n  - value是IPv4\n  - 比如(relay1.bar.foo.com, 145.37.93.126, A)\n- Type=NS\n  - name是domain\n  - value是负责解析这个domain的dns的hostname\n  - 比如(foo.com, dns.foo.com, NS)\n- Type=CNAME\n  - name是别名hostname（aliased hostname）\n  - value是hostname\n  - 比如(foo.com, relay1.bar.foo.com, CNAME)\n- Type=MX（看起来和CNAME一样，但是单独有这个类型的的话，邮件服务器的别名就可以跟CNAME的别名重复了）\n  - name是别名hostname\n  - value是邮件的hostname\n  - 比如(foo.com, mail.bar.foo.com, MX)\n\nA记录是存在于authoritative DNS上的，比如aaa.always.fuxk.com，如果dns.fuxk.com不是这个domain的authoritative DNS，那么他会有一条NS记录指向比如说dns.always.fuxk.com，而在dns.always.fuxk.com上面应该就是aaa.always.fuxk.com对应于某个IP的A记录了。（如果是IPv6，那就是AAAA记录，都差不多。）\n\n**DNS Messages**\n\n看图说话\n![](reading-memo-networking-top-down-ch1/截屏2023-03-16%2020.41.47.png)\n\n查询和回复的message格式一致\n\n- 最前面的header section占12 bytes\n  - identification用来关联查询和回复\n  - flags\n    - 1 bit表示是查询（0）还是回复（1）\n    - 1 bit表示回复的消息是authoritative DNS回复的（1）\n    - 1 bit表示client要求DNS server在查不到的时候进行递归查询（1）\n    - 1 bit表示DNS server是（1）否支持递归查询\n  - 4个number表示question section的四种出现次数\n- question section部分包含查询的name和type，比如aaa.bbb.com, A\n- answer section部分包含回复的value、type、TTL，可以有多条\n- authority section是authoritative DNS回复的内容（贵宾待遇。）\n- additional section包含额外的信息，比如查询MX记录，回复在answer section的是MX对应的hostname记录，那这里就可能是这个hostname对应的IP的A记录。\n\n**Inserting Records into the DNS Database**\n\n注册域名的时候，域名注册商会将这个域名写到DNS，一般的域名注册商也提供authoritative DNS，大多数会有两个一个主要的一个备用的。\n比如dns1.aaa.com和dns2.aaa.com，然后要配置自己刚注册域名的A记录（至少有个A记录），最后提供这个DNS的服务商会把记录写到TLD DNS里：\n```\n(你的域名.com, dns1.aaa.com, NS) \n(dns1.aaa.com, 212.212.212.1, A)\n```\n\n最后来一点小小的震撼：\n[2014年中国大陆网络异常事件](https://zh.wikipedia.org/zh-hans/2014%E5%B9%B4%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86%E7%BD%91%E7%BB%9C%E5%BC%82%E5%B8%B8%E4%BA%8B%E4%BB%B6)\n\n[域名服务器缓存污染](https://zh.wikipedia.org/zh-hans/%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BC%93%E5%AD%98%E6%B1%A1%E6%9F%93)\n\n所以说年轻人还是要学习一个\n\n## Peer-to-Peer File Distribution\n\n对等网络\n\n熟悉的协议：BT\n\n那可太熟悉了。\n\n**Scalability of P2P Architectures**\n\n扩展性，不同与server-client模式，P2P随着参与peer的增多不会明显增加分发耗时。\n\n**BitTorrent**\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-16%2021.46.11.png)\n\ntrade algorithm（tit-for-tat）：\n- 参与某个torrent下载分发的peer会向tracker服务器上报自己的存在。新加入的peer会从tracker获取正在分发的peer list，并尝试建立连接。\n- peer会从连接的peers获取对方的chunk信息，优先下载那些比较稀有的chunk。\n- 某些个peer申请下载chunk的时候，通过这个peer给自己提供chunk的速率来决定，优先选几个速率高的。\n- 每隔一段时间，重新测量一下速率。\n- 同样的隔一段时间，找一个随机的peer，向这个peer传他需要的chunk，假如在这个peer中自己变成了他的前几个最高速率的peer之一，那这个peer也会反向传chunk过来，也就有可能变成这边新的最高速率的peer。等于说是打破了江局。\n\nDHT网络\n\n## Video Streaming and Content Distribution Networks\n### Internet Video\n\n### HTTP Streaming and DASH\n\nDynamic Adaptive Streaming over HTTP (DASH)\n\n视频的码率，通过对原始视频进行不同参数的压缩，产生多个码率的视频，根据变化的网络条件分发不同码率的视频保证流畅。\n\n### Content Distribution Networks\n\n1. 人民日益增长的网络请求和server捉急的带宽之间的矛盾\n2. 可以增加server或者带宽，得加钱\n3. 大部分资源会被重复请求\n\nContent Distribution Networks (CDNs)这年头几乎没有不用的。可以看做是一个分布式静态资源的缓存，有效的减轻了server的压力。\n\n两个部署理念：\n- Enter Deep：把CDN部署到ISP内部，离用户越近越好\n- Bring Home：把CDN部署在ISP外部比如IXP，每个部署点搞一个集群\n\n各有好处。第一个有点贵，ISP那得多少个啊，第二个会比第一多些延迟，毕竟远了点。\n\n**CDN Operation**\n\n1. 决定具体某个CDN集群\n2. 将请求发送到这个CDN集群的server\n\n一种可行的方法：对静态资源的请求通过DNS解析到CDN\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-16%2022.17.56.png)\n\n**Cluster Selection Strategies**\n\n集群选择策略：\n- geographically closest，地理优先，就是用地理库找离Local DNS最近的，不过不一定地理最近的就是网络最近，而且Local DNS也可能距离client较远。\n- real-time measurements，实时测量，有些测量的消息不一定会被响应（ICMP过滤）\n\n### Case Studies: Netflix and YouTube\n\n激动人心的案例教学\n\n**Netflix**\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-16%2022.29.19.png)\n\n全用AWS，但CDN是私有搭建的\n- Content ingestion. 把原始内容上传到Amazon cloud\n- Content processing. 转码，生产不同码率的内容\n- Uploading versions to its CDN. 上传到CDN\n\n关于CDN\n- 网飞在200多个IXP点都有自己的机架，几百个ISP也有自己的机架，Enter Deep和Bring Home结合。\n- 不使用pull的缓存方式，而是在非高峰时期上传内容到CDN。没有足够容量的点就上传热点内容。\n- 由于简化了CDN的设计（只有视频），不需要通过DNS的方式转发到CDN。在AWS中的netflix服务会直接让client去CDN的域名请求。\n\n**YouTube**\n\n- 也是用的私人CDN，基本和网飞的部署策略一样。中西药结合疗效好。\n- 区别是使用了pull的缓存方式，访问的内容miss的时候CDN会去server拉取内容。分配CDN的方式是DNS转发，且基于RTT的测量来分配具体的集群，如果负载高可能会调整分配到远一点的集群。\n- 不是用自适应流媒体，而是要用户自己选择不同的分辨率（码率）。（YouTube看起来也像是自适应，但应该是client完成的，实际上可供消费的不同码率视频版本就那几个，不需要自适应的那么多。网飞的那个自适应可是真的分辨率连选都不让选的。）\n","source":"_posts/reading-memo-networking-top-down-ch1.md","raw":"---\ntitle: Computer Networking - Application Layer\ndate: 2023-03-13 23:21:31\ncategories:\n    - 基础姿势\n    - 读书笔记\ntags:\n    - networking\n    - http\npassword: Application Layer\n---\n\n>好记性不如流水账\n\n## Principles of Network Applications\n\n应用层的程序编写不需要过多考虑网络的核心设备的运行，这是网络中各种各样应用发展快的原因。\n![](reading-memo-networking-top-down-ch1/截屏2023-03-14%2021.10.56.png)\n\n### Network Application Architectures\n\n应用层程序架构\n- client-server（中心化）\n- peer-to-peer（无中心化）\n\nclient-server架构中，通常client互相不会通信，server处于持续运行状态且拥有固定的地址（域名、IP），因此所有的client都可以轻松访问获取内容，同时为了防止单个server出现单点故障，通常会在多个data center部署多个server。\n\nP2P架构中，几乎不依赖data center中的server，不同的hosts间相互通信，称为peer。P2P架构的优势是成本低（不用专用的server）、self-scalability（自我扩展），与之相对的可靠性、安全性、性能也是其缺点。\n\n### Processes Communicating\n\n网络中讨论的process间的通讯指不同end system上的processes之间的通讯。*（这里可以复习一下本地processess间的通讯途径和实现）*\n\n**Client and Server Processes**\n\n如何定义client process和server process：\n> In the context of a communication session between a pair of processes, the pro- cess that initiates the communication (that is, initially contacts the other process at the beginning of the session) is labeled as the client. The process that waits to be contacted to begin the session is the server.\n\n为了简化模型client和server的分别只是看哪一方先发起communication session，因此在P2P架构中也有client和server，只不过peer可以扮演两种角色。（要区别“full-duplex”和“half-duplex”，全双工/半双工的概念指的是能否同时进行上下行通信，而client process和server process讨论的是角色）\n\n**The Interface Between the Process and the Computer Network**\n\nprocess通过叫做“socket”的software interface发出消息到网络（对于process来说消息给到socket之后确实就属于“网络”了，因为process并不用关心细节），也通过socket来接受消息。（这东西翻译成“套接字”是真的...)\n\nsocket是software层面的定义，实际作用是给了个入口和出口，将消息转移到下一层（通常是transport-layer）。通常transport-layer的细节实现都由OS来负责。\n\n可以这么理解：socket是OS获取打包好的application-layer消息并且进一步打包成transport-layer消息（传出）、拆解transport-layer消息取出并送达application-layer消息（传入）的API。（在transport-layer这方面，应用程序顶多只能做选择。选择比努力更...）\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-14%2021.51.57.png)\n\n**Addressing Processes**\n\nIP address确定目标host，port number确定目标host上的目标process。\n\n### Transport Services Available to Applications\n\ntransport-layer提供的服务分为四个方面：可靠数据传输、吞吐量、即时性、安全性。\n\n**Reliable Data Transfer**\n\n具体问题具体分析，比如音视频流可能不太需要过于可靠（有点数据丢失或者错误问题不大），文件传输或者邮件之类的可能就必须保证可靠性。\n\n押镖就不能把货弄丢喽，传情书就无所谓了，反正是缘分。\n\n**Throughput**\n\n对速率bitrate有保障，比如指定码率的直播推流，就需要有一定的速率保障。\n\n**Timing**\n\n即时性，即时通讯、在线游戏之类的都需要保障一定的即时性，但邮件这种肯定不需要。\n\n其实邮件也可以要，但 没必要。\n\n**Security**\n\n不只是加密，还包括了完整性验证和身份验证。\n\n总之突出一个安全放心。\n\n### Transport Services Provided by the Internet\n\n互联网提供了TCP和UDP两种协议（TM不是只有这两种！是互联网the Internet提供了这两种）。\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-14%2022.06.50.png)\n\n**TCP Services**\n\nTCP协议提供的服务：\n- Connection-oriented service\n- Reliable data transfer service\n\nconnection这个概念其实是个抽象的东西，不是说建立了connection就是千里姻缘一线牵了，不是真的有个什么东西连上了。\n\n那为啥要这个抽象的概念呢，就是为了搞事情，搞拆分、搞flow control、搞congestion control、再搞搞retransmission什么的。要让分别在两个host上的两个process之间完成基本交流通过四元组（src IP + src port + dest IP + dest port）就够了，但是如果要搞事情，就还需要记一些东西，比如接收方记录一下现在哪些segment已经送到了，发送方当然也要记录，就要有buffer来放这些记录，来记状态。\n\n所以总有个时机来创建这些个buffer，所以约定一个牵手流程（建立connection)，手一牵上那大家就准备准备要开始做笔记了。\n\n分手这笔记就可以撕了。\n\ncongestion-control mechanism，拥堵控制是用来保证整个网络的可用性和公平性。（TCP协议的研究大部分是在这个上面做文章）\n\n安全性方面TLS\n\n**UDP Services**\n\n无connection，最基础的传输层协议，除了把消息发出去，基本上只有校验数据包完整性的功能。\n\n**Services Not Provided by Internet Transport Protocols**\n\n> today’s Internet can often provide satisfactory service to time-sensitive applications, but it cannot provide any timing or throughput guarantees.\n\n互联网不提供即时性和吞吐的保障。由于网络的复杂性，每次消息都会经过多个节点多个ISP无数条线路，基于成本很难保证这两个特性。不过应用程序（end system）可以曲线救国，通过增加线路、冗余发送、压缩等手段提高即时性和吞吐。\n\n### Application-Layer Protocols\n\n一个application-layer protocol定义了：\n\n- 消息类型，请求和响应\n- 如何区分消息类型\n- 消息中各个部分的含义\n- process如何处理（接收、发送、解释）消息\n\nHTTP是RFC(Request for Comments)定义的公开协议。（当然也可以定义私有协议）\n\n## The Web and HTTP\n### Overview of HTTP\n\n基于**TCP**协议的**无状态**的*HyperText Transfer Protocol*，可靠完整由TCP来保证。（HTTP/3基于UDP，因此一些TCP保证的特性需要在上一层也就是application-layer的HTTP/3中实现）\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2010.57.16.png)\n\n### Non-Persistent and Persistent Connections\n\n**HTTP with Non-Persistent Connections**\n\n初代HTTP，每个请求都发起一次新的TCP连接，简约而不简单。\n\n**HTTP with Persistent Connections**\n\nHTTP/1.1开始，多个请求复用TCP连接，也给大家伙儿带来了HOL问题。\n\n### HTTP Message Format\n\nRFC：\n- [Hypertext Transfer Protocol -- HTTP/1.0](https://www.rfc-editor.org/rfc/rfc1945)\n- [Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing](https://www.rfc-editor.org/rfc/rfc7230)\n- [Hypertext Transfer Protocol Version 2 (HTTP/2)](https://www.rfc-editor.org/rfc/rfc7540)\n- [HTTP/2](https://www.rfc-editor.org/rfc/rfc9113)\n- [HTTP/3](https://www.rfc-editor.org/rfc/rfc9114)\n\n\n**HTTP Request Message**\n\n```\nGET /somedir/page.html HTTP/1.1 \nHost: www.someschool.edu \nConnection: close\nUser-agent: Mozilla/5.0 \nAccept-language: fr\n```\n1. HTTP消息是由ASCII文字编写\n2. 第一行是request line(请求行)：格式是 [method] [url] [protocol/version], 接下来的都是header line(头行?)\n3. Host指明了目标host的位置（这是application-layer的事情，TCP虽然已经连上了，但是由于HTTP是无状态的，不同的TCP连接可能处理完全相同的HTTP请求，那如果要做web缓存，肯定是基于这个host比较好。而且web缓存也是application-layer）\n4. Connection，close表示请求完成之后关闭连接，具体定义参照RFC：\n\n>   o  If the \"close\" connection option is present, the connection will\n>      not persist after the current response; else,\n>\n>   o  If the received protocol is HTTP/1.1 (or later), the connection\n>      will persist after the current response; else,\n>\n>   o  If the received protocol is HTTP/1.0, the \"keep-alive\" connection\n>      option is present, the recipient is not a proxy, and the recipient\n>      wishes to honor the HTTP/1.0 \"keep-alive\" mechanism, the\n>      connection will persist after the current response; otherwise,\n> \n>   o  The connection will close after the current response.\n\n1. User-agent用户代理，提供当前client的信息\n2. Accept-language表示client能够接受的内容语言\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2014.01.32.png)\n\n7. entity body是POST用的，GET方法参数是通过URL携带\n8. 最开始的RFC里URL没有规定长度，但是某些浏览器限制2000chars，且CDN也会限制URL的长度，最好短点，有话放在body说。\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2014.22.39.png)\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2014.25.06.png)\n\n**HTTP Response Message**\n\n```lua\nHTTP/1.1 200 OK\nConnection: close\nDate: Tue, 18 Aug 2015 15:44:04 GMT\nServer: Apache/2.2.3 (CentOS)\nLast-Modified: Tue, 18 Aug 2015 15:11:03 GMT \nContent-Length: 6821\nContent-Type: text/html\n(data data data data data ...)\n```\n\n1. 第一行是status line(状态行)，格式[protocol/version] [status code] + [phrase]，接下来是header line，最后是entity body\n2. Connection和request时意义一样，这里是server告诉client接下来会关闭连接\n3. Date是server发送响应的时间\n4. Server提供server的信息\n5. Last-Modified是资源最后被修改的时间（包括创建），这个对web缓存很重要\n6. Content-Length内容的长度\n7. Content-Type返回响应的资源类型\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2014.35.29.png)\n\n### User-Server Interaction: Cookies\n\nRFC:\n\n[HTTP State Management Mechanism](https://www.rfc-editor.org/rfc/rfc6265)\n\n最初设计是想用来标识用户身份，后来用于保存会话状态，本质是提供了一个手段让无状态的HTTP带上那么点状态。\n\n### Web Caching\n\n看图说话\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2020.37.43.png)\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2020.38.01.png)\n\n还是缓存的基本作用，CDN（Content Distribution Networks）也没差。\n\n**The Conditional GET**\n\n引入缓存后第一个要考虑一致性问题：\n\n1. cache向server请求时server在响应中会带上`Last-Modified`头信息，表示资源的修改时间，这个时间也会被缓存下来。\n2. 如果再次请求这个资源时，cache会发起conditional GET，头信息包含`If-Modified-Since`，这个时间就是cache中的资源时间，此时\n   1. 如果server的资源修改过，会返回新的资源响应，带上最新的Last-Modified，然后cache更新。\n   2. 如果server的资源在Last-Modified之后没有修改过，则向cache返回只包含status line和header line的响应（304 Not Modified）。 \n\n会增加一点响应时间和带宽消耗。\n\n### HTTP/2\n\n>The primary goals for HTTP/2 are to reduce perceived latency by enabling request and response multiplexing over a single TCP connection, provide request prioritization and server push, and provide efficient compression of HTTP header fields. HTTP/2 does not change HTTP methods, status codes, URLs, or header fields. Instead, HTTP/2 changes how the data is formatted and transported between the client and server.\n\n1. 在单个TCP连接上实现请求和响应的multiplexing来减少perceived latency（感知延迟）\n2. 优先级请求\n3. 服务端推送\n4. HTTP头的高效压缩\n\nHead of Line (HOL) blocking，头阻塞问题：如果多个不同的请求都经过一个TCP连接发送，但不幸的是发送队列的头部有个大对象（耗时）的请求，那么在队列后面的即使是小对象的请求也不得不等待。\n\n*这个看似总等待时间没有变化，但是会严重影响用户的感知延迟，假如一个页面上有多个请求，除了一个超级大的视频之外全部都是文字和小图片，这时候哦豁视频的响应先来了，那么在视频请求完成之前页面就是一片白*\n\nHTTP/1.1的浏览器通过多个TCP连接来缓解这个问题（说好的复用TCP呢。），而且由此方案带来另一个问题：由于TCP的公平性是基于连接的，多个TCP连接理论上可以获得更多带宽，从整个网络设计层面来看，来骗来偷袭更多的带宽这好吗这不好。\n\n*减少TCP连接其实是想节省资源(socket、内存,etc.）的占用*\n\n**HTTP/2 Framing**\n\n目标是彻底解决HOL问题，将响应数据拆分成frame，头部数据拆成一个frame，剩下的数据拆成一个或多个frames，对这些frame进行二进制编码，这样就可以交错的在一个TCP连接上传输响应。（可能带来的问题就是需要更大的buffer开销，毕竟需要等到某一个响应的所有frames都到达后才能对进行后续处理）\n\n**Response Message Prioritization and Server Pushing**\n\n优先级基本靠浏览器实现，不同的浏览器有不同的优先级策略。（体验下用chromium内核之前的edge和用了之后的edge是两个东西，edge真好用！所以我用chrome）\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2021.37.10.png)\n\nserver push需要配置实现，目的减少请求量，比如server除了响应本身请求的网页内容还可以push网页上依赖的资源\n\n举个例子，nginx配置\n```\nserver {\n    listen 443 ssl http2;\n    server_name  localhost;\n\n    ssl                      on;\n    ssl_certificate          /etc/nginx/certs/example.crt;\n    ssl_certificate_key      /etc/nginx/certs/example.key;\n\n    ssl_session_timeout  5m;\n\n    ssl_ciphers HIGH:!aNULL:!MD5;\n    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;\n    ssl_prefer_server_ciphers   on;\n\n    location / {\n      root   /usr/share/nginx/html;\n      index  index.html index.htm;\n      http2_push /style.css; -- 推送style.css\n      http2_push /example.png; -- 推送example.png\n    }\n}\n```\n请求根目录/时，server会push配置的两个资源。\n\n**HTTP/3**\n\nQUIC，基于UDP的HTTP协议，可靠性公平性都是由application-layer来实现。\n\n## Electronic Mail in the Internet\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-15%2021.40.53.png)\n\n### SMTP\n\nSimple Mail Transfer Protocol (SMTP)，基于TCP，远古协议，比HTTP早得多，ASCII编码。\n\n### Mail Message Formats\n\n```\nFrom: alice@crepes.fr\nTo: bob@hamburger.edu\nSubject: Searching for the meaning of life.\n```\n\n### Mail Access Protocols\n\nInternet Mail Access Protocol (IMAP)，用于访问邮件服务器的协议，客户端接入用这个（省啊，HTTP有点肥大），网页上用HTTP。\n\n## DNS—The Internet’s Directory Service\n\nhostname 和 IP Address映射，将hostname转换为IP Address\n\n### Services Provided by DNS\n\n组成部分：\n- 分布式数据库\n- 可供host查询该数据库的application-layer protocol，DNS协议\n\n举例，访问一个域名的步骤：\n1. 本地运行DNS的client（这东西OS的）\n2. 浏览器访问www.xxx.com下的资源时，将www.xxx.com传递给DNS的client\n3. DNS的client向DNS的server请求www.xxx.com的IP address\n4. 浏览器收到DNS client返回的IP address，通过这个IP建立TCP连接然后发送HTTP请求\n\n比用IP直接访问肯定会增加延迟，为了减小延迟DNS服务器实际上不止一台，并且会尽量让所请求的DNS服务器更靠近client。\n\nDNS提供的服务：\n- host别名\n- 邮件服务器别名\n- 负载分布\n\n多对多的映射能力，前两个是域名-IP多对一，后面是一对多。\n\n### Overview of How DNS Works\n\n基于UDP，默认53端口。\n\n**A Distributed, Hierarchical Database**\n\nDNS是分布式服务（Distributed），同时是分层服务（Hierarchical）\n\n看图说话\n![](reading-memo-networking-top-down-ch1/截屏2023-03-16%2014.23.27.png)\n\nDNS分三类：\n- root DNS servers，根DNS服务器\n- top-level domain (TLD) DNS servers，顶级域DNS服务器\n- authoritative DNS servers，授权DNS服务器\n\n***root DNS server***\n\n全世界1000+的root DNS服务器（2020），提供下一层TLD DNS server的IP地址。\n![](reading-memo-networking-top-down-ch1/截屏2023-03-16%2014.27.20.png)\n\n***TLD DNS server***\n\n顶级域DNS服务器。com或者国家fr、jp这种级别\n\n***local DNS server***\n\n每个ISP（机构/住宅）都会有自己的local DNS。\n\nlocal DNS不在DNS分层结构中，发起DNS请求时先到local DNS：\n![](reading-memo-networking-top-down-ch1/截屏2023-03-16%2015.00.39.png)\n\n1. 本地host发起DNS查询请求到local DNS\n2. local DNS查询root DNS\n3. root DNS返回负责的TLD DNS的IP\n4. local DNS查询TLD DNS\n5. TLD DNS返回负责的authoritative DNS的IP\n6. local DNS查询authoritative DNS\n7. authoritative DNS返回请求的host的IP\n8. local DNS将IP地址返回给本地host\n\n八次请求！八次！\n\nTLD DNS不是总是有authoritative DNS的地址，还会有中间DNS。\n\nDNS查询的递归+迭代：查询local DNS是递归，因为local DNS还要查别的DNS；local DNS查别的DNS是迭代，平级的。\n\n当然理论上也可以都是递归的，实际一般不这么实现：\n![](reading-memo-networking-top-down-ch1/截屏2023-03-16%2015.16.17.png)\n\n*这种实现有个问题：图中local DNS到root DNS的请求也就是2那个请求，需要等到3456请求都完成了才能返回，root DNS在这种实现模型下负载会更高*\n\n**DNS Caching**\n\n顾名思义。\n\n### DNS Records and Messages\n\nresource record(RR)的格式：\n```\n(Name, Value, Type, TTL)\n```\n\nname和value的含义要看type是什么：\n- Type=A\n  - name是hostname\n  - value是IPv4\n  - 比如(relay1.bar.foo.com, 145.37.93.126, A)\n- Type=NS\n  - name是domain\n  - value是负责解析这个domain的dns的hostname\n  - 比如(foo.com, dns.foo.com, NS)\n- Type=CNAME\n  - name是别名hostname（aliased hostname）\n  - value是hostname\n  - 比如(foo.com, relay1.bar.foo.com, CNAME)\n- Type=MX（看起来和CNAME一样，但是单独有这个类型的的话，邮件服务器的别名就可以跟CNAME的别名重复了）\n  - name是别名hostname\n  - value是邮件的hostname\n  - 比如(foo.com, mail.bar.foo.com, MX)\n\nA记录是存在于authoritative DNS上的，比如aaa.always.fuxk.com，如果dns.fuxk.com不是这个domain的authoritative DNS，那么他会有一条NS记录指向比如说dns.always.fuxk.com，而在dns.always.fuxk.com上面应该就是aaa.always.fuxk.com对应于某个IP的A记录了。（如果是IPv6，那就是AAAA记录，都差不多。）\n\n**DNS Messages**\n\n看图说话\n![](reading-memo-networking-top-down-ch1/截屏2023-03-16%2020.41.47.png)\n\n查询和回复的message格式一致\n\n- 最前面的header section占12 bytes\n  - identification用来关联查询和回复\n  - flags\n    - 1 bit表示是查询（0）还是回复（1）\n    - 1 bit表示回复的消息是authoritative DNS回复的（1）\n    - 1 bit表示client要求DNS server在查不到的时候进行递归查询（1）\n    - 1 bit表示DNS server是（1）否支持递归查询\n  - 4个number表示question section的四种出现次数\n- question section部分包含查询的name和type，比如aaa.bbb.com, A\n- answer section部分包含回复的value、type、TTL，可以有多条\n- authority section是authoritative DNS回复的内容（贵宾待遇。）\n- additional section包含额外的信息，比如查询MX记录，回复在answer section的是MX对应的hostname记录，那这里就可能是这个hostname对应的IP的A记录。\n\n**Inserting Records into the DNS Database**\n\n注册域名的时候，域名注册商会将这个域名写到DNS，一般的域名注册商也提供authoritative DNS，大多数会有两个一个主要的一个备用的。\n比如dns1.aaa.com和dns2.aaa.com，然后要配置自己刚注册域名的A记录（至少有个A记录），最后提供这个DNS的服务商会把记录写到TLD DNS里：\n```\n(你的域名.com, dns1.aaa.com, NS) \n(dns1.aaa.com, 212.212.212.1, A)\n```\n\n最后来一点小小的震撼：\n[2014年中国大陆网络异常事件](https://zh.wikipedia.org/zh-hans/2014%E5%B9%B4%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86%E7%BD%91%E7%BB%9C%E5%BC%82%E5%B8%B8%E4%BA%8B%E4%BB%B6)\n\n[域名服务器缓存污染](https://zh.wikipedia.org/zh-hans/%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BC%93%E5%AD%98%E6%B1%A1%E6%9F%93)\n\n所以说年轻人还是要学习一个\n\n## Peer-to-Peer File Distribution\n\n对等网络\n\n熟悉的协议：BT\n\n那可太熟悉了。\n\n**Scalability of P2P Architectures**\n\n扩展性，不同与server-client模式，P2P随着参与peer的增多不会明显增加分发耗时。\n\n**BitTorrent**\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-16%2021.46.11.png)\n\ntrade algorithm（tit-for-tat）：\n- 参与某个torrent下载分发的peer会向tracker服务器上报自己的存在。新加入的peer会从tracker获取正在分发的peer list，并尝试建立连接。\n- peer会从连接的peers获取对方的chunk信息，优先下载那些比较稀有的chunk。\n- 某些个peer申请下载chunk的时候，通过这个peer给自己提供chunk的速率来决定，优先选几个速率高的。\n- 每隔一段时间，重新测量一下速率。\n- 同样的隔一段时间，找一个随机的peer，向这个peer传他需要的chunk，假如在这个peer中自己变成了他的前几个最高速率的peer之一，那这个peer也会反向传chunk过来，也就有可能变成这边新的最高速率的peer。等于说是打破了江局。\n\nDHT网络\n\n## Video Streaming and Content Distribution Networks\n### Internet Video\n\n### HTTP Streaming and DASH\n\nDynamic Adaptive Streaming over HTTP (DASH)\n\n视频的码率，通过对原始视频进行不同参数的压缩，产生多个码率的视频，根据变化的网络条件分发不同码率的视频保证流畅。\n\n### Content Distribution Networks\n\n1. 人民日益增长的网络请求和server捉急的带宽之间的矛盾\n2. 可以增加server或者带宽，得加钱\n3. 大部分资源会被重复请求\n\nContent Distribution Networks (CDNs)这年头几乎没有不用的。可以看做是一个分布式静态资源的缓存，有效的减轻了server的压力。\n\n两个部署理念：\n- Enter Deep：把CDN部署到ISP内部，离用户越近越好\n- Bring Home：把CDN部署在ISP外部比如IXP，每个部署点搞一个集群\n\n各有好处。第一个有点贵，ISP那得多少个啊，第二个会比第一多些延迟，毕竟远了点。\n\n**CDN Operation**\n\n1. 决定具体某个CDN集群\n2. 将请求发送到这个CDN集群的server\n\n一种可行的方法：对静态资源的请求通过DNS解析到CDN\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-16%2022.17.56.png)\n\n**Cluster Selection Strategies**\n\n集群选择策略：\n- geographically closest，地理优先，就是用地理库找离Local DNS最近的，不过不一定地理最近的就是网络最近，而且Local DNS也可能距离client较远。\n- real-time measurements，实时测量，有些测量的消息不一定会被响应（ICMP过滤）\n\n### Case Studies: Netflix and YouTube\n\n激动人心的案例教学\n\n**Netflix**\n\n![](reading-memo-networking-top-down-ch1/截屏2023-03-16%2022.29.19.png)\n\n全用AWS，但CDN是私有搭建的\n- Content ingestion. 把原始内容上传到Amazon cloud\n- Content processing. 转码，生产不同码率的内容\n- Uploading versions to its CDN. 上传到CDN\n\n关于CDN\n- 网飞在200多个IXP点都有自己的机架，几百个ISP也有自己的机架，Enter Deep和Bring Home结合。\n- 不使用pull的缓存方式，而是在非高峰时期上传内容到CDN。没有足够容量的点就上传热点内容。\n- 由于简化了CDN的设计（只有视频），不需要通过DNS的方式转发到CDN。在AWS中的netflix服务会直接让client去CDN的域名请求。\n\n**YouTube**\n\n- 也是用的私人CDN，基本和网飞的部署策略一样。中西药结合疗效好。\n- 区别是使用了pull的缓存方式，访问的内容miss的时候CDN会去server拉取内容。分配CDN的方式是DNS转发，且基于RTT的测量来分配具体的集群，如果负载高可能会调整分配到远一点的集群。\n- 不是用自适应流媒体，而是要用户自己选择不同的分辨率（码率）。（YouTube看起来也像是自适应，但应该是client完成的，实际上可供消费的不同码率视频版本就那几个，不需要自适应的那么多。网飞的那个自适应可是真的分辨率连选都不让选的。）\n","slug":"reading-memo-networking-top-down-ch1","published":1,"updated":"2023-03-17T07:54:00.783Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdtg004mxtuj41yw3q6u","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"パスワードが不一致。\" data-whm=\"不具合のため、一時的に復号化されます。\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"17d775bf96b4fd99210e1cc4e9d34d16784d626fe118282440b017d1c26b50ac\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">これは暗号化されている内容です。</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"これは暗号化されている内容です。","more":"これは暗号化されている内容です。","origin":"<blockquote>\n<p>好记性不如流水账</p>\n</blockquote>\n<h2 id=\"Principles-of-Network-Applications\"><a href=\"#Principles-of-Network-Applications\" class=\"headerlink\" title=\"Principles of Network Applications\"></a>Principles of Network Applications</h2><p>应用层的程序编写不需要过多考虑网络的核心设备的运行，这是网络中各种各样应用发展快的原因。<br><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-14%2021.10.56.png\"></p>\n<h3 id=\"Network-Application-Architectures\"><a href=\"#Network-Application-Architectures\" class=\"headerlink\" title=\"Network Application Architectures\"></a>Network Application Architectures</h3><p>应用层程序架构</p>\n<ul>\n<li>client-server（中心化）</li>\n<li>peer-to-peer（无中心化）</li>\n</ul>\n<p>client-server架构中，通常client互相不会通信，server处于持续运行状态且拥有固定的地址（域名、IP），因此所有的client都可以轻松访问获取内容，同时为了防止单个server出现单点故障，通常会在多个data center部署多个server。</p>\n<p>P2P架构中，几乎不依赖data center中的server，不同的hosts间相互通信，称为peer。P2P架构的优势是成本低（不用专用的server）、self-scalability（自我扩展），与之相对的可靠性、安全性、性能也是其缺点。</p>\n<h3 id=\"Processes-Communicating\"><a href=\"#Processes-Communicating\" class=\"headerlink\" title=\"Processes Communicating\"></a>Processes Communicating</h3><p>网络中讨论的process间的通讯指不同end system上的processes之间的通讯。<em>（这里可以复习一下本地processess间的通讯途径和实现）</em></p>\n<p><strong>Client and Server Processes</strong></p>\n<p>如何定义client process和server process：</p>\n<blockquote>\n<p>In the context of a communication session between a pair of processes, the pro- cess that initiates the communication (that is, initially contacts the other process at the beginning of the session) is labeled as the client. The process that waits to be contacted to begin the session is the server.</p>\n</blockquote>\n<p>为了简化模型client和server的分别只是看哪一方先发起communication session，因此在P2P架构中也有client和server，只不过peer可以扮演两种角色。（要区别“full-duplex”和“half-duplex”，全双工&#x2F;半双工的概念指的是能否同时进行上下行通信，而client process和server process讨论的是角色）</p>\n<p><strong>The Interface Between the Process and the Computer Network</strong></p>\n<p>process通过叫做“socket”的software interface发出消息到网络（对于process来说消息给到socket之后确实就属于“网络”了，因为process并不用关心细节），也通过socket来接受消息。（这东西翻译成“套接字”是真的…)</p>\n<p>socket是software层面的定义，实际作用是给了个入口和出口，将消息转移到下一层（通常是transport-layer）。通常transport-layer的细节实现都由OS来负责。</p>\n<p>可以这么理解：socket是OS获取打包好的application-layer消息并且进一步打包成transport-layer消息（传出）、拆解transport-layer消息取出并送达application-layer消息（传入）的API。（在transport-layer这方面，应用程序顶多只能做选择。选择比努力更…）</p>\n<p><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-14%2021.51.57.png\"></p>\n<p><strong>Addressing Processes</strong></p>\n<p>IP address确定目标host，port number确定目标host上的目标process。</p>\n<h3 id=\"Transport-Services-Available-to-Applications\"><a href=\"#Transport-Services-Available-to-Applications\" class=\"headerlink\" title=\"Transport Services Available to Applications\"></a>Transport Services Available to Applications</h3><p>transport-layer提供的服务分为四个方面：可靠数据传输、吞吐量、即时性、安全性。</p>\n<p><strong>Reliable Data Transfer</strong></p>\n<p>具体问题具体分析，比如音视频流可能不太需要过于可靠（有点数据丢失或者错误问题不大），文件传输或者邮件之类的可能就必须保证可靠性。</p>\n<p>押镖就不能把货弄丢喽，传情书就无所谓了，反正是缘分。</p>\n<p><strong>Throughput</strong></p>\n<p>对速率bitrate有保障，比如指定码率的直播推流，就需要有一定的速率保障。</p>\n<p><strong>Timing</strong></p>\n<p>即时性，即时通讯、在线游戏之类的都需要保障一定的即时性，但邮件这种肯定不需要。</p>\n<p>其实邮件也可以要，但 没必要。</p>\n<p><strong>Security</strong></p>\n<p>不只是加密，还包括了完整性验证和身份验证。</p>\n<p>总之突出一个安全放心。</p>\n<h3 id=\"Transport-Services-Provided-by-the-Internet\"><a href=\"#Transport-Services-Provided-by-the-Internet\" class=\"headerlink\" title=\"Transport Services Provided by the Internet\"></a>Transport Services Provided by the Internet</h3><p>互联网提供了TCP和UDP两种协议（TM不是只有这两种！是互联网the Internet提供了这两种）。</p>\n<p><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-14%2022.06.50.png\"></p>\n<p><strong>TCP Services</strong></p>\n<p>TCP协议提供的服务：</p>\n<ul>\n<li>Connection-oriented service</li>\n<li>Reliable data transfer service</li>\n</ul>\n<p>connection这个概念其实是个抽象的东西，不是说建立了connection就是千里姻缘一线牵了，不是真的有个什么东西连上了。</p>\n<p>那为啥要这个抽象的概念呢，就是为了搞事情，搞拆分、搞flow control、搞congestion control、再搞搞retransmission什么的。要让分别在两个host上的两个process之间完成基本交流通过四元组（src IP + src port + dest IP + dest port）就够了，但是如果要搞事情，就还需要记一些东西，比如接收方记录一下现在哪些segment已经送到了，发送方当然也要记录，就要有buffer来放这些记录，来记状态。</p>\n<p>所以总有个时机来创建这些个buffer，所以约定一个牵手流程（建立connection)，手一牵上那大家就准备准备要开始做笔记了。</p>\n<p>分手这笔记就可以撕了。</p>\n<p>congestion-control mechanism，拥堵控制是用来保证整个网络的可用性和公平性。（TCP协议的研究大部分是在这个上面做文章）</p>\n<p>安全性方面TLS</p>\n<p><strong>UDP Services</strong></p>\n<p>无connection，最基础的传输层协议，除了把消息发出去，基本上只有校验数据包完整性的功能。</p>\n<p><strong>Services Not Provided by Internet Transport Protocols</strong></p>\n<blockquote>\n<p>today’s Internet can often provide satisfactory service to time-sensitive applications, but it cannot provide any timing or throughput guarantees.</p>\n</blockquote>\n<p>互联网不提供即时性和吞吐的保障。由于网络的复杂性，每次消息都会经过多个节点多个ISP无数条线路，基于成本很难保证这两个特性。不过应用程序（end system）可以曲线救国，通过增加线路、冗余发送、压缩等手段提高即时性和吞吐。</p>\n<h3 id=\"Application-Layer-Protocols\"><a href=\"#Application-Layer-Protocols\" class=\"headerlink\" title=\"Application-Layer Protocols\"></a>Application-Layer Protocols</h3><p>一个application-layer protocol定义了：</p>\n<ul>\n<li>消息类型，请求和响应</li>\n<li>如何区分消息类型</li>\n<li>消息中各个部分的含义</li>\n<li>process如何处理（接收、发送、解释）消息</li>\n</ul>\n<p>HTTP是RFC(Request for Comments)定义的公开协议。（当然也可以定义私有协议）</p>\n<h2 id=\"The-Web-and-HTTP\"><a href=\"#The-Web-and-HTTP\" class=\"headerlink\" title=\"The Web and HTTP\"></a>The Web and HTTP</h2><h3 id=\"Overview-of-HTTP\"><a href=\"#Overview-of-HTTP\" class=\"headerlink\" title=\"Overview of HTTP\"></a>Overview of HTTP</h3><p>基于<strong>TCP</strong>协议的<strong>无状态</strong>的<em>HyperText Transfer Protocol</em>，可靠完整由TCP来保证。（HTTP&#x2F;3基于UDP，因此一些TCP保证的特性需要在上一层也就是application-layer的HTTP&#x2F;3中实现）</p>\n<p><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-15%2010.57.16.png\"></p>\n<h3 id=\"Non-Persistent-and-Persistent-Connections\"><a href=\"#Non-Persistent-and-Persistent-Connections\" class=\"headerlink\" title=\"Non-Persistent and Persistent Connections\"></a>Non-Persistent and Persistent Connections</h3><p><strong>HTTP with Non-Persistent Connections</strong></p>\n<p>初代HTTP，每个请求都发起一次新的TCP连接，简约而不简单。</p>\n<p><strong>HTTP with Persistent Connections</strong></p>\n<p>HTTP&#x2F;1.1开始，多个请求复用TCP连接，也给大家伙儿带来了HOL问题。</p>\n<h3 id=\"HTTP-Message-Format\"><a href=\"#HTTP-Message-Format\" class=\"headerlink\" title=\"HTTP Message Format\"></a>HTTP Message Format</h3><p>RFC：</p>\n<ul>\n<li><a href=\"https://www.rfc-editor.org/rfc/rfc1945\">Hypertext Transfer Protocol – HTTP&#x2F;1.0</a></li>\n<li><a href=\"https://www.rfc-editor.org/rfc/rfc7230\">Hypertext Transfer Protocol (HTTP&#x2F;1.1): Message Syntax and Routing</a></li>\n<li><a href=\"https://www.rfc-editor.org/rfc/rfc7540\">Hypertext Transfer Protocol Version 2 (HTTP&#x2F;2)</a></li>\n<li><a href=\"https://www.rfc-editor.org/rfc/rfc9113\">HTTP&#x2F;2</a></li>\n<li><a href=\"https://www.rfc-editor.org/rfc/rfc9114\">HTTP&#x2F;3</a></li>\n</ul>\n<p><strong>HTTP Request Message</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;somedir&#x2F;page.html HTTP&#x2F;1.1 \nHost: www.someschool.edu \nConnection: close\nUser-agent: Mozilla&#x2F;5.0 \nAccept-language: fr<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol>\n<li>HTTP消息是由ASCII文字编写</li>\n<li>第一行是request line(请求行)：格式是 [method] [url] [protocol&#x2F;version], 接下来的都是header line(头行?)</li>\n<li>Host指明了目标host的位置（这是application-layer的事情，TCP虽然已经连上了，但是由于HTTP是无状态的，不同的TCP连接可能处理完全相同的HTTP请求，那如果要做web缓存，肯定是基于这个host比较好。而且web缓存也是application-layer）</li>\n<li>Connection，close表示请求完成之后关闭连接，具体定义参照RFC：</li>\n</ol>\n<blockquote>\n<p>  o  If the “close” connection option is present, the connection will<br>     not persist after the current response; else,</p>\n<p>  o  If the received protocol is HTTP&#x2F;1.1 (or later), the connection<br>     will persist after the current response; else,</p>\n<p>  o  If the received protocol is HTTP&#x2F;1.0, the “keep-alive” connection<br>     option is present, the recipient is not a proxy, and the recipient<br>     wishes to honor the HTTP&#x2F;1.0 “keep-alive” mechanism, the<br>     connection will persist after the current response; otherwise,</p>\n<p>  o  The connection will close after the current response.</p>\n</blockquote>\n<ol>\n<li>User-agent用户代理，提供当前client的信息</li>\n<li>Accept-language表示client能够接受的内容语言</li>\n</ol>\n<p><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-15%2014.01.32.png\"></p>\n<ol start=\"7\">\n<li>entity body是POST用的，GET方法参数是通过URL携带</li>\n<li>最开始的RFC里URL没有规定长度，但是某些浏览器限制2000chars，且CDN也会限制URL的长度，最好短点，有话放在body说。</li>\n</ol>\n<p><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-15%2014.22.39.png\"></p>\n<p><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-15%2014.25.06.png\"></p>\n<p><strong>HTTP Response Message</strong></p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">HTTP<span class=\"token operator\">/</span><span class=\"token number\">1.1</span> <span class=\"token number\">200</span> OK\nConnection<span class=\"token punctuation\">:</span> close\nDate<span class=\"token punctuation\">:</span> Tue<span class=\"token punctuation\">,</span> <span class=\"token number\">18</span> Aug <span class=\"token number\">2015</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">44</span><span class=\"token punctuation\">:</span><span class=\"token number\">04</span> GMT\nServer<span class=\"token punctuation\">:</span> Apache<span class=\"token operator\">/</span><span class=\"token number\">2.2</span><span class=\"token number\">.3</span> <span class=\"token punctuation\">(</span>CentOS<span class=\"token punctuation\">)</span>\nLast<span class=\"token operator\">-</span>Modified<span class=\"token punctuation\">:</span> Tue<span class=\"token punctuation\">,</span> <span class=\"token number\">18</span> Aug <span class=\"token number\">2015</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">11</span><span class=\"token punctuation\">:</span><span class=\"token number\">03</span> GMT \nContent<span class=\"token operator\">-</span>Length<span class=\"token punctuation\">:</span> <span class=\"token number\">6821</span>\nContent<span class=\"token operator\">-</span>Type<span class=\"token punctuation\">:</span> text<span class=\"token operator\">/</span><span class=\"token function\">html</span>\n<span class=\"token punctuation\">(</span>data data data data data <span class=\"token punctuation\">...</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol>\n<li>第一行是status line(状态行)，格式[protocol&#x2F;version] [status code] + [phrase]，接下来是header line，最后是entity body</li>\n<li>Connection和request时意义一样，这里是server告诉client接下来会关闭连接</li>\n<li>Date是server发送响应的时间</li>\n<li>Server提供server的信息</li>\n<li>Last-Modified是资源最后被修改的时间（包括创建），这个对web缓存很重要</li>\n<li>Content-Length内容的长度</li>\n<li>Content-Type返回响应的资源类型</li>\n</ol>\n<p><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-15%2014.35.29.png\"></p>\n<h3 id=\"User-Server-Interaction-Cookies\"><a href=\"#User-Server-Interaction-Cookies\" class=\"headerlink\" title=\"User-Server Interaction: Cookies\"></a>User-Server Interaction: Cookies</h3><p>RFC:</p>\n<p><a href=\"https://www.rfc-editor.org/rfc/rfc6265\">HTTP State Management Mechanism</a></p>\n<p>最初设计是想用来标识用户身份，后来用于保存会话状态，本质是提供了一个手段让无状态的HTTP带上那么点状态。</p>\n<h3 id=\"Web-Caching\"><a href=\"#Web-Caching\" class=\"headerlink\" title=\"Web Caching\"></a>Web Caching</h3><p>看图说话</p>\n<p><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-15%2020.37.43.png\"></p>\n<p><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-15%2020.38.01.png\"></p>\n<p>还是缓存的基本作用，CDN（Content Distribution Networks）也没差。</p>\n<p><strong>The Conditional GET</strong></p>\n<p>引入缓存后第一个要考虑一致性问题：</p>\n<ol>\n<li>cache向server请求时server在响应中会带上<code>Last-Modified</code>头信息，表示资源的修改时间，这个时间也会被缓存下来。</li>\n<li>如果再次请求这个资源时，cache会发起conditional GET，头信息包含<code>If-Modified-Since</code>，这个时间就是cache中的资源时间，此时<ol>\n<li>如果server的资源修改过，会返回新的资源响应，带上最新的Last-Modified，然后cache更新。</li>\n<li>如果server的资源在Last-Modified之后没有修改过，则向cache返回只包含status line和header line的响应（304 Not Modified）。</li>\n</ol>\n</li>\n</ol>\n<p>会增加一点响应时间和带宽消耗。</p>\n<h3 id=\"HTTP-x2F-2\"><a href=\"#HTTP-x2F-2\" class=\"headerlink\" title=\"HTTP&#x2F;2\"></a>HTTP&#x2F;2</h3><blockquote>\n<p>The primary goals for HTTP&#x2F;2 are to reduce perceived latency by enabling request and response multiplexing over a single TCP connection, provide request prioritization and server push, and provide efficient compression of HTTP header fields. HTTP&#x2F;2 does not change HTTP methods, status codes, URLs, or header fields. Instead, HTTP&#x2F;2 changes how the data is formatted and transported between the client and server.</p>\n</blockquote>\n<ol>\n<li>在单个TCP连接上实现请求和响应的multiplexing来减少perceived latency（感知延迟）</li>\n<li>优先级请求</li>\n<li>服务端推送</li>\n<li>HTTP头的高效压缩</li>\n</ol>\n<p>Head of Line (HOL) blocking，头阻塞问题：如果多个不同的请求都经过一个TCP连接发送，但不幸的是发送队列的头部有个大对象（耗时）的请求，那么在队列后面的即使是小对象的请求也不得不等待。</p>\n<p><em>这个看似总等待时间没有变化，但是会严重影响用户的感知延迟，假如一个页面上有多个请求，除了一个超级大的视频之外全部都是文字和小图片，这时候哦豁视频的响应先来了，那么在视频请求完成之前页面就是一片白</em></p>\n<p>HTTP&#x2F;1.1的浏览器通过多个TCP连接来缓解这个问题（说好的复用TCP呢。），而且由此方案带来另一个问题：由于TCP的公平性是基于连接的，多个TCP连接理论上可以获得更多带宽，从整个网络设计层面来看，来骗来偷袭更多的带宽这好吗这不好。</p>\n<p><em>减少TCP连接其实是想节省资源(socket、内存,etc.）的占用</em></p>\n<p><strong>HTTP&#x2F;2 Framing</strong></p>\n<p>目标是彻底解决HOL问题，将响应数据拆分成frame，头部数据拆成一个frame，剩下的数据拆成一个或多个frames，对这些frame进行二进制编码，这样就可以交错的在一个TCP连接上传输响应。（可能带来的问题就是需要更大的buffer开销，毕竟需要等到某一个响应的所有frames都到达后才能对进行后续处理）</p>\n<p><strong>Response Message Prioritization and Server Pushing</strong></p>\n<p>优先级基本靠浏览器实现，不同的浏览器有不同的优先级策略。（体验下用chromium内核之前的edge和用了之后的edge是两个东西，edge真好用！所以我用chrome）</p>\n<p><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-15%2021.37.10.png\"></p>\n<p>server push需要配置实现，目的减少请求量，比如server除了响应本身请求的网页内容还可以push网页上依赖的资源</p>\n<p>举个例子，nginx配置</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">server &#123;\n    listen 443 ssl http2;\n    server_name  localhost;\n\n    ssl                      on;\n    ssl_certificate          &#x2F;etc&#x2F;nginx&#x2F;certs&#x2F;example.crt;\n    ssl_certificate_key      &#x2F;etc&#x2F;nginx&#x2F;certs&#x2F;example.key;\n\n    ssl_session_timeout  5m;\n\n    ssl_ciphers HIGH:!aNULL:!MD5;\n    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;\n    ssl_prefer_server_ciphers   on;\n\n    location &#x2F; &#123;\n      root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;\n      index  index.html index.htm;\n      http2_push &#x2F;style.css; -- 推送style.css\n      http2_push &#x2F;example.png; -- 推送example.png\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>请求根目录&#x2F;时，server会push配置的两个资源。</p>\n<p><strong>HTTP&#x2F;3</strong></p>\n<p>QUIC，基于UDP的HTTP协议，可靠性公平性都是由application-layer来实现。</p>\n<h2 id=\"Electronic-Mail-in-the-Internet\"><a href=\"#Electronic-Mail-in-the-Internet\" class=\"headerlink\" title=\"Electronic Mail in the Internet\"></a>Electronic Mail in the Internet</h2><p><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-15%2021.40.53.png\"></p>\n<h3 id=\"SMTP\"><a href=\"#SMTP\" class=\"headerlink\" title=\"SMTP\"></a>SMTP</h3><p>Simple Mail Transfer Protocol (SMTP)，基于TCP，远古协议，比HTTP早得多，ASCII编码。</p>\n<h3 id=\"Mail-Message-Formats\"><a href=\"#Mail-Message-Formats\" class=\"headerlink\" title=\"Mail Message Formats\"></a>Mail Message Formats</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">From: alice@crepes.fr\nTo: bob@hamburger.edu\nSubject: Searching for the meaning of life.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Mail-Access-Protocols\"><a href=\"#Mail-Access-Protocols\" class=\"headerlink\" title=\"Mail Access Protocols\"></a>Mail Access Protocols</h3><p>Internet Mail Access Protocol (IMAP)，用于访问邮件服务器的协议，客户端接入用这个（省啊，HTTP有点肥大），网页上用HTTP。</p>\n<h2 id=\"DNS—The-Internet’s-Directory-Service\"><a href=\"#DNS—The-Internet’s-Directory-Service\" class=\"headerlink\" title=\"DNS—The Internet’s Directory Service\"></a>DNS—The Internet’s Directory Service</h2><p>hostname 和 IP Address映射，将hostname转换为IP Address</p>\n<h3 id=\"Services-Provided-by-DNS\"><a href=\"#Services-Provided-by-DNS\" class=\"headerlink\" title=\"Services Provided by DNS\"></a>Services Provided by DNS</h3><p>组成部分：</p>\n<ul>\n<li>分布式数据库</li>\n<li>可供host查询该数据库的application-layer protocol，DNS协议</li>\n</ul>\n<p>举例，访问一个域名的步骤：</p>\n<ol>\n<li>本地运行DNS的client（这东西OS的）</li>\n<li>浏览器访问<a href=\"http://www.xxx.com下的资源时,将www.xxx.com传递给dns的client/\">www.xxx.com下的资源时，将www.xxx.com传递给DNS的client</a></li>\n<li>DNS的client向DNS的server请求<a href=\"http://www.xxx.com的ip/\">www.xxx.com的IP</a> address</li>\n<li>浏览器收到DNS client返回的IP address，通过这个IP建立TCP连接然后发送HTTP请求</li>\n</ol>\n<p>比用IP直接访问肯定会增加延迟，为了减小延迟DNS服务器实际上不止一台，并且会尽量让所请求的DNS服务器更靠近client。</p>\n<p>DNS提供的服务：</p>\n<ul>\n<li>host别名</li>\n<li>邮件服务器别名</li>\n<li>负载分布</li>\n</ul>\n<p>多对多的映射能力，前两个是域名-IP多对一，后面是一对多。</p>\n<h3 id=\"Overview-of-How-DNS-Works\"><a href=\"#Overview-of-How-DNS-Works\" class=\"headerlink\" title=\"Overview of How DNS Works\"></a>Overview of How DNS Works</h3><p>基于UDP，默认53端口。</p>\n<p><strong>A Distributed, Hierarchical Database</strong></p>\n<p>DNS是分布式服务（Distributed），同时是分层服务（Hierarchical）</p>\n<p>看图说话<br><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-16%2014.23.27.png\"></p>\n<p>DNS分三类：</p>\n<ul>\n<li>root DNS servers，根DNS服务器</li>\n<li>top-level domain (TLD) DNS servers，顶级域DNS服务器</li>\n<li>authoritative DNS servers，授权DNS服务器</li>\n</ul>\n<p><em><strong>root DNS server</strong></em></p>\n<p>全世界1000+的root DNS服务器（2020），提供下一层TLD DNS server的IP地址。<br><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-16%2014.27.20.png\"></p>\n<p><em><strong>TLD DNS server</strong></em></p>\n<p>顶级域DNS服务器。com或者国家fr、jp这种级别</p>\n<p><em><strong>local DNS server</strong></em></p>\n<p>每个ISP（机构&#x2F;住宅）都会有自己的local DNS。</p>\n<p>local DNS不在DNS分层结构中，发起DNS请求时先到local DNS：<br><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-16%2015.00.39.png\"></p>\n<ol>\n<li>本地host发起DNS查询请求到local DNS</li>\n<li>local DNS查询root DNS</li>\n<li>root DNS返回负责的TLD DNS的IP</li>\n<li>local DNS查询TLD DNS</li>\n<li>TLD DNS返回负责的authoritative DNS的IP</li>\n<li>local DNS查询authoritative DNS</li>\n<li>authoritative DNS返回请求的host的IP</li>\n<li>local DNS将IP地址返回给本地host</li>\n</ol>\n<p>八次请求！八次！</p>\n<p>TLD DNS不是总是有authoritative DNS的地址，还会有中间DNS。</p>\n<p>DNS查询的递归+迭代：查询local DNS是递归，因为local DNS还要查别的DNS；local DNS查别的DNS是迭代，平级的。</p>\n<p>当然理论上也可以都是递归的，实际一般不这么实现：<br><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-16%2015.16.17.png\"></p>\n<p><em>这种实现有个问题：图中local DNS到root DNS的请求也就是2那个请求，需要等到3456请求都完成了才能返回，root DNS在这种实现模型下负载会更高</em></p>\n<p><strong>DNS Caching</strong></p>\n<p>顾名思义。</p>\n<h3 id=\"DNS-Records-and-Messages\"><a href=\"#DNS-Records-and-Messages\" class=\"headerlink\" title=\"DNS Records and Messages\"></a>DNS Records and Messages</h3><p>resource record(RR)的格式：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">(Name, Value, Type, TTL)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>name和value的含义要看type是什么：</p>\n<ul>\n<li>Type&#x3D;A<ul>\n<li>name是hostname</li>\n<li>value是IPv4</li>\n<li>比如(relay1.bar.foo.com, 145.37.93.126, A)</li>\n</ul>\n</li>\n<li>Type&#x3D;NS<ul>\n<li>name是domain</li>\n<li>value是负责解析这个domain的dns的hostname</li>\n<li>比如(foo.com, dns.foo.com, NS)</li>\n</ul>\n</li>\n<li>Type&#x3D;CNAME<ul>\n<li>name是别名hostname（aliased hostname）</li>\n<li>value是hostname</li>\n<li>比如(foo.com, relay1.bar.foo.com, CNAME)</li>\n</ul>\n</li>\n<li>Type&#x3D;MX（看起来和CNAME一样，但是单独有这个类型的的话，邮件服务器的别名就可以跟CNAME的别名重复了）<ul>\n<li>name是别名hostname</li>\n<li>value是邮件的hostname</li>\n<li>比如(foo.com, mail.bar.foo.com, MX)</li>\n</ul>\n</li>\n</ul>\n<p>A记录是存在于authoritative DNS上的，比如aaa.always.fuxk.com，如果dns.fuxk.com不是这个domain的authoritative DNS，那么他会有一条NS记录指向比如说dns.always.fuxk.com，而在dns.always.fuxk.com上面应该就是aaa.always.fuxk.com对应于某个IP的A记录了。（如果是IPv6，那就是AAAA记录，都差不多。）</p>\n<p><strong>DNS Messages</strong></p>\n<p>看图说话<br><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-16%2020.41.47.png\"></p>\n<p>查询和回复的message格式一致</p>\n<ul>\n<li>最前面的header section占12 bytes<ul>\n<li>identification用来关联查询和回复</li>\n<li>flags<ul>\n<li>1 bit表示是查询（0）还是回复（1）</li>\n<li>1 bit表示回复的消息是authoritative DNS回复的（1）</li>\n<li>1 bit表示client要求DNS server在查不到的时候进行递归查询（1）</li>\n<li>1 bit表示DNS server是（1）否支持递归查询</li>\n</ul>\n</li>\n<li>4个number表示question section的四种出现次数</li>\n</ul>\n</li>\n<li>question section部分包含查询的name和type，比如aaa.bbb.com, A</li>\n<li>answer section部分包含回复的value、type、TTL，可以有多条</li>\n<li>authority section是authoritative DNS回复的内容（贵宾待遇。）</li>\n<li>additional section包含额外的信息，比如查询MX记录，回复在answer section的是MX对应的hostname记录，那这里就可能是这个hostname对应的IP的A记录。</li>\n</ul>\n<p><strong>Inserting Records into the DNS Database</strong></p>\n<p>注册域名的时候，域名注册商会将这个域名写到DNS，一般的域名注册商也提供authoritative DNS，大多数会有两个一个主要的一个备用的。<br>比如dns1.aaa.com和dns2.aaa.com，然后要配置自己刚注册域名的A记录（至少有个A记录），最后提供这个DNS的服务商会把记录写到TLD DNS里：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">(你的域名.com, dns1.aaa.com, NS) \n(dns1.aaa.com, 212.212.212.1, A)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>最后来一点小小的震撼：<br><a href=\"https://zh.wikipedia.org/zh-hans/2014%E5%B9%B4%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86%E7%BD%91%E7%BB%9C%E5%BC%82%E5%B8%B8%E4%BA%8B%E4%BB%B6\">2014年中国大陆网络异常事件</a></p>\n<p><a href=\"https://zh.wikipedia.org/zh-hans/%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BC%93%E5%AD%98%E6%B1%A1%E6%9F%93\">域名服务器缓存污染</a></p>\n<p>所以说年轻人还是要学习一个</p>\n<h2 id=\"Peer-to-Peer-File-Distribution\"><a href=\"#Peer-to-Peer-File-Distribution\" class=\"headerlink\" title=\"Peer-to-Peer File Distribution\"></a>Peer-to-Peer File Distribution</h2><p>对等网络</p>\n<p>熟悉的协议：BT</p>\n<p>那可太熟悉了。</p>\n<p><strong>Scalability of P2P Architectures</strong></p>\n<p>扩展性，不同与server-client模式，P2P随着参与peer的增多不会明显增加分发耗时。</p>\n<p><strong>BitTorrent</strong></p>\n<p><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-16%2021.46.11.png\"></p>\n<p>trade algorithm（tit-for-tat）：</p>\n<ul>\n<li>参与某个torrent下载分发的peer会向tracker服务器上报自己的存在。新加入的peer会从tracker获取正在分发的peer list，并尝试建立连接。</li>\n<li>peer会从连接的peers获取对方的chunk信息，优先下载那些比较稀有的chunk。</li>\n<li>某些个peer申请下载chunk的时候，通过这个peer给自己提供chunk的速率来决定，优先选几个速率高的。</li>\n<li>每隔一段时间，重新测量一下速率。</li>\n<li>同样的隔一段时间，找一个随机的peer，向这个peer传他需要的chunk，假如在这个peer中自己变成了他的前几个最高速率的peer之一，那这个peer也会反向传chunk过来，也就有可能变成这边新的最高速率的peer。等于说是打破了江局。</li>\n</ul>\n<p>DHT网络</p>\n<h2 id=\"Video-Streaming-and-Content-Distribution-Networks\"><a href=\"#Video-Streaming-and-Content-Distribution-Networks\" class=\"headerlink\" title=\"Video Streaming and Content Distribution Networks\"></a>Video Streaming and Content Distribution Networks</h2><h3 id=\"Internet-Video\"><a href=\"#Internet-Video\" class=\"headerlink\" title=\"Internet Video\"></a>Internet Video</h3><h3 id=\"HTTP-Streaming-and-DASH\"><a href=\"#HTTP-Streaming-and-DASH\" class=\"headerlink\" title=\"HTTP Streaming and DASH\"></a>HTTP Streaming and DASH</h3><p>Dynamic Adaptive Streaming over HTTP (DASH)</p>\n<p>视频的码率，通过对原始视频进行不同参数的压缩，产生多个码率的视频，根据变化的网络条件分发不同码率的视频保证流畅。</p>\n<h3 id=\"Content-Distribution-Networks\"><a href=\"#Content-Distribution-Networks\" class=\"headerlink\" title=\"Content Distribution Networks\"></a>Content Distribution Networks</h3><ol>\n<li>人民日益增长的网络请求和server捉急的带宽之间的矛盾</li>\n<li>可以增加server或者带宽，得加钱</li>\n<li>大部分资源会被重复请求</li>\n</ol>\n<p>Content Distribution Networks (CDNs)这年头几乎没有不用的。可以看做是一个分布式静态资源的缓存，有效的减轻了server的压力。</p>\n<p>两个部署理念：</p>\n<ul>\n<li>Enter Deep：把CDN部署到ISP内部，离用户越近越好</li>\n<li>Bring Home：把CDN部署在ISP外部比如IXP，每个部署点搞一个集群</li>\n</ul>\n<p>各有好处。第一个有点贵，ISP那得多少个啊，第二个会比第一多些延迟，毕竟远了点。</p>\n<p><strong>CDN Operation</strong></p>\n<ol>\n<li>决定具体某个CDN集群</li>\n<li>将请求发送到这个CDN集群的server</li>\n</ol>\n<p>一种可行的方法：对静态资源的请求通过DNS解析到CDN</p>\n<p><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-16%2022.17.56.png\"></p>\n<p><strong>Cluster Selection Strategies</strong></p>\n<p>集群选择策略：</p>\n<ul>\n<li>geographically closest，地理优先，就是用地理库找离Local DNS最近的，不过不一定地理最近的就是网络最近，而且Local DNS也可能距离client较远。</li>\n<li>real-time measurements，实时测量，有些测量的消息不一定会被响应（ICMP过滤）</li>\n</ul>\n<h3 id=\"Case-Studies-Netflix-and-YouTube\"><a href=\"#Case-Studies-Netflix-and-YouTube\" class=\"headerlink\" title=\"Case Studies: Netflix and YouTube\"></a>Case Studies: Netflix and YouTube</h3><p>激动人心的案例教学</p>\n<p><strong>Netflix</strong></p>\n<p><img src=\"/2023/03/13/reading-memo-networking-top-down-ch1/%E6%88%AA%E5%B1%8F2023-03-16%2022.29.19.png\"></p>\n<p>全用AWS，但CDN是私有搭建的</p>\n<ul>\n<li>Content ingestion. 把原始内容上传到Amazon cloud</li>\n<li>Content processing. 转码，生产不同码率的内容</li>\n<li>Uploading versions to its CDN. 上传到CDN</li>\n</ul>\n<p>关于CDN</p>\n<ul>\n<li>网飞在200多个IXP点都有自己的机架，几百个ISP也有自己的机架，Enter Deep和Bring Home结合。</li>\n<li>不使用pull的缓存方式，而是在非高峰时期上传内容到CDN。没有足够容量的点就上传热点内容。</li>\n<li>由于简化了CDN的设计（只有视频），不需要通过DNS的方式转发到CDN。在AWS中的netflix服务会直接让client去CDN的域名请求。</li>\n</ul>\n<p><strong>YouTube</strong></p>\n<ul>\n<li>也是用的私人CDN，基本和网飞的部署策略一样。中西药结合疗效好。</li>\n<li>区别是使用了pull的缓存方式，访问的内容miss的时候CDN会去server拉取内容。分配CDN的方式是DNS转发，且基于RTT的测量来分配具体的集群，如果负载高可能会调整分配到远一点的集群。</li>\n<li>不是用自适应流媒体，而是要用户自己选择不同的分辨率（码率）。（YouTube看起来也像是自适应，但应该是client完成的，实际上可供消费的不同码率视频版本就那几个，不需要自适应的那么多。网飞的那个自适应可是真的分辨率连选都不让选的。）</li>\n</ul>\n","encrypt":true},{"title":"Rust Notes","date":"2023-06-16T06:53:17.000Z","_content":"\n`char` is **always** 4 bytes\n\n![](rust-notes/char-size-1.png)\n![](rust-notes/char-size-2.png)","source":"_posts/rust-notes.md","raw":"---\ntitle: Rust Notes\ndate: 2023-06-16 14:53:17\ntags:\n    - rust\n    - programing\ncategories:\n    - 基础姿势\n---\n\n`char` is **always** 4 bytes\n\n![](rust-notes/char-size-1.png)\n![](rust-notes/char-size-2.png)","slug":"rust-notes","published":1,"updated":"2023-06-28T02:51:24.355Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdtg004nxtuj3xkocbuh","content":"<p><code>char</code> is <strong>always</strong> 4 bytes</p>\n<p><img src=\"/2023/06/16/rust-notes/char-size-1.png\"><br><img src=\"/2023/06/16/rust-notes/char-size-2.png\"></p>\n","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<p><code>char</code> is <strong>always</strong> 4 bytes</p>\n<p><img src=\"/2023/06/16/rust-notes/char-size-1.png\"><br><img src=\"/2023/06/16/rust-notes/char-size-2.png\"></p>\n"},{"title":"Shell脚本笔记","date":"2022-03-19T15:27:41.000Z","_content":"\n- 接受用户输入\n  \n  ```bash\n  read var\n  echo \"input value is $var\"\n  ```\n\n- 成功后执行\n  \n  ```bash\n  rm somefile && echo \"removed\"\n  ```\n\n- 失败后执行\n  \n  ```bash\n  rm filenotexists || echo \"nothing removed\"\n  ```\n\n- 重定向输出\n  \n  - `1`代表`stdout`, 标准输出\n  \n  - `2`代表`stderr`, 标准错误输出\n  \n  - `&`代表\"按照相同方式输出\"\n  \n  - `dev/null`是null文件，可以理解为一个“黑洞”设备，所有输入都会被丢弃\n  \n  ```bash\n  echo \"blabla\" > dest.file\n  \n  # 输出所有输出到文件\n  echo \"blabla\" 1 > dest.file\n  \n  # 只输出错误输出到文件\n  rm filenotexists 2 > err.log\n  \n  # 输出所有输出到文件\n  rm somefile 1 > dest.file 2>&1\n  \n  # 输出非错误输出到文件\n  rm somefile 1 > dest.file 2 > dev/null\n  \n  # 创建两条管道\n  rm somefile 1 > log 2 > log\n  \n  # 2的管道继承于1\n  rm somefile 1 > log 2>&1\n  ```\n\n- 创建固定大小的空文件\n  \n  当`dev/zero`作为输入流的时候，会产生无限的0 (不是ASCII的'0')\n  \n  ```bash\n  # input file is /dev/zero\n  # output file is file\n  # write 10 times\n  # 1024 bytes every time\n  # so it creates a 10k blank file\n  dd if=/dev/zero of=file count=10 bs=1024\n  ```\n\n- if else\n  \n  ```bash\n  a=10\n  b=20\n  if [ $a == $b ]\n  then\n     echo \"a is equal to b\"\n  elif [ $a -gt $b ]\n  then\n     echo \"a greater than b\"\n  elif [ $a -lt $b ]\n  then\n     echo \"a less than b\"\n  else\n     echo \"\"\n  fi\n  ```\n\n- 追加到文件\n  \n  ```bash\n  file1 >> file2\n  echo \"tails\" >> file\n  date >> file\n  ```\n","source":"_posts/shell-some-memos-for-shell-script.md","raw":"---\ntitle: Shell脚本笔记\ndate: 2022-03-19 23:27:41\ncategories: \n\t- 伸展运动\n  - Linux\ntags:\n\t- Linux\n\t- shell script\n---\n\n- 接受用户输入\n  \n  ```bash\n  read var\n  echo \"input value is $var\"\n  ```\n\n- 成功后执行\n  \n  ```bash\n  rm somefile && echo \"removed\"\n  ```\n\n- 失败后执行\n  \n  ```bash\n  rm filenotexists || echo \"nothing removed\"\n  ```\n\n- 重定向输出\n  \n  - `1`代表`stdout`, 标准输出\n  \n  - `2`代表`stderr`, 标准错误输出\n  \n  - `&`代表\"按照相同方式输出\"\n  \n  - `dev/null`是null文件，可以理解为一个“黑洞”设备，所有输入都会被丢弃\n  \n  ```bash\n  echo \"blabla\" > dest.file\n  \n  # 输出所有输出到文件\n  echo \"blabla\" 1 > dest.file\n  \n  # 只输出错误输出到文件\n  rm filenotexists 2 > err.log\n  \n  # 输出所有输出到文件\n  rm somefile 1 > dest.file 2>&1\n  \n  # 输出非错误输出到文件\n  rm somefile 1 > dest.file 2 > dev/null\n  \n  # 创建两条管道\n  rm somefile 1 > log 2 > log\n  \n  # 2的管道继承于1\n  rm somefile 1 > log 2>&1\n  ```\n\n- 创建固定大小的空文件\n  \n  当`dev/zero`作为输入流的时候，会产生无限的0 (不是ASCII的'0')\n  \n  ```bash\n  # input file is /dev/zero\n  # output file is file\n  # write 10 times\n  # 1024 bytes every time\n  # so it creates a 10k blank file\n  dd if=/dev/zero of=file count=10 bs=1024\n  ```\n\n- if else\n  \n  ```bash\n  a=10\n  b=20\n  if [ $a == $b ]\n  then\n     echo \"a is equal to b\"\n  elif [ $a -gt $b ]\n  then\n     echo \"a greater than b\"\n  elif [ $a -lt $b ]\n  then\n     echo \"a less than b\"\n  else\n     echo \"\"\n  fi\n  ```\n\n- 追加到文件\n  \n  ```bash\n  file1 >> file2\n  echo \"tails\" >> file\n  date >> file\n  ```\n","slug":"shell-some-memos-for-shell-script","published":1,"updated":"2023-03-17T02:30:47.732Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdtg004pxtuj0pz6h6wv","content":"<ul>\n<li><p>接受用户输入</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">read</span> var\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"input value is <span class=\"token variable\">$var</span>\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>成功后执行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> somefile <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"removed\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>失败后执行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> filenotexists <span class=\"token operator\">||</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"nothing removed\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>重定向输出</p>\n<ul>\n<li><p><code>1</code>代表<code>stdout</code>, 标准输出</p>\n</li>\n<li><p><code>2</code>代表<code>stderr</code>, 标准错误输出</p>\n</li>\n<li><p><code>&amp;</code>代表”按照相同方式输出”</p>\n</li>\n<li><p><code>dev/null</code>是null文件，可以理解为一个“黑洞”设备，所有输入都会被丢弃</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"blabla\"</span> <span class=\"token operator\">></span> dest.file\n\n<span class=\"token comment\"># 输出所有输出到文件</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"blabla\"</span> <span class=\"token number\">1</span> <span class=\"token operator\">></span> dest.file\n\n<span class=\"token comment\"># 只输出错误输出到文件</span>\n<span class=\"token function\">rm</span> filenotexists <span class=\"token number\">2</span> <span class=\"token operator\">></span> err.log\n\n<span class=\"token comment\"># 输出所有输出到文件</span>\n<span class=\"token function\">rm</span> somefile <span class=\"token number\">1</span> <span class=\"token operator\">></span> dest.file <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span>\n\n<span class=\"token comment\"># 输出非错误输出到文件</span>\n<span class=\"token function\">rm</span> somefile <span class=\"token number\">1</span> <span class=\"token operator\">></span> dest.file <span class=\"token number\">2</span> <span class=\"token operator\">></span> dev/null\n\n<span class=\"token comment\"># 创建两条管道</span>\n<span class=\"token function\">rm</span> somefile <span class=\"token number\">1</span> <span class=\"token operator\">></span> log <span class=\"token number\">2</span> <span class=\"token operator\">></span> log\n\n<span class=\"token comment\"># 2的管道继承于1</span>\n<span class=\"token function\">rm</span> somefile <span class=\"token number\">1</span> <span class=\"token operator\">></span> log <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>创建固定大小的空文件</p>\n<p>当<code>dev/zero</code>作为输入流的时候，会产生无限的0 (不是ASCII的’0’)</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># input file is /dev/zero</span>\n<span class=\"token comment\"># output file is file</span>\n<span class=\"token comment\"># write 10 times</span>\n<span class=\"token comment\"># 1024 bytes every time</span>\n<span class=\"token comment\"># so it creates a 10k blank file</span>\n<span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>/dev/zero <span class=\"token assign-left variable\">of</span><span class=\"token operator\">=</span>file <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">10</span> <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span><span class=\"token number\">1024</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>if else</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">a</span><span class=\"token operator\">=</span><span class=\"token number\">10</span>\n<span class=\"token assign-left variable\">b</span><span class=\"token operator\">=</span><span class=\"token number\">20</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$a</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$b</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n   <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"a is equal to b\"</span>\n<span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$a</span> <span class=\"token parameter variable\">-gt</span> <span class=\"token variable\">$b</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n   <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"a greater than b\"</span>\n<span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$a</span> <span class=\"token parameter variable\">-lt</span> <span class=\"token variable\">$b</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n   <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"a less than b\"</span>\n<span class=\"token keyword\">else</span>\n   <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"\"</span>\n<span class=\"token keyword\">fi</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>追加到文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">file1 <span class=\"token operator\">>></span> file2\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"tails\"</span> <span class=\"token operator\">>></span> <span class=\"token function\">file</span>\n<span class=\"token function\">date</span> <span class=\"token operator\">>></span> <span class=\"token function\">file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<ul>\n<li><p>接受用户输入</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">read</span> var\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"input value is <span class=\"token variable\">$var</span>\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>成功后执行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> somefile <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"removed\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>失败后执行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> filenotexists <span class=\"token operator\">||</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"nothing removed\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>重定向输出</p>\n<ul>\n<li><p><code>1</code>代表<code>stdout</code>, 标准输出</p>\n</li>\n<li><p><code>2</code>代表<code>stderr</code>, 标准错误输出</p>\n</li>\n<li><p><code>&amp;</code>代表”按照相同方式输出”</p>\n</li>\n<li><p><code>dev/null</code>是null文件，可以理解为一个“黑洞”设备，所有输入都会被丢弃</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"blabla\"</span> <span class=\"token operator\">></span> dest.file\n\n<span class=\"token comment\"># 输出所有输出到文件</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"blabla\"</span> <span class=\"token number\">1</span> <span class=\"token operator\">></span> dest.file\n\n<span class=\"token comment\"># 只输出错误输出到文件</span>\n<span class=\"token function\">rm</span> filenotexists <span class=\"token number\">2</span> <span class=\"token operator\">></span> err.log\n\n<span class=\"token comment\"># 输出所有输出到文件</span>\n<span class=\"token function\">rm</span> somefile <span class=\"token number\">1</span> <span class=\"token operator\">></span> dest.file <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span>\n\n<span class=\"token comment\"># 输出非错误输出到文件</span>\n<span class=\"token function\">rm</span> somefile <span class=\"token number\">1</span> <span class=\"token operator\">></span> dest.file <span class=\"token number\">2</span> <span class=\"token operator\">></span> dev/null\n\n<span class=\"token comment\"># 创建两条管道</span>\n<span class=\"token function\">rm</span> somefile <span class=\"token number\">1</span> <span class=\"token operator\">></span> log <span class=\"token number\">2</span> <span class=\"token operator\">></span> log\n\n<span class=\"token comment\"># 2的管道继承于1</span>\n<span class=\"token function\">rm</span> somefile <span class=\"token number\">1</span> <span class=\"token operator\">></span> log <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>创建固定大小的空文件</p>\n<p>当<code>dev/zero</code>作为输入流的时候，会产生无限的0 (不是ASCII的’0’)</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># input file is /dev/zero</span>\n<span class=\"token comment\"># output file is file</span>\n<span class=\"token comment\"># write 10 times</span>\n<span class=\"token comment\"># 1024 bytes every time</span>\n<span class=\"token comment\"># so it creates a 10k blank file</span>\n<span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>/dev/zero <span class=\"token assign-left variable\">of</span><span class=\"token operator\">=</span>file <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">10</span> <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span><span class=\"token number\">1024</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>if else</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">a</span><span class=\"token operator\">=</span><span class=\"token number\">10</span>\n<span class=\"token assign-left variable\">b</span><span class=\"token operator\">=</span><span class=\"token number\">20</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$a</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$b</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n   <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"a is equal to b\"</span>\n<span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$a</span> <span class=\"token parameter variable\">-gt</span> <span class=\"token variable\">$b</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n   <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"a greater than b\"</span>\n<span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$a</span> <span class=\"token parameter variable\">-lt</span> <span class=\"token variable\">$b</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n   <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"a less than b\"</span>\n<span class=\"token keyword\">else</span>\n   <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"\"</span>\n<span class=\"token keyword\">fi</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>追加到文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">file1 <span class=\"token operator\">>></span> file2\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"tails\"</span> <span class=\"token operator\">>></span> <span class=\"token function\">file</span>\n<span class=\"token function\">date</span> <span class=\"token operator\">>></span> <span class=\"token function\">file</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n"},{"title":"Spring rabbitMQ binding配置的“陷阱”","date":"2022-06-14T12:31:59.000Z","_content":"\n## Spring RabbitMQ bindings\n\n> exchange的`auto-declare`配置同时作用于binding，如果声明新的queue，但是绑定的exchange的auto-declare为false，则不会在既有的exchange上进行绑定\n\n```xml\n  <rabbit:queue id=\"queue0.id\" name=\"queue.0.name\"/>\n  <rabbit:fanout-exchange name=\"exchange.0.name\">\n    <rabbit:bindings>\n      <rabbit:binding queue=\"queue0.id\"/>\n    </rabbit:bindings>\n  </rabbit:fanout-exchange>\n```\n\n解析binding的入口：\n```java\n    protected void doParseBindings(Element element, ParserContext parserContext,\n\t\t\tString exchangeName, Element bindings, AbstractExchangeParser parser) {\n\t\tif (bindings != null) {\n\t\t\tfor (Element binding : DomUtils.getChildElementsByTagName(bindings, BINDING_ELE)) {\n                // 解析rabbit:binding\n\t\t\t\tBeanDefinitionBuilder bindingBuilder = parser.parseBinding(exchangeName, binding,\n\t\t\t\t\t\tparserContext);\n                // 这里是重点，解析bindings的时候，传入的是element，也就是rabbit:fanout-exchange对应的元素\n\t\t\t\tNamespaceUtils.parseDeclarationControls(element, bindingBuilder);\n\t\t\t\tBeanDefinition beanDefinition = bindingBuilder.getBeanDefinition();\n\t\t\t\tregisterBeanDefinition(new BeanDefinitionHolder(beanDefinition, parserContext.getReaderContext()\n\t\t\t\t\t\t.generateBeanName(beanDefinition)), parserContext.getRegistry());\n\t\t\t}\n\t\t}\n\t}\n```\n\n每个binding的自动声明`shouldDeclare`属性的设置：\n```java\n\t/**\n\t * Parses 'auto-declare' and 'declared-by' attributes.\n\t *\n\t * @param element The element.\n\t * @param builder The builder.\n\t */\n\tpublic static void parseDeclarationControls(Element element, BeanDefinitionBuilder builder) {\n        // 这里用exchange的auto-declare属性为每个binding设置shouldDeclare值\n\t\tNamespaceUtils.setValueIfAttributeDefined(builder, element, \"auto-declare\", \"shouldDeclare\");\n\t\tString admins = element.getAttribute(\"declared-by\");\n\t\tif (StringUtils.hasText(admins)) {\n\t\t\tString[] adminBeanNames = admins.split(\",\");\n\t\t\tManagedList<BeanReference> adminBeanRefs = new ManagedList<BeanReference>();\n\t\t\tfor (String adminBeanName : adminBeanNames) {\n\t\t\t\tadminBeanRefs.add(new RuntimeBeanReference(adminBeanName.trim()));\n\t\t\t}\n\t\t\tbuilder.addPropertyValue(\"adminsThatShouldDeclare\", adminBeanRefs);\n\t\t}\n\t\tNamespaceUtils.setValueIfAttributeDefined(builder, element, \"ignore-declaration-exceptions\");\n\t}\n```\n\n`shouldDeclare`在声明中的作用:\n```java\n\n\t/**\n\t * Remove any instances that should not be declared by this admin.\n\t * @param declarables the collection of {@link Declarable}s.\n\t * @return a new collection containing {@link Declarable}s that should be declared by this\n\t * admin.\n\t */\n\tprivate <T extends Declarable> Collection<T> filterDeclarables(Collection<T> declarables) {\n\t\tCollection<T> filtered = new ArrayList<T>();\n\t\tfor (T declarable : declarables) {\n\t\t\tCollection<?> adminsWithWhichToDeclare = declarable.getDeclaringAdmins();\n            // 此处只保留shouldDeclare=true的bean\n\t\t\tif (declarable.shouldDeclare() &&\n\t\t\t\t\t(adminsWithWhichToDeclare.isEmpty() || adminsWithWhichToDeclare.contains(this))) {\n\t\t\t\tfiltered.add(declarable);\n\t\t\t}\n\t\t}\n\t\treturn filtered;\n\t}\n```\n\n初始化的部分：\n```java\n\n\t/**\n\t * Declares all the exchanges, queues and bindings in the enclosing application context, if any. It should be safe\n\t * (but unnecessary) to call this method more than once.\n\t */\n\tpublic void initialize() {\n\n\t\t...\n\n\t\tfinal Collection<Exchange> exchanges = filterDeclarables(contextExchanges);\n\t\tfinal Collection<Queue> queues = filterDeclarables(contextQueues);\n        // 这里过滤掉了shouldDeclare=false的binding\n\t\tfinal Collection<Binding> bindings = filterDeclarables(contextBindings);\n\n\t\t...\n\n\t\tthis.rabbitTemplate.execute(new ChannelCallback<Object>() {\n\n\t\t\t@Override\n\t\t\tpublic Object doInRabbit(Channel channel) throws Exception {\n\t\t\t\tdeclareExchanges(channel, exchanges.toArray(new Exchange[exchanges.size()]));\n\t\t\t\tdeclareQueues(channel, queues.toArray(new Queue[queues.size()]));\n                // 向rabbit声明binding的部分\n\t\t\t\tdeclareBindings(channel, bindings.toArray(new Binding[bindings.size()]));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\t\tthis.logger.debug(\"Declarations finished\");\n\n\t}\n```","source":"_posts/spring-rabbitmq-binding-trap.md","raw":"---\ntitle: Spring rabbitMQ binding配置的“陷阱”\ndate: 2022-06-14 20:31:59\ncategories: \n    - 基础姿势\n    - 框架和组件\ntags:\n\t- RabbitMQ\n\t- Spring\n---\n\n## Spring RabbitMQ bindings\n\n> exchange的`auto-declare`配置同时作用于binding，如果声明新的queue，但是绑定的exchange的auto-declare为false，则不会在既有的exchange上进行绑定\n\n```xml\n  <rabbit:queue id=\"queue0.id\" name=\"queue.0.name\"/>\n  <rabbit:fanout-exchange name=\"exchange.0.name\">\n    <rabbit:bindings>\n      <rabbit:binding queue=\"queue0.id\"/>\n    </rabbit:bindings>\n  </rabbit:fanout-exchange>\n```\n\n解析binding的入口：\n```java\n    protected void doParseBindings(Element element, ParserContext parserContext,\n\t\t\tString exchangeName, Element bindings, AbstractExchangeParser parser) {\n\t\tif (bindings != null) {\n\t\t\tfor (Element binding : DomUtils.getChildElementsByTagName(bindings, BINDING_ELE)) {\n                // 解析rabbit:binding\n\t\t\t\tBeanDefinitionBuilder bindingBuilder = parser.parseBinding(exchangeName, binding,\n\t\t\t\t\t\tparserContext);\n                // 这里是重点，解析bindings的时候，传入的是element，也就是rabbit:fanout-exchange对应的元素\n\t\t\t\tNamespaceUtils.parseDeclarationControls(element, bindingBuilder);\n\t\t\t\tBeanDefinition beanDefinition = bindingBuilder.getBeanDefinition();\n\t\t\t\tregisterBeanDefinition(new BeanDefinitionHolder(beanDefinition, parserContext.getReaderContext()\n\t\t\t\t\t\t.generateBeanName(beanDefinition)), parserContext.getRegistry());\n\t\t\t}\n\t\t}\n\t}\n```\n\n每个binding的自动声明`shouldDeclare`属性的设置：\n```java\n\t/**\n\t * Parses 'auto-declare' and 'declared-by' attributes.\n\t *\n\t * @param element The element.\n\t * @param builder The builder.\n\t */\n\tpublic static void parseDeclarationControls(Element element, BeanDefinitionBuilder builder) {\n        // 这里用exchange的auto-declare属性为每个binding设置shouldDeclare值\n\t\tNamespaceUtils.setValueIfAttributeDefined(builder, element, \"auto-declare\", \"shouldDeclare\");\n\t\tString admins = element.getAttribute(\"declared-by\");\n\t\tif (StringUtils.hasText(admins)) {\n\t\t\tString[] adminBeanNames = admins.split(\",\");\n\t\t\tManagedList<BeanReference> adminBeanRefs = new ManagedList<BeanReference>();\n\t\t\tfor (String adminBeanName : adminBeanNames) {\n\t\t\t\tadminBeanRefs.add(new RuntimeBeanReference(adminBeanName.trim()));\n\t\t\t}\n\t\t\tbuilder.addPropertyValue(\"adminsThatShouldDeclare\", adminBeanRefs);\n\t\t}\n\t\tNamespaceUtils.setValueIfAttributeDefined(builder, element, \"ignore-declaration-exceptions\");\n\t}\n```\n\n`shouldDeclare`在声明中的作用:\n```java\n\n\t/**\n\t * Remove any instances that should not be declared by this admin.\n\t * @param declarables the collection of {@link Declarable}s.\n\t * @return a new collection containing {@link Declarable}s that should be declared by this\n\t * admin.\n\t */\n\tprivate <T extends Declarable> Collection<T> filterDeclarables(Collection<T> declarables) {\n\t\tCollection<T> filtered = new ArrayList<T>();\n\t\tfor (T declarable : declarables) {\n\t\t\tCollection<?> adminsWithWhichToDeclare = declarable.getDeclaringAdmins();\n            // 此处只保留shouldDeclare=true的bean\n\t\t\tif (declarable.shouldDeclare() &&\n\t\t\t\t\t(adminsWithWhichToDeclare.isEmpty() || adminsWithWhichToDeclare.contains(this))) {\n\t\t\t\tfiltered.add(declarable);\n\t\t\t}\n\t\t}\n\t\treturn filtered;\n\t}\n```\n\n初始化的部分：\n```java\n\n\t/**\n\t * Declares all the exchanges, queues and bindings in the enclosing application context, if any. It should be safe\n\t * (but unnecessary) to call this method more than once.\n\t */\n\tpublic void initialize() {\n\n\t\t...\n\n\t\tfinal Collection<Exchange> exchanges = filterDeclarables(contextExchanges);\n\t\tfinal Collection<Queue> queues = filterDeclarables(contextQueues);\n        // 这里过滤掉了shouldDeclare=false的binding\n\t\tfinal Collection<Binding> bindings = filterDeclarables(contextBindings);\n\n\t\t...\n\n\t\tthis.rabbitTemplate.execute(new ChannelCallback<Object>() {\n\n\t\t\t@Override\n\t\t\tpublic Object doInRabbit(Channel channel) throws Exception {\n\t\t\t\tdeclareExchanges(channel, exchanges.toArray(new Exchange[exchanges.size()]));\n\t\t\t\tdeclareQueues(channel, queues.toArray(new Queue[queues.size()]));\n                // 向rabbit声明binding的部分\n\t\t\t\tdeclareBindings(channel, bindings.toArray(new Binding[bindings.size()]));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\t\tthis.logger.debug(\"Declarations finished\");\n\n\t}\n```","slug":"spring-rabbitmq-binding-trap","published":1,"updated":"2023-03-17T02:30:47.732Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdtg004rxtuj5kwgfgyj","content":"<h2 id=\"Spring-RabbitMQ-bindings\"><a href=\"#Spring-RabbitMQ-bindings\" class=\"headerlink\" title=\"Spring RabbitMQ bindings\"></a>Spring RabbitMQ bindings</h2><blockquote>\n<p>exchange的<code>auto-declare</code>配置同时作用于binding，如果声明新的queue，但是绑定的exchange的auto-declare为false，则不会在既有的exchange上进行绑定</p>\n</blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">rabbit:</span>queue</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>queue0.id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>queue.0.name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">rabbit:</span>fanout-exchange</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>exchange.0.name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">rabbit:</span>bindings</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">rabbit:</span>binding</span> <span class=\"token attr-name\">queue</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>queue0.id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">rabbit:</span>bindings</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">rabbit:</span>fanout-exchange</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>解析binding的入口：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">   <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doParseBindings</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span> element<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ParserContext</span> parserContext<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token class-name\">String</span> exchangeName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Element</span> bindings<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AbstractExchangeParser</span> parser<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bindings <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span> binding <span class=\"token operator\">:</span> <span class=\"token class-name\">DomUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getChildElementsByTagName</span><span class=\"token punctuation\">(</span>bindings<span class=\"token punctuation\">,</span> <span class=\"token constant\">BINDING_ELE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n               <span class=\"token comment\">// 解析rabbit:binding</span>\n\t\t\t<span class=\"token class-name\">BeanDefinitionBuilder</span> bindingBuilder <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseBinding</span><span class=\"token punctuation\">(</span>exchangeName<span class=\"token punctuation\">,</span> binding<span class=\"token punctuation\">,</span>\n\t\t\t\t\tparserContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n               <span class=\"token comment\">// 这里是重点，解析bindings的时候，传入的是element，也就是rabbit:fanout-exchange对应的元素</span>\n\t\t\t<span class=\"token class-name\">NamespaceUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDeclarationControls</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> bindingBuilder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">BeanDefinition</span> beanDefinition <span class=\"token operator\">=</span> bindingBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanDefinition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">registerBeanDefinition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BeanDefinitionHolder</span><span class=\"token punctuation\">(</span>beanDefinition<span class=\"token punctuation\">,</span> parserContext<span class=\"token punctuation\">.</span><span class=\"token function\">getReaderContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">generateBeanName</span><span class=\"token punctuation\">(</span>beanDefinition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> parserContext<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>每个binding的自动声明<code>shouldDeclare</code>属性的设置：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * Parses 'auto-declare' and 'declared-by' attributes.\n *\n * @param element The element.\n * @param builder The builder.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">parseDeclarationControls</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span> element<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BeanDefinitionBuilder</span> builder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token comment\">// 这里用exchange的auto-declare属性为每个binding设置shouldDeclare值</span>\n\t<span class=\"token class-name\">NamespaceUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">setValueIfAttributeDefined</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">,</span> <span class=\"token string\">\"auto-declare\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"shouldDeclare\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">String</span> admins <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"declared-by\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasText</span><span class=\"token punctuation\">(</span>admins<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> adminBeanNames <span class=\"token operator\">=</span> admins<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">ManagedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BeanReference</span><span class=\"token punctuation\">></span></span> adminBeanRefs <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ManagedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BeanReference</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> adminBeanName <span class=\"token operator\">:</span> adminBeanNames<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tadminBeanRefs<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeBeanReference</span><span class=\"token punctuation\">(</span>adminBeanName<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\tbuilder<span class=\"token punctuation\">.</span><span class=\"token function\">addPropertyValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"adminsThatShouldDeclare\"</span><span class=\"token punctuation\">,</span> adminBeanRefs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token class-name\">NamespaceUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">setValueIfAttributeDefined</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ignore-declaration-exceptions\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>shouldDeclare</code>在声明中的作用:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\n<span class=\"token comment\">/**\n * Remove any instances that should not be declared by this admin.\n * @param declarables the collection of &#123;@link Declarable&#125;s.\n * @return a new collection containing &#123;@link Declarable&#125;s that should be declared by this\n * admin.\n */</span>\n<span class=\"token keyword\">private</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Declarable</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">filterDeclarables</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> declarables<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> filtered <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> declarable <span class=\"token operator\">:</span> declarables<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> adminsWithWhichToDeclare <span class=\"token operator\">=</span> declarable<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaringAdmins</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token comment\">// 此处只保留shouldDeclare=true的bean</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>declarable<span class=\"token punctuation\">.</span><span class=\"token function\">shouldDeclare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n\t\t\t\t<span class=\"token punctuation\">(</span>adminsWithWhichToDeclare<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> adminsWithWhichToDeclare<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tfiltered<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>declarable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">return</span> filtered<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>初始化的部分：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\n<span class=\"token comment\">/**\n * Declares all the exchanges, queues and bindings in the enclosing application context, if any. It should be safe\n * (but unnecessary) to call this method more than once.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n\t<span class=\"token keyword\">final</span> <span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Exchange</span><span class=\"token punctuation\">></span></span> exchanges <span class=\"token operator\">=</span> <span class=\"token function\">filterDeclarables</span><span class=\"token punctuation\">(</span>contextExchanges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">final</span> <span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Queue</span><span class=\"token punctuation\">></span></span> queues <span class=\"token operator\">=</span> <span class=\"token function\">filterDeclarables</span><span class=\"token punctuation\">(</span>contextQueues<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">// 这里过滤掉了shouldDeclare=false的binding</span>\n\t<span class=\"token keyword\">final</span> <span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Binding</span><span class=\"token punctuation\">></span></span> bindings <span class=\"token operator\">=</span> <span class=\"token function\">filterDeclarables</span><span class=\"token punctuation\">(</span>contextBindings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ChannelCallback</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n\t\t<span class=\"token annotation punctuation\">@Override</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">doInRabbit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Channel</span> channel<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token function\">declareExchanges</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> exchanges<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Exchange</span><span class=\"token punctuation\">[</span>exchanges<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">declareQueues</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> queues<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Queue</span><span class=\"token punctuation\">[</span>queues<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n               <span class=\"token comment\">// 向rabbit声明binding的部分</span>\n\t\t\t<span class=\"token function\">declareBindings</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> bindings<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Binding</span><span class=\"token punctuation\">[</span>bindings<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Declarations finished\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<h2 id=\"Spring-RabbitMQ-bindings\"><a href=\"#Spring-RabbitMQ-bindings\" class=\"headerlink\" title=\"Spring RabbitMQ bindings\"></a>Spring RabbitMQ bindings</h2><blockquote>\n<p>exchange的<code>auto-declare</code>配置同时作用于binding，如果声明新的queue，但是绑定的exchange的auto-declare为false，则不会在既有的exchange上进行绑定</p>\n</blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">rabbit:</span>queue</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>queue0.id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>queue.0.name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">rabbit:</span>fanout-exchange</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>exchange.0.name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">rabbit:</span>bindings</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">rabbit:</span>binding</span> <span class=\"token attr-name\">queue</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>queue0.id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">rabbit:</span>bindings</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">rabbit:</span>fanout-exchange</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>解析binding的入口：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">   <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doParseBindings</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span> element<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ParserContext</span> parserContext<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token class-name\">String</span> exchangeName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Element</span> bindings<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AbstractExchangeParser</span> parser<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bindings <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span> binding <span class=\"token operator\">:</span> <span class=\"token class-name\">DomUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getChildElementsByTagName</span><span class=\"token punctuation\">(</span>bindings<span class=\"token punctuation\">,</span> <span class=\"token constant\">BINDING_ELE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n               <span class=\"token comment\">// 解析rabbit:binding</span>\n\t\t\t<span class=\"token class-name\">BeanDefinitionBuilder</span> bindingBuilder <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseBinding</span><span class=\"token punctuation\">(</span>exchangeName<span class=\"token punctuation\">,</span> binding<span class=\"token punctuation\">,</span>\n\t\t\t\t\tparserContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n               <span class=\"token comment\">// 这里是重点，解析bindings的时候，传入的是element，也就是rabbit:fanout-exchange对应的元素</span>\n\t\t\t<span class=\"token class-name\">NamespaceUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDeclarationControls</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> bindingBuilder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">BeanDefinition</span> beanDefinition <span class=\"token operator\">=</span> bindingBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanDefinition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">registerBeanDefinition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BeanDefinitionHolder</span><span class=\"token punctuation\">(</span>beanDefinition<span class=\"token punctuation\">,</span> parserContext<span class=\"token punctuation\">.</span><span class=\"token function\">getReaderContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">generateBeanName</span><span class=\"token punctuation\">(</span>beanDefinition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> parserContext<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>每个binding的自动声明<code>shouldDeclare</code>属性的设置：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * Parses 'auto-declare' and 'declared-by' attributes.\n *\n * @param element The element.\n * @param builder The builder.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">parseDeclarationControls</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span> element<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BeanDefinitionBuilder</span> builder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token comment\">// 这里用exchange的auto-declare属性为每个binding设置shouldDeclare值</span>\n\t<span class=\"token class-name\">NamespaceUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">setValueIfAttributeDefined</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">,</span> <span class=\"token string\">\"auto-declare\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"shouldDeclare\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">String</span> admins <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"declared-by\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasText</span><span class=\"token punctuation\">(</span>admins<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> adminBeanNames <span class=\"token operator\">=</span> admins<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">ManagedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BeanReference</span><span class=\"token punctuation\">></span></span> adminBeanRefs <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ManagedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BeanReference</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> adminBeanName <span class=\"token operator\">:</span> adminBeanNames<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tadminBeanRefs<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeBeanReference</span><span class=\"token punctuation\">(</span>adminBeanName<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\tbuilder<span class=\"token punctuation\">.</span><span class=\"token function\">addPropertyValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"adminsThatShouldDeclare\"</span><span class=\"token punctuation\">,</span> adminBeanRefs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token class-name\">NamespaceUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">setValueIfAttributeDefined</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ignore-declaration-exceptions\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>shouldDeclare</code>在声明中的作用:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\n<span class=\"token comment\">/**\n * Remove any instances that should not be declared by this admin.\n * @param declarables the collection of &#123;@link Declarable&#125;s.\n * @return a new collection containing &#123;@link Declarable&#125;s that should be declared by this\n * admin.\n */</span>\n<span class=\"token keyword\">private</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Declarable</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">filterDeclarables</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> declarables<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> filtered <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> declarable <span class=\"token operator\">:</span> declarables<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> adminsWithWhichToDeclare <span class=\"token operator\">=</span> declarable<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaringAdmins</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token comment\">// 此处只保留shouldDeclare=true的bean</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>declarable<span class=\"token punctuation\">.</span><span class=\"token function\">shouldDeclare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n\t\t\t\t<span class=\"token punctuation\">(</span>adminsWithWhichToDeclare<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> adminsWithWhichToDeclare<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tfiltered<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>declarable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">return</span> filtered<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>初始化的部分：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\n<span class=\"token comment\">/**\n * Declares all the exchanges, queues and bindings in the enclosing application context, if any. It should be safe\n * (but unnecessary) to call this method more than once.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n\t<span class=\"token keyword\">final</span> <span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Exchange</span><span class=\"token punctuation\">></span></span> exchanges <span class=\"token operator\">=</span> <span class=\"token function\">filterDeclarables</span><span class=\"token punctuation\">(</span>contextExchanges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">final</span> <span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Queue</span><span class=\"token punctuation\">></span></span> queues <span class=\"token operator\">=</span> <span class=\"token function\">filterDeclarables</span><span class=\"token punctuation\">(</span>contextQueues<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">// 这里过滤掉了shouldDeclare=false的binding</span>\n\t<span class=\"token keyword\">final</span> <span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Binding</span><span class=\"token punctuation\">></span></span> bindings <span class=\"token operator\">=</span> <span class=\"token function\">filterDeclarables</span><span class=\"token punctuation\">(</span>contextBindings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ChannelCallback</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n\t\t<span class=\"token annotation punctuation\">@Override</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">doInRabbit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Channel</span> channel<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token function\">declareExchanges</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> exchanges<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Exchange</span><span class=\"token punctuation\">[</span>exchanges<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">declareQueues</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> queues<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Queue</span><span class=\"token punctuation\">[</span>queues<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n               <span class=\"token comment\">// 向rabbit声明binding的部分</span>\n\t\t\t<span class=\"token function\">declareBindings</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> bindings<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Binding</span><span class=\"token punctuation\">[</span>bindings<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Declarations finished\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"Heap 堆","date":"2022-08-02T11:55:49.000Z","_content":"## [Heap](https://zh.wikipedia.org/wiki/%E5%A0%86%E7%A9%8D)\n[完全二叉树](https://zh.wikipedia.org/wiki/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91)，且任意一个点的父节点都大于（小于）子节点。\n\n## Max Heap & Min Heap\n最大/最小堆指的是堆顶（根节点）是最大还是最小。\n\n## 实现\n\n### 数据结构\n堆也是完全二叉树，所以除了可以用节点/指针的方式来实现：\n```java\nclass Heap{\n    Node root;\n}\n\nclass Node{\n    int val;\n    Node left;\n    Node right;\n}\n```\n也可以用数组来实现：\n```java\nclass Heap{\n    int[] values;\n}\n```\n用数组实现时：\n\n![max heap example](lc-heap/max-heap-example.drawio.png)\n\n父子节点的位置关系：\n```java\nint parentOffset(int childOffset){\n    return childOffset / 2;\n}\n\nint leftChildOffset(int parentOffset){\n    return parentOffset * 2 + 1;\n}\n\nint rightChildOffset(int parentOffset){\n    return parentOffset * 2 + 2;\n}\n```\n\n### 插入\n从尾部插入，然后跟父节点比较，不满足最大（最小）二叉堆性质则交换位置直到满足性质或者达到最顶部：\n\n![min heap insertion, 19 is smaller than 29](lc-heap/min-heap-insertion.0.drawio.png)\n\n![min heap insertion, 19 is smaller than 22](lc-heap/min-heap-insertion.1.drawio.png)\n\n![min heap insertion, compare 19 with 18](lc-heap/min-heap-insertion.2.drawio.png)\n\n![min heap insertion, 19 is bigger than 18](lc-heap/min-heap-insertion.3.drawio.png)\n\n```java\n// min heap\nvoid insert(int val){\n    if(isFull()) resize();\n    int offset = size, parentOffset = parentOffset(offset);\n    // 先插入到尾部\n    values[offset] = val;\n    // 与父节点对比交换\n    while(values[parentOffset] > value[offset]){\n        // sift(int, int)\n        int tmp = values[parentOffset];\n        values[offset] = tmp;\n        values[parentOffset] = val;\n    }\n    size++;\n}\n\n// 扩容\nvoid resize(){\n    // ...\n}\n```\n\n插入的元素从底部向上的这个过程可以称作：percolate up（上滤）\n\n### 删除顶部\n删除顶部节点后需要重新调整原来的子树，比如：\n\n![min heap deletion](lc-heap/min-heap-deletion.0.drawio.png)\n\n![min heap deletion](lc-heap/min-heap-deletion.1.drawio.png)\n\n每次移动节点的时候会出现空缺，原来的子节点都需要比较然后向前移动，比较麻烦，那么可以换种策略，在删除顶部节点后将最后一个节点移动到顶部，然后从上向下比较交换节点直到恢复堆性质：\n\n![min heap deletion optimization](lc-heap/min-heap-deletion-opt.0.drawio.png)\n\n![min heap deletion optimization](lc-heap/min-heap-deletion-opt.1.drawio.png)\n\n![min heap deletion optimization](lc-heap/min-heap-deletion-opt.2.drawio.png)\n\n![min heap deletion optimization](lc-heap/min-heap-deletion-opt.3.drawio.png)\n\n从上向下比较交换的时候需要同时比较左右两个字节点，要与两个字节点中最小（最大）的交换来恢复堆性质。\n\n```java\n// min heap\nint deleteMin(){\n    if(isEmpty()) return -1;\n    // 将尾部插入到顶部\n    int offset = 0, leftChildOffset = -1, rightChildOffset = -1;\n    int min = values[offset];\n    values[offset] = values[size - 1];\n    // 和左右子节点对比交换\n    // *note: 这里要校验是否存在左右节点\n    while(values[offset] > values[(leftChildOffset = leftChildOffset(offset))] ||\n        values[offset] > values[(rightChildOffset = rightChildeOffset(offset))]){\n            if(values[leftChildOffset] > values[rightChildOffset]){\n                // 左<右\n                if(values[leftChildOffset] > values[offset]){\n                    // 左<顶\n                    sift(offset, leftChildOffset);\n                    offset = leftChildOffset;\n                }\n            }else{\n                // 右<左\n                if(values[rightChildOffset] > values[offset]){\n                    // 右<顶\n                    sift(offset, rightChildOffset);\n                    offset = rightChildOffset;\n                }\n            }\n    }\n    size--;\n    return min;\n}\n\n// 交换元素\nvoid sift(int offset, int otherOffset){\n    // ...\n}\n```\n\n删除顶部元素的这个从顶部向下交换的过程称作：percolate down（下滤）\n","source":"_posts/lc-heap.md","raw":"---\ntitle: Heap 堆\ndate: 2022-08-02 19:55:49\ntags:\n    - data structures\n    - leetcode\n    - algorithm\ncategories:\n    - 伸展运动\n    - 数据结构\n---\n## [Heap](https://zh.wikipedia.org/wiki/%E5%A0%86%E7%A9%8D)\n[完全二叉树](https://zh.wikipedia.org/wiki/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91)，且任意一个点的父节点都大于（小于）子节点。\n\n## Max Heap & Min Heap\n最大/最小堆指的是堆顶（根节点）是最大还是最小。\n\n## 实现\n\n### 数据结构\n堆也是完全二叉树，所以除了可以用节点/指针的方式来实现：\n```java\nclass Heap{\n    Node root;\n}\n\nclass Node{\n    int val;\n    Node left;\n    Node right;\n}\n```\n也可以用数组来实现：\n```java\nclass Heap{\n    int[] values;\n}\n```\n用数组实现时：\n\n![max heap example](lc-heap/max-heap-example.drawio.png)\n\n父子节点的位置关系：\n```java\nint parentOffset(int childOffset){\n    return childOffset / 2;\n}\n\nint leftChildOffset(int parentOffset){\n    return parentOffset * 2 + 1;\n}\n\nint rightChildOffset(int parentOffset){\n    return parentOffset * 2 + 2;\n}\n```\n\n### 插入\n从尾部插入，然后跟父节点比较，不满足最大（最小）二叉堆性质则交换位置直到满足性质或者达到最顶部：\n\n![min heap insertion, 19 is smaller than 29](lc-heap/min-heap-insertion.0.drawio.png)\n\n![min heap insertion, 19 is smaller than 22](lc-heap/min-heap-insertion.1.drawio.png)\n\n![min heap insertion, compare 19 with 18](lc-heap/min-heap-insertion.2.drawio.png)\n\n![min heap insertion, 19 is bigger than 18](lc-heap/min-heap-insertion.3.drawio.png)\n\n```java\n// min heap\nvoid insert(int val){\n    if(isFull()) resize();\n    int offset = size, parentOffset = parentOffset(offset);\n    // 先插入到尾部\n    values[offset] = val;\n    // 与父节点对比交换\n    while(values[parentOffset] > value[offset]){\n        // sift(int, int)\n        int tmp = values[parentOffset];\n        values[offset] = tmp;\n        values[parentOffset] = val;\n    }\n    size++;\n}\n\n// 扩容\nvoid resize(){\n    // ...\n}\n```\n\n插入的元素从底部向上的这个过程可以称作：percolate up（上滤）\n\n### 删除顶部\n删除顶部节点后需要重新调整原来的子树，比如：\n\n![min heap deletion](lc-heap/min-heap-deletion.0.drawio.png)\n\n![min heap deletion](lc-heap/min-heap-deletion.1.drawio.png)\n\n每次移动节点的时候会出现空缺，原来的子节点都需要比较然后向前移动，比较麻烦，那么可以换种策略，在删除顶部节点后将最后一个节点移动到顶部，然后从上向下比较交换节点直到恢复堆性质：\n\n![min heap deletion optimization](lc-heap/min-heap-deletion-opt.0.drawio.png)\n\n![min heap deletion optimization](lc-heap/min-heap-deletion-opt.1.drawio.png)\n\n![min heap deletion optimization](lc-heap/min-heap-deletion-opt.2.drawio.png)\n\n![min heap deletion optimization](lc-heap/min-heap-deletion-opt.3.drawio.png)\n\n从上向下比较交换的时候需要同时比较左右两个字节点，要与两个字节点中最小（最大）的交换来恢复堆性质。\n\n```java\n// min heap\nint deleteMin(){\n    if(isEmpty()) return -1;\n    // 将尾部插入到顶部\n    int offset = 0, leftChildOffset = -1, rightChildOffset = -1;\n    int min = values[offset];\n    values[offset] = values[size - 1];\n    // 和左右子节点对比交换\n    // *note: 这里要校验是否存在左右节点\n    while(values[offset] > values[(leftChildOffset = leftChildOffset(offset))] ||\n        values[offset] > values[(rightChildOffset = rightChildeOffset(offset))]){\n            if(values[leftChildOffset] > values[rightChildOffset]){\n                // 左<右\n                if(values[leftChildOffset] > values[offset]){\n                    // 左<顶\n                    sift(offset, leftChildOffset);\n                    offset = leftChildOffset;\n                }\n            }else{\n                // 右<左\n                if(values[rightChildOffset] > values[offset]){\n                    // 右<顶\n                    sift(offset, rightChildOffset);\n                    offset = rightChildOffset;\n                }\n            }\n    }\n    size--;\n    return min;\n}\n\n// 交换元素\nvoid sift(int offset, int otherOffset){\n    // ...\n}\n```\n\n删除顶部元素的这个从顶部向下交换的过程称作：percolate down（下滤）\n","slug":"lc-heap","published":1,"updated":"2023-03-17T02:30:47.717Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdth004sxtuj1ij92a84","content":"<h2 id=\"Heap\"><a href=\"#Heap\" class=\"headerlink\" title=\"Heap\"></a><a href=\"https://zh.wikipedia.org/wiki/%E5%A0%86%E7%A9%8D\">Heap</a></h2><p><a href=\"https://zh.wikipedia.org/wiki/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91\">完全二叉树</a>，且任意一个点的父节点都大于（小于）子节点。</p>\n<h2 id=\"Max-Heap-amp-Min-Heap\"><a href=\"#Max-Heap-amp-Min-Heap\" class=\"headerlink\" title=\"Max Heap &amp; Min Heap\"></a>Max Heap &amp; Min Heap</h2><p>最大&#x2F;最小堆指的是堆顶（根节点）是最大还是最小。</p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><h3 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h3><p>堆也是完全二叉树，所以除了可以用节点&#x2F;指针的方式来实现：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Heap</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Node</span> root<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> val<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Node</span> left<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Node</span> right<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>也可以用数组来实现：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Heap</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> values<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>用数组实现时：</p>\n<p><img src=\"/2022/08/02/lc-heap/max-heap-example.drawio.png\" alt=\"max heap example\"></p>\n<p>父子节点的位置关系：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> <span class=\"token function\">parentOffset</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> childOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> childOffset <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">leftChildOffset</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> parentOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> parentOffset <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">rightChildOffset</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> parentOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> parentOffset <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"插入\"><a href=\"#插入\" class=\"headerlink\" title=\"插入\"></a>插入</h3><p>从尾部插入，然后跟父节点比较，不满足最大（最小）二叉堆性质则交换位置直到满足性质或者达到最顶部：</p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-insertion.0.drawio.png\" alt=\"min heap insertion, 19 is smaller than 29\"></p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-insertion.1.drawio.png\" alt=\"min heap insertion, 19 is smaller than 22\"></p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-insertion.2.drawio.png\" alt=\"min heap insertion, compare 19 with 18\"></p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-insertion.3.drawio.png\" alt=\"min heap insertion, 19 is bigger than 18\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// min heap</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isFull</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> offset <span class=\"token operator\">=</span> size<span class=\"token punctuation\">,</span> parentOffset <span class=\"token operator\">=</span> <span class=\"token function\">parentOffset</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 先插入到尾部</span>\n    values<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 与父节点对比交换</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span>parentOffset<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> value<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// sift(int, int)</span>\n        <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> values<span class=\"token punctuation\">[</span>parentOffset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        values<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n        values<span class=\"token punctuation\">[</span>parentOffset<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    size<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 扩容</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>插入的元素从底部向上的这个过程可以称作：percolate up（上滤）</p>\n<h3 id=\"删除顶部\"><a href=\"#删除顶部\" class=\"headerlink\" title=\"删除顶部\"></a>删除顶部</h3><p>删除顶部节点后需要重新调整原来的子树，比如：</p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-deletion.0.drawio.png\" alt=\"min heap deletion\"></p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-deletion.1.drawio.png\" alt=\"min heap deletion\"></p>\n<p>每次移动节点的时候会出现空缺，原来的子节点都需要比较然后向前移动，比较麻烦，那么可以换种策略，在删除顶部节点后将最后一个节点移动到顶部，然后从上向下比较交换节点直到恢复堆性质：</p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-deletion-opt.0.drawio.png\" alt=\"min heap deletion optimization\"></p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-deletion-opt.1.drawio.png\" alt=\"min heap deletion optimization\"></p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-deletion-opt.2.drawio.png\" alt=\"min heap deletion optimization\"></p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-deletion-opt.3.drawio.png\" alt=\"min heap deletion optimization\"></p>\n<p>从上向下比较交换的时候需要同时比较左右两个字节点，要与两个字节点中最小（最大）的交换来恢复堆性质。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// min heap</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">deleteMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 将尾部插入到顶部</span>\n    <span class=\"token keyword\">int</span> offset <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> leftChildOffset <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> rightChildOffset <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> min <span class=\"token operator\">=</span> values<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    values<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> values<span class=\"token punctuation\">[</span>size <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 和左右子节点对比交换</span>\n    <span class=\"token comment\">// *note: 这里要校验是否存在左右节点</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> values<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>leftChildOffset <span class=\"token operator\">=</span> <span class=\"token function\">leftChildOffset</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span>\n        values<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> values<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>rightChildOffset <span class=\"token operator\">=</span> <span class=\"token function\">rightChildeOffset</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span>leftChildOffset<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> values<span class=\"token punctuation\">[</span>rightChildOffset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 左&lt;右</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span>leftChildOffset<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> values<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token comment\">// 左&lt;顶</span>\n                    <span class=\"token function\">sift</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span> leftChildOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    offset <span class=\"token operator\">=</span> leftChildOffset<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 右&lt;左</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span>rightChildOffset<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> values<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token comment\">// 右&lt;顶</span>\n                    <span class=\"token function\">sift</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span> rightChildOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    offset <span class=\"token operator\">=</span> rightChildOffset<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    size<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> min<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 交换元素</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">sift</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> offset<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> otherOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>删除顶部元素的这个从顶部向下交换的过程称作：percolate down（下滤）</p>\n","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<h2 id=\"Heap\"><a href=\"#Heap\" class=\"headerlink\" title=\"Heap\"></a><a href=\"https://zh.wikipedia.org/wiki/%E5%A0%86%E7%A9%8D\">Heap</a></h2><p><a href=\"https://zh.wikipedia.org/wiki/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91\">完全二叉树</a>，且任意一个点的父节点都大于（小于）子节点。</p>\n<h2 id=\"Max-Heap-amp-Min-Heap\"><a href=\"#Max-Heap-amp-Min-Heap\" class=\"headerlink\" title=\"Max Heap &amp; Min Heap\"></a>Max Heap &amp; Min Heap</h2><p>最大&#x2F;最小堆指的是堆顶（根节点）是最大还是最小。</p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><h3 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h3><p>堆也是完全二叉树，所以除了可以用节点&#x2F;指针的方式来实现：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Heap</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Node</span> root<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> val<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Node</span> left<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Node</span> right<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>也可以用数组来实现：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Heap</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> values<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>用数组实现时：</p>\n<p><img src=\"/2022/08/02/lc-heap/max-heap-example.drawio.png\" alt=\"max heap example\"></p>\n<p>父子节点的位置关系：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> <span class=\"token function\">parentOffset</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> childOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> childOffset <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">leftChildOffset</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> parentOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> parentOffset <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">rightChildOffset</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> parentOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> parentOffset <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"插入\"><a href=\"#插入\" class=\"headerlink\" title=\"插入\"></a>插入</h3><p>从尾部插入，然后跟父节点比较，不满足最大（最小）二叉堆性质则交换位置直到满足性质或者达到最顶部：</p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-insertion.0.drawio.png\" alt=\"min heap insertion, 19 is smaller than 29\"></p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-insertion.1.drawio.png\" alt=\"min heap insertion, 19 is smaller than 22\"></p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-insertion.2.drawio.png\" alt=\"min heap insertion, compare 19 with 18\"></p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-insertion.3.drawio.png\" alt=\"min heap insertion, 19 is bigger than 18\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// min heap</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isFull</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> offset <span class=\"token operator\">=</span> size<span class=\"token punctuation\">,</span> parentOffset <span class=\"token operator\">=</span> <span class=\"token function\">parentOffset</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 先插入到尾部</span>\n    values<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 与父节点对比交换</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span>parentOffset<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> value<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// sift(int, int)</span>\n        <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> values<span class=\"token punctuation\">[</span>parentOffset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        values<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n        values<span class=\"token punctuation\">[</span>parentOffset<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    size<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 扩容</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>插入的元素从底部向上的这个过程可以称作：percolate up（上滤）</p>\n<h3 id=\"删除顶部\"><a href=\"#删除顶部\" class=\"headerlink\" title=\"删除顶部\"></a>删除顶部</h3><p>删除顶部节点后需要重新调整原来的子树，比如：</p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-deletion.0.drawio.png\" alt=\"min heap deletion\"></p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-deletion.1.drawio.png\" alt=\"min heap deletion\"></p>\n<p>每次移动节点的时候会出现空缺，原来的子节点都需要比较然后向前移动，比较麻烦，那么可以换种策略，在删除顶部节点后将最后一个节点移动到顶部，然后从上向下比较交换节点直到恢复堆性质：</p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-deletion-opt.0.drawio.png\" alt=\"min heap deletion optimization\"></p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-deletion-opt.1.drawio.png\" alt=\"min heap deletion optimization\"></p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-deletion-opt.2.drawio.png\" alt=\"min heap deletion optimization\"></p>\n<p><img src=\"/2022/08/02/lc-heap/min-heap-deletion-opt.3.drawio.png\" alt=\"min heap deletion optimization\"></p>\n<p>从上向下比较交换的时候需要同时比较左右两个字节点，要与两个字节点中最小（最大）的交换来恢复堆性质。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// min heap</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">deleteMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 将尾部插入到顶部</span>\n    <span class=\"token keyword\">int</span> offset <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> leftChildOffset <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> rightChildOffset <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> min <span class=\"token operator\">=</span> values<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    values<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> values<span class=\"token punctuation\">[</span>size <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 和左右子节点对比交换</span>\n    <span class=\"token comment\">// *note: 这里要校验是否存在左右节点</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> values<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>leftChildOffset <span class=\"token operator\">=</span> <span class=\"token function\">leftChildOffset</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span>\n        values<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> values<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>rightChildOffset <span class=\"token operator\">=</span> <span class=\"token function\">rightChildeOffset</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span>leftChildOffset<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> values<span class=\"token punctuation\">[</span>rightChildOffset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 左&lt;右</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span>leftChildOffset<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> values<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token comment\">// 左&lt;顶</span>\n                    <span class=\"token function\">sift</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span> leftChildOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    offset <span class=\"token operator\">=</span> leftChildOffset<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 右&lt;左</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span>rightChildOffset<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> values<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token comment\">// 右&lt;顶</span>\n                    <span class=\"token function\">sift</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span> rightChildOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    offset <span class=\"token operator\">=</span> rightChildOffset<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    size<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> min<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 交换元素</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">sift</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> offset<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> otherOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>删除顶部元素的这个从顶部向下交换的过程称作：percolate down（下滤）</p>\n"},{"title":"用Spring工具解析带fragment的Url时异常","date":"2022-07-20T05:39:02.000Z","_content":"## 现象\n用[UriComponents](/2022/06/14/useful-utils/index.html#UriComponents)解析url的时候报`IllegalArgumentException`。\n\n传入解析的url：`www.xxxx.com/p#/f`，特点是带上了fragment`#/f`\n\n* [RFC3986](https://datatracker.ietf.org/doc/html/rfc3986)\n\n![RFC3986](url-parsing-issue/rfc3986_url_segments.png)\n\n### 原因\n\n`fromHttpUrl(String)`的匹配规则是：\n- PATH部分不允许`?`或`#`出现\n- `?`后作为一个整体\n\n也就是`www.xxxx.com/p#/f`里`/p`被解析为了path部分，`#/f`是不合法的部分。而`www.xxxx.com/p?#/f`这种是可以的，其中`?#/f`被解析为一个整体。\n\n![5.2.8之前的spring解析url的匹配规则](url-parsing-issue/uriComponents_parsing_regex.png)\n\n\n[ISSUE#25300](https://github.com/spring-projects/spring-framework/issues/25300) : Support fragments in UriComponentsBuilder.fromHttpUrl() \n\n在`5.2.8.RELEASE`中spring已经将修复代码合并：\n![commit](url-parsing-issue/spring-issue-commit.png)\n\n## 解决\n\n1. 升级spring到5.2.8.RELEASE及以上版本\n2. 用`fromUriString(String)`替换`fromHttpUrl(String)`，schema的部分自行判断一下","source":"_posts/url-parsing-issue.md","raw":"---\ntitle: 用Spring工具解析带fragment的Url时异常\ndate: 2022-07-20 13:39:02\ncategories:\n    - 群英荟萃\n    - BUG草集\ntags:\n    - Spring\n    - URI\n    - issue\n---\n## 现象\n用[UriComponents](/2022/06/14/useful-utils/index.html#UriComponents)解析url的时候报`IllegalArgumentException`。\n\n传入解析的url：`www.xxxx.com/p#/f`，特点是带上了fragment`#/f`\n\n* [RFC3986](https://datatracker.ietf.org/doc/html/rfc3986)\n\n![RFC3986](url-parsing-issue/rfc3986_url_segments.png)\n\n### 原因\n\n`fromHttpUrl(String)`的匹配规则是：\n- PATH部分不允许`?`或`#`出现\n- `?`后作为一个整体\n\n也就是`www.xxxx.com/p#/f`里`/p`被解析为了path部分，`#/f`是不合法的部分。而`www.xxxx.com/p?#/f`这种是可以的，其中`?#/f`被解析为一个整体。\n\n![5.2.8之前的spring解析url的匹配规则](url-parsing-issue/uriComponents_parsing_regex.png)\n\n\n[ISSUE#25300](https://github.com/spring-projects/spring-framework/issues/25300) : Support fragments in UriComponentsBuilder.fromHttpUrl() \n\n在`5.2.8.RELEASE`中spring已经将修复代码合并：\n![commit](url-parsing-issue/spring-issue-commit.png)\n\n## 解决\n\n1. 升级spring到5.2.8.RELEASE及以上版本\n2. 用`fromUriString(String)`替换`fromHttpUrl(String)`，schema的部分自行判断一下","slug":"url-parsing-issue","published":1,"updated":"2023-03-17T02:30:47.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdth004vxtujeju65zw1","content":"<h2 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h2><p>用<a href=\"/2022/06/14/useful-utils/index.html#UriComponents\">UriComponents</a>解析url的时候报<code>IllegalArgumentException</code>。</p>\n<p>传入解析的url：<code>www.xxxx.com/p#/f</code>，特点是带上了fragment<code>#/f</code></p>\n<ul>\n<li><a href=\"https://datatracker.ietf.org/doc/html/rfc3986\">RFC3986</a></li>\n</ul>\n<p><img src=\"/2022/07/20/url-parsing-issue/rfc3986_url_segments.png\" alt=\"RFC3986\"></p>\n<h3 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h3><p><code>fromHttpUrl(String)</code>的匹配规则是：</p>\n<ul>\n<li>PATH部分不允许<code>?</code>或<code>#</code>出现</li>\n<li><code>?</code>后作为一个整体</li>\n</ul>\n<p>也就是<code>www.xxxx.com/p#/f</code>里<code>/p</code>被解析为了path部分，<code>#/f</code>是不合法的部分。而<code>www.xxxx.com/p?#/f</code>这种是可以的，其中<code>?#/f</code>被解析为一个整体。</p>\n<p><img src=\"/2022/07/20/url-parsing-issue/uriComponents_parsing_regex.png\" alt=\"5.2.8之前的spring解析url的匹配规则\"></p>\n<p><a href=\"https://github.com/spring-projects/spring-framework/issues/25300\">ISSUE#25300</a> : Support fragments in UriComponentsBuilder.fromHttpUrl() </p>\n<p>在<code>5.2.8.RELEASE</code>中spring已经将修复代码合并：<br><img src=\"/2022/07/20/url-parsing-issue/spring-issue-commit.png\" alt=\"commit\"></p>\n<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><ol>\n<li>升级spring到5.2.8.RELEASE及以上版本</li>\n<li>用<code>fromUriString(String)</code>替换<code>fromHttpUrl(String)</code>，schema的部分自行判断一下</li>\n</ol>\n","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<h2 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h2><p>用<a href=\"/2022/06/14/useful-utils/index.html#UriComponents\">UriComponents</a>解析url的时候报<code>IllegalArgumentException</code>。</p>\n<p>传入解析的url：<code>www.xxxx.com/p#/f</code>，特点是带上了fragment<code>#/f</code></p>\n<ul>\n<li><a href=\"https://datatracker.ietf.org/doc/html/rfc3986\">RFC3986</a></li>\n</ul>\n<p><img src=\"/2022/07/20/url-parsing-issue/rfc3986_url_segments.png\" alt=\"RFC3986\"></p>\n<h3 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h3><p><code>fromHttpUrl(String)</code>的匹配规则是：</p>\n<ul>\n<li>PATH部分不允许<code>?</code>或<code>#</code>出现</li>\n<li><code>?</code>后作为一个整体</li>\n</ul>\n<p>也就是<code>www.xxxx.com/p#/f</code>里<code>/p</code>被解析为了path部分，<code>#/f</code>是不合法的部分。而<code>www.xxxx.com/p?#/f</code>这种是可以的，其中<code>?#/f</code>被解析为一个整体。</p>\n<p><img src=\"/2022/07/20/url-parsing-issue/uriComponents_parsing_regex.png\" alt=\"5.2.8之前的spring解析url的匹配规则\"></p>\n<p><a href=\"https://github.com/spring-projects/spring-framework/issues/25300\">ISSUE#25300</a> : Support fragments in UriComponentsBuilder.fromHttpUrl() </p>\n<p>在<code>5.2.8.RELEASE</code>中spring已经将修复代码合并：<br><img src=\"/2022/07/20/url-parsing-issue/spring-issue-commit.png\" alt=\"commit\"></p>\n<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><ol>\n<li>升级spring到5.2.8.RELEASE及以上版本</li>\n<li>用<code>fromUriString(String)</code>替换<code>fromHttpUrl(String)</code>，schema的部分自行判断一下</li>\n</ol>\n"},{"title":"一些好用的工具","date":"2022-06-14T12:33:35.000Z","_content":"## UriComponents\n\n`org.springframework.web.util.UriComponents`\n\n> spring带的解析uri工具\n\n```java\n    String url = \"http://domain:port/path1/subpath1?param0=0&param1=1\";\n\n    UriComponentsBuilder.fromHttpUrl(url).build();\n    UriComponentsBuilder.fromUri(URI.create(uri)).build();\n    UriComponentsBuilder.fromUriString(uri).build();\n    ....\n\n    uriComponents.getHost(); // e.g. domain\n    uriComponents.getPath(); // e.g. /path1/subpath1\n    uriComponents.getPathSegments(); // e.g. [path1, subpath1]\n    uriComponents.getScheme(); // e.g. http\n    uriComponents.getQueryParams(); // [param0:0, param1:1]\n```\n2022/07/20记：也并不是那么好用🙃[【ISSUE】用Spring工具解析带fragment的Url时异常](/2022/07/20/url-parsing-issue/index.html)\n","source":"_posts/useful-utils.md","raw":"---\ntitle: 一些好用的工具\ndate: 2022-06-14 20:33:35\ncategories: \n    - 基础姿势\n    - 工具\ntags:\n\t- URI\n\t- Spring\n---\n## UriComponents\n\n`org.springframework.web.util.UriComponents`\n\n> spring带的解析uri工具\n\n```java\n    String url = \"http://domain:port/path1/subpath1?param0=0&param1=1\";\n\n    UriComponentsBuilder.fromHttpUrl(url).build();\n    UriComponentsBuilder.fromUri(URI.create(uri)).build();\n    UriComponentsBuilder.fromUriString(uri).build();\n    ....\n\n    uriComponents.getHost(); // e.g. domain\n    uriComponents.getPath(); // e.g. /path1/subpath1\n    uriComponents.getPathSegments(); // e.g. [path1, subpath1]\n    uriComponents.getScheme(); // e.g. http\n    uriComponents.getQueryParams(); // [param0:0, param1:1]\n```\n2022/07/20记：也并不是那么好用🙃[【ISSUE】用Spring工具解析带fragment的Url时异常](/2022/07/20/url-parsing-issue/index.html)\n","slug":"useful-utils","published":1,"updated":"2023-03-17T02:30:47.744Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdth004zxtuj8sgdcklp","content":"<h2 id=\"UriComponents\"><a href=\"#UriComponents\" class=\"headerlink\" title=\"UriComponents\"></a>UriComponents</h2><p><code>org.springframework.web.util.UriComponents</code></p>\n<blockquote>\n<p>spring带的解析uri工具</p>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://domain:port/path1/subpath1?param0=0&amp;param1=1\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">UriComponentsBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromHttpUrl</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">UriComponentsBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromUri</span><span class=\"token punctuation\">(</span><span class=\"token constant\">URI</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">UriComponentsBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromUriString</span><span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\nuriComponents<span class=\"token punctuation\">.</span><span class=\"token function\">getHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// e.g. domain</span>\nuriComponents<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// e.g. /path1/subpath1</span>\nuriComponents<span class=\"token punctuation\">.</span><span class=\"token function\">getPathSegments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// e.g. [path1, subpath1]</span>\nuriComponents<span class=\"token punctuation\">.</span><span class=\"token function\">getScheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// e.g. http</span>\nuriComponents<span class=\"token punctuation\">.</span><span class=\"token function\">getQueryParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [param0:0, param1:1]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>2022&#x2F;07&#x2F;20记：也并不是那么好用🙃<a href=\"/2022/07/20/url-parsing-issue/index.html\">【ISSUE】用Spring工具解析带fragment的Url时异常</a></p>\n","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"","more":"<h2 id=\"UriComponents\"><a href=\"#UriComponents\" class=\"headerlink\" title=\"UriComponents\"></a>UriComponents</h2><p><code>org.springframework.web.util.UriComponents</code></p>\n<blockquote>\n<p>spring带的解析uri工具</p>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://domain:port/path1/subpath1?param0=0&amp;param1=1\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">UriComponentsBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromHttpUrl</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">UriComponentsBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromUri</span><span class=\"token punctuation\">(</span><span class=\"token constant\">URI</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">UriComponentsBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromUriString</span><span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\nuriComponents<span class=\"token punctuation\">.</span><span class=\"token function\">getHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// e.g. domain</span>\nuriComponents<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// e.g. /path1/subpath1</span>\nuriComponents<span class=\"token punctuation\">.</span><span class=\"token function\">getPathSegments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// e.g. [path1, subpath1]</span>\nuriComponents<span class=\"token punctuation\">.</span><span class=\"token function\">getScheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// e.g. http</span>\nuriComponents<span class=\"token punctuation\">.</span><span class=\"token function\">getQueryParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [param0:0, param1:1]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>2022&#x2F;07&#x2F;20记：也并不是那么好用🙃<a href=\"/2022/07/20/url-parsing-issue/index.html\">【ISSUE】用Spring工具解析带fragment的Url时异常</a></p>\n"},{"title":"TODO list","date":"2022-07-25T15:44:43.000Z","password":"atpex24","_content":"## TODO list\n- 网络及服务器\n  - TCP/IP\n  - CDN\n  - DNS\n  - 反向代理\n  - Web Server\n  - Socks5协议\n- 并发编程\n  - ThreadLocal及其衍生品\n- Java\n  - JVM GC\n  - Java内存模型和线程\n  - 类与关键字\n  - Java Shell\n- 框架和组件\n  - Spring Boot\n  - Spring MVC\n  - 分布式事务\n  - log\n- 中间件\n  - MySQL等数据库索引\n  - MongoDB和hbase\n  - Redis（cluster）\n  - RocketMQ/RabbitMQ\n  - Zookeeper\n- 微服务\n  - Dubbo和Mainstay\n  - Spring Cloud三件套\n  - grpc和thrift\n  - RPC通信协议和序列化算法\n  - 服务注册与发现\n- 算法\n  - 虚拟桶哈希算法\n  - 一致性哈希虚节点生成算法","source":"_posts/todo-list.md","raw":"---\ntitle: TODO list\ndate: 2022-07-25 23:44:43\ntags:\n    - todo list\ncategories:\n    - 草稿\npassword: atpex24\n---\n## TODO list\n- 网络及服务器\n  - TCP/IP\n  - CDN\n  - DNS\n  - 反向代理\n  - Web Server\n  - Socks5协议\n- 并发编程\n  - ThreadLocal及其衍生品\n- Java\n  - JVM GC\n  - Java内存模型和线程\n  - 类与关键字\n  - Java Shell\n- 框架和组件\n  - Spring Boot\n  - Spring MVC\n  - 分布式事务\n  - log\n- 中间件\n  - MySQL等数据库索引\n  - MongoDB和hbase\n  - Redis（cluster）\n  - RocketMQ/RabbitMQ\n  - Zookeeper\n- 微服务\n  - Dubbo和Mainstay\n  - Spring Cloud三件套\n  - grpc和thrift\n  - RPC通信协议和序列化算法\n  - 服务注册与发现\n- 算法\n  - 虚拟桶哈希算法\n  - 一致性哈希虚节点生成算法","slug":"todo-list","published":1,"updated":"2023-03-17T02:30:47.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdti0053xtuj389nevnh","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"パスワードが不一致。\" data-whm=\"不具合のため、一時的に復号化されます。\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"6706c57984e75cf91531d1d0bf6c3902931cefe1848113b5f8eb78e70c19a7a7\">c78128bf525680635b87b5a4a4e1152badc41a4e4257cc09c6b8367c82ea66ca7899062f5d85f93756704829b26113f86074ca91b8d1f833c77d86d718f6fa0ecd228e1af4366acb20cc596ec0d529c44582e2f06f497342205cd0a3595ed34f8a491715fd6fd3129782ff7fbbfb762ba6dbe5228bcdce6f5a8282bc3d34ed153d27cf7e773a4bbb88f6bf9c5d448171f519e6088433cc6743301638587cb68127d193cec85991888983bf46f9b8695c66e16187111a165c6183933cfbd3470e7f1da8a2f001c67c59e90e9320537a6f91f53f58d1e23b2a3b175877df2fed2ab27a23c1a59483daa43c21ad7863ecfa64d506499d0a777b22af49f00b3067dbde25f7746141b5e58eb2d250f5ae63485b95a6a9470e67d4b6954d9df5da4787ddc4c668e4ce443963a961edd7612f72530685c90a618118de2b12d27756d87ff23377b199160bc3b26e8902e54fa9552b44845e6189dd17d2d4784f70fc3ca21e2adcb97fb68a6db64302c9436bcd51ab06c47a86939e7c386f1b3828a75b92532304ede0ce01c30ea461720b551c21a091d909a68e1781ab5137af516739f09c973c64bdfcb6e02a0629c774ce5ae2cbcd434136ddbfbe78995015bd34235753535c5ba9e816be9e205c2612fdc86e91c424742c96805f0384e24e81c72a41dd3878b12f83805d4a69eccffdc481c5483019dbcca5c1e70051f7af4cfe4469ef9bb5adb9c58441d02850586cb51f4b8fba9223d64d633d079ea6c52c016e7712656607b4eaec791c996177819f622dae39e1519bdf45596ca6d28131785ca51e9a587c724774e5ad3241088fa18bd2fe5bb1911526ab281cf0a9b79f92b74882980762ffca0b1e204227ba5b6468337989f59c68ee42dff511d6580047c1a9e8946d5903d1cc5669b4f82c9415319a003309f1ec4651f1cf94f1a5eb275f2acb4ea4c67b67e16a8d0b590f67382cf77734ffa6123bb1f0c8b67cee324762baf014db326807334d89daec525bf171d135c38c206f341a50e6aec8dcd5b47226958810b331410039300d3cef1aaa938edc13ac606f43095027310cced12519bdeac5908a2877c0c7bee09c9ee7de8b7c430261f11c30b025dd9216145eb40ec89dd738792c8aa9d4df25e52519dabe63154995aaba9559ce07120f24483b35be5d44fb31ce46a810e8e43526a0a80b9ca9a00f472af454d708df793c24e9c73ad1411f319a352e0a607f25d5fd9ca02180693ce7b55b10133b5245f2c3c3223aa7250f092e7ddc8e14221c17419f8b34709363a916fa2724a64e9cfba2a220a653e4038e2a37b1669e0fb304f5b790cf28c9ac58c106dddacdf1485c6c0ae0c6aa515956732e802dca3adbcff7a22c2035a1c37ea749263618f54a74ed6e769992f29e9766ff448bae109a5ea9c987e6722785ad92dc4b24e441cd06a08a0ba3d07d797a481083e0e7fad722c01fb0a82ae38a16496b7e9a382180a17e9a2d78</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">これは暗号化されている内容です。</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"これは暗号化されている内容です。","more":"これは暗号化されている内容です。","origin":"<h2 id=\"TODO-list\"><a href=\"#TODO-list\" class=\"headerlink\" title=\"TODO list\"></a>TODO list</h2><ul>\n<li>网络及服务器<ul>\n<li>TCP&#x2F;IP</li>\n<li>CDN</li>\n<li>DNS</li>\n<li>反向代理</li>\n<li>Web Server</li>\n<li>Socks5协议</li>\n</ul>\n</li>\n<li>并发编程<ul>\n<li>ThreadLocal及其衍生品</li>\n</ul>\n</li>\n<li>Java<ul>\n<li>JVM GC</li>\n<li>Java内存模型和线程</li>\n<li>类与关键字</li>\n<li>Java Shell</li>\n</ul>\n</li>\n<li>框架和组件<ul>\n<li>Spring Boot</li>\n<li>Spring MVC</li>\n<li>分布式事务</li>\n<li>log</li>\n</ul>\n</li>\n<li>中间件<ul>\n<li>MySQL等数据库索引</li>\n<li>MongoDB和hbase</li>\n<li>Redis（cluster）</li>\n<li>RocketMQ&#x2F;RabbitMQ</li>\n<li>Zookeeper</li>\n</ul>\n</li>\n<li>微服务<ul>\n<li>Dubbo和Mainstay</li>\n<li>Spring Cloud三件套</li>\n<li>grpc和thrift</li>\n<li>RPC通信协议和序列化算法</li>\n<li>服务注册与发现</li>\n</ul>\n</li>\n<li>算法<ul>\n<li>虚拟桶哈希算法</li>\n<li>一致性哈希虚节点生成算法</li>\n</ul>\n</li>\n</ul>\n","encrypt":true},{"title":"Computer Networking - Transport Layer","date":"2023-03-16T14:58:13.000Z","password":"Transport Layer","_content":"\n>好记性不如流水账\n\n## Introduction and Transport-Layer Services\n\n![](reading-memo-networking-top-down-ch2/截屏2023-03-17%2010.42.56.png)\n\n### Relationship Between Transport and Network Layers\n\nIP提供了hosts间的逻辑沟通，TCP/UDP提供了processes间的逻辑沟通\n\n### Overview of the Transport Layer in the Internet\n\n\n## Multiplexing and Demultiplexing\n\n![](reading-memo-networking-top-down-ch2/截屏2023-03-17%2011.07.13.png)\n\nmultiplexing: 从不同的sockets获取数据，将数据封装发送到network-layer\n\ndemultiplexing: 识别network-layer来的数据，分发到不同的socket\n\nport number\n\n**Connectionless Multiplexing and Demultiplexing**\n\n相同二元组（dest IP + dest port）的segment会发送到相同的socket\n\n**Connection-Oriented Multiplexing and Demultiplexing**\n\n相同四元组（dest IP + dest port + src IP + src port）的segment会发送到相同的socket\n\n**Web Servers and TCP**\n## Connectionless Transport: UDP\n### UDP Segment Structure\n### UDP Checksum\n## Principles of Reliable Data Transfer\n### Building a Reliable Data Transfer Protocol\n**Reliable Data Transfer over a Perfectly Reliable Channel: rdt1.0**\n**Reliable Data Transfer over a Channel with Bit Errors: rdt2.0**\n**Reliable Data Transfer over a Lossy Channel with Bit Errors: rdt3.0**\n### Pipelined Reliable Data Transfer Protocols\n### Go-Back-N (GBN)\n### Selective Repeat (SR)\n## Connection-Oriented Transport: TCP\n### The TCP Connection\n### TCP Segment Structure\n**Sequence Numbers and Acknowledgment Numbers**\n**Telnet: A Case Study for Sequence and Acknowledgment Numbers**\n### Round-Trip Time Estimation and Timeout\n**Estimating the Round-Trip Time**\n**Setting and Managing the Retransmission Timeout Interval**\n### Reliable Data Transfer\n**A Few Interesting Scenarios**\n**Doubling the Timeout Interval**\n**Fast Retransmit**\n**Go-Back-N or Selective Repeat?**\n### Flow Control\n### TCP Connection Management\n## Principles of Congestion Control\n### The Causes and the Costs of Congestion\n**Scenario 1: Two Senders, a Router with Infinite Buffers**\n**Scenario 2: Two Senders and a Router with Finite Buffers**\n**Scenario 3: Four Senders, Routers with Finite Buffers, and Multihop Paths**\n### Approaches to Congestion Control\n## TCP Congestion Control\n### Classic TCP Congestion Control\n**Slow Start**\n**Congestion Avoidance**\n**Fast Recovery**\n**TCP Congestion Control: Retrospective**\n**TCP Cubic**\n**Macroscopic Description of TCP Reno Throughput**\n### Network-Assisted Explicit Congestion Notification and Delayed-based Congestion Control\n**Explicit Congestion Notification**\n**Delay-based Congestion Control**\n### Fairness\n**Fairness and UDP**\n**Fairness and Parallel TCP Connections**\n## Evolution of Transport-Layer Functionality\n**QUIC: Quick UDP Internet Connections**\n","source":"_posts/reading-memo-networking-top-down-ch2.md","raw":"---\ntitle: Computer Networking - Transport Layer\ndate: 2023-03-16 22:58:13\ncategories:\n    - 基础姿势\n    - 读书笔记\ntags:\n    - networking\n    - tcp/ip\npassword: Transport Layer\n---\n\n>好记性不如流水账\n\n## Introduction and Transport-Layer Services\n\n![](reading-memo-networking-top-down-ch2/截屏2023-03-17%2010.42.56.png)\n\n### Relationship Between Transport and Network Layers\n\nIP提供了hosts间的逻辑沟通，TCP/UDP提供了processes间的逻辑沟通\n\n### Overview of the Transport Layer in the Internet\n\n\n## Multiplexing and Demultiplexing\n\n![](reading-memo-networking-top-down-ch2/截屏2023-03-17%2011.07.13.png)\n\nmultiplexing: 从不同的sockets获取数据，将数据封装发送到network-layer\n\ndemultiplexing: 识别network-layer来的数据，分发到不同的socket\n\nport number\n\n**Connectionless Multiplexing and Demultiplexing**\n\n相同二元组（dest IP + dest port）的segment会发送到相同的socket\n\n**Connection-Oriented Multiplexing and Demultiplexing**\n\n相同四元组（dest IP + dest port + src IP + src port）的segment会发送到相同的socket\n\n**Web Servers and TCP**\n## Connectionless Transport: UDP\n### UDP Segment Structure\n### UDP Checksum\n## Principles of Reliable Data Transfer\n### Building a Reliable Data Transfer Protocol\n**Reliable Data Transfer over a Perfectly Reliable Channel: rdt1.0**\n**Reliable Data Transfer over a Channel with Bit Errors: rdt2.0**\n**Reliable Data Transfer over a Lossy Channel with Bit Errors: rdt3.0**\n### Pipelined Reliable Data Transfer Protocols\n### Go-Back-N (GBN)\n### Selective Repeat (SR)\n## Connection-Oriented Transport: TCP\n### The TCP Connection\n### TCP Segment Structure\n**Sequence Numbers and Acknowledgment Numbers**\n**Telnet: A Case Study for Sequence and Acknowledgment Numbers**\n### Round-Trip Time Estimation and Timeout\n**Estimating the Round-Trip Time**\n**Setting and Managing the Retransmission Timeout Interval**\n### Reliable Data Transfer\n**A Few Interesting Scenarios**\n**Doubling the Timeout Interval**\n**Fast Retransmit**\n**Go-Back-N or Selective Repeat?**\n### Flow Control\n### TCP Connection Management\n## Principles of Congestion Control\n### The Causes and the Costs of Congestion\n**Scenario 1: Two Senders, a Router with Infinite Buffers**\n**Scenario 2: Two Senders and a Router with Finite Buffers**\n**Scenario 3: Four Senders, Routers with Finite Buffers, and Multihop Paths**\n### Approaches to Congestion Control\n## TCP Congestion Control\n### Classic TCP Congestion Control\n**Slow Start**\n**Congestion Avoidance**\n**Fast Recovery**\n**TCP Congestion Control: Retrospective**\n**TCP Cubic**\n**Macroscopic Description of TCP Reno Throughput**\n### Network-Assisted Explicit Congestion Notification and Delayed-based Congestion Control\n**Explicit Congestion Notification**\n**Delay-based Congestion Control**\n### Fairness\n**Fairness and UDP**\n**Fairness and Parallel TCP Connections**\n## Evolution of Transport-Layer Functionality\n**QUIC: Quick UDP Internet Connections**\n","slug":"reading-memo-networking-top-down-ch2","published":1,"updated":"2023-03-17T07:53:59.319Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljf4hdti0056xtujg8fs27r6","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"パスワードが不一致。\" data-whm=\"不具合のため、一時的に復号化されます。\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"abb19d47e56315575e29acfacf575f51ac885217ed35407004cc75f0d76899a2\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">これは暗号化されている内容です。</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{"languages/zh-CN":{"name":"简体中文","home":{"menu":"首 页","title":"首 页"},"archive":{"menu":"归 档","title":"归 档","subtitle":"归 档","post_total":"共计 %d 篇文章"},"category":{"menu":"分 类","title":"分 类","subtitle":"分 类","post_total":"共计 %d 篇文章","more":"More..."},"tag":{"menu":"标 签","title":"标 签","subtitle":"标 签","post_total":"共计 %d 篇文章"},"about":{"menu":"关 于","title":"关 于","subtitle":"关 于"},"links":{"menu":"友 链","title":"友 链","subtitle":"友情链接"},"page404":{"menu":"页面不存在","title":"页面不存在","subtitle":"页面不存在"},"post":{"toc":"目录","prev_post":"上一篇","next_post":"下一篇","updated":"本文最后更新于：%s","meta":{"wordcount":"%s 字","min2read":"%s 分钟","views":"{} 次"},"copyright":{"author":"作者","posted":"发布于","updated":"更新于","licensed":"许可协议","CC":"CC - 知识共享许可协议","BY":"BY - 署名","SA":"SA - 相同方式共享","NC":"NC - 非商业性使用","ND":"ND - 禁止演绎"}},"footer":{"pv":"总访问量 {} 次","uv":"总访客数 {} 人"},"search":{"title":"搜索","keyword":"关键词"},"noscript_warning":"博客在允许 JavaScript 运行的环境下浏览效果更佳"},"languages/ja":{"name":"日本語","home":{"menu":"ホーム","title":"ホーム"},"archive":{"menu":"記録","title":"記録","subtitle":"記録","post_total":"全%d件の記事"},"category":{"menu":"分類","title":"分類","subtitle":"分類","post_total":"全%d件の記事","more":"さらに見る..."},"tag":{"menu":"付箋","title":"付箋","subtitle":"付箋","post_total":"全 %d 件の記事"},"about":{"menu":"サイト情報","title":"サイト情報","subtitle":"サイト情報"},"links":{"menu":"リンク","title":"リンク","subtitle":"リンク"},"page404":{"menu":"ページが見つかりませんでした","title":"ページが見つかりませんでした","subtitle":"ページが見つかりませんでした"},"post":{"toc":"目録","prev_post":"前の記事","next_post":"次の記事","updated":"最終更新日：%s","meta":{"wordcount":"単語数：%s","min2read":"約%s分間","views":"{} 閲覧"},"copyright":{"author":"作者","posted":"作成日","updated":"修正日","licensed":"著作権","CC":"CC - Creative Commons license","BY":"BY - Attribution","SA":"SA - Share-alike","NC":"NC - Non-commercial","ND":"ND - No derivative works"}},"footer":{"pv":"合計閲覧数: {}","uv":"合計閲覧者数: {}"},"search":{"title":"検索","keyword":"キーワード"},"noscript_warning":"このブログはJavaScriptを有効にすると最適に機能します"}}},"excerpt":"これは暗号化されている内容です。","more":"これは暗号化されている内容です。","origin":"<blockquote>\n<p>好记性不如流水账</p>\n</blockquote>\n<h2 id=\"Introduction-and-Transport-Layer-Services\"><a href=\"#Introduction-and-Transport-Layer-Services\" class=\"headerlink\" title=\"Introduction and Transport-Layer Services\"></a>Introduction and Transport-Layer Services</h2><p><img src=\"/2023/03/16/reading-memo-networking-top-down-ch2/%E6%88%AA%E5%B1%8F2023-03-17%2010.42.56.png\"></p>\n<h3 id=\"Relationship-Between-Transport-and-Network-Layers\"><a href=\"#Relationship-Between-Transport-and-Network-Layers\" class=\"headerlink\" title=\"Relationship Between Transport and Network Layers\"></a>Relationship Between Transport and Network Layers</h3><p>IP提供了hosts间的逻辑沟通，TCP&#x2F;UDP提供了processes间的逻辑沟通</p>\n<h3 id=\"Overview-of-the-Transport-Layer-in-the-Internet\"><a href=\"#Overview-of-the-Transport-Layer-in-the-Internet\" class=\"headerlink\" title=\"Overview of the Transport Layer in the Internet\"></a>Overview of the Transport Layer in the Internet</h3><h2 id=\"Multiplexing-and-Demultiplexing\"><a href=\"#Multiplexing-and-Demultiplexing\" class=\"headerlink\" title=\"Multiplexing and Demultiplexing\"></a>Multiplexing and Demultiplexing</h2><p><img src=\"/2023/03/16/reading-memo-networking-top-down-ch2/%E6%88%AA%E5%B1%8F2023-03-17%2011.07.13.png\"></p>\n<p>multiplexing: 从不同的sockets获取数据，将数据封装发送到network-layer</p>\n<p>demultiplexing: 识别network-layer来的数据，分发到不同的socket</p>\n<p>port number</p>\n<p><strong>Connectionless Multiplexing and Demultiplexing</strong></p>\n<p>相同二元组（dest IP + dest port）的segment会发送到相同的socket</p>\n<p><strong>Connection-Oriented Multiplexing and Demultiplexing</strong></p>\n<p>相同四元组（dest IP + dest port + src IP + src port）的segment会发送到相同的socket</p>\n<p><strong>Web Servers and TCP</strong></p>\n<h2 id=\"Connectionless-Transport-UDP\"><a href=\"#Connectionless-Transport-UDP\" class=\"headerlink\" title=\"Connectionless Transport: UDP\"></a>Connectionless Transport: UDP</h2><h3 id=\"UDP-Segment-Structure\"><a href=\"#UDP-Segment-Structure\" class=\"headerlink\" title=\"UDP Segment Structure\"></a>UDP Segment Structure</h3><h3 id=\"UDP-Checksum\"><a href=\"#UDP-Checksum\" class=\"headerlink\" title=\"UDP Checksum\"></a>UDP Checksum</h3><h2 id=\"Principles-of-Reliable-Data-Transfer\"><a href=\"#Principles-of-Reliable-Data-Transfer\" class=\"headerlink\" title=\"Principles of Reliable Data Transfer\"></a>Principles of Reliable Data Transfer</h2><h3 id=\"Building-a-Reliable-Data-Transfer-Protocol\"><a href=\"#Building-a-Reliable-Data-Transfer-Protocol\" class=\"headerlink\" title=\"Building a Reliable Data Transfer Protocol\"></a>Building a Reliable Data Transfer Protocol</h3><p><strong>Reliable Data Transfer over a Perfectly Reliable Channel: rdt1.0</strong><br><strong>Reliable Data Transfer over a Channel with Bit Errors: rdt2.0</strong><br><strong>Reliable Data Transfer over a Lossy Channel with Bit Errors: rdt3.0</strong></p>\n<h3 id=\"Pipelined-Reliable-Data-Transfer-Protocols\"><a href=\"#Pipelined-Reliable-Data-Transfer-Protocols\" class=\"headerlink\" title=\"Pipelined Reliable Data Transfer Protocols\"></a>Pipelined Reliable Data Transfer Protocols</h3><h3 id=\"Go-Back-N-GBN\"><a href=\"#Go-Back-N-GBN\" class=\"headerlink\" title=\"Go-Back-N (GBN)\"></a>Go-Back-N (GBN)</h3><h3 id=\"Selective-Repeat-SR\"><a href=\"#Selective-Repeat-SR\" class=\"headerlink\" title=\"Selective Repeat (SR)\"></a>Selective Repeat (SR)</h3><h2 id=\"Connection-Oriented-Transport-TCP\"><a href=\"#Connection-Oriented-Transport-TCP\" class=\"headerlink\" title=\"Connection-Oriented Transport: TCP\"></a>Connection-Oriented Transport: TCP</h2><h3 id=\"The-TCP-Connection\"><a href=\"#The-TCP-Connection\" class=\"headerlink\" title=\"The TCP Connection\"></a>The TCP Connection</h3><h3 id=\"TCP-Segment-Structure\"><a href=\"#TCP-Segment-Structure\" class=\"headerlink\" title=\"TCP Segment Structure\"></a>TCP Segment Structure</h3><p><strong>Sequence Numbers and Acknowledgment Numbers</strong><br><strong>Telnet: A Case Study for Sequence and Acknowledgment Numbers</strong></p>\n<h3 id=\"Round-Trip-Time-Estimation-and-Timeout\"><a href=\"#Round-Trip-Time-Estimation-and-Timeout\" class=\"headerlink\" title=\"Round-Trip Time Estimation and Timeout\"></a>Round-Trip Time Estimation and Timeout</h3><p><strong>Estimating the Round-Trip Time</strong><br><strong>Setting and Managing the Retransmission Timeout Interval</strong></p>\n<h3 id=\"Reliable-Data-Transfer\"><a href=\"#Reliable-Data-Transfer\" class=\"headerlink\" title=\"Reliable Data Transfer\"></a>Reliable Data Transfer</h3><p><strong>A Few Interesting Scenarios</strong><br><strong>Doubling the Timeout Interval</strong><br><strong>Fast Retransmit</strong><br><strong>Go-Back-N or Selective Repeat?</strong></p>\n<h3 id=\"Flow-Control\"><a href=\"#Flow-Control\" class=\"headerlink\" title=\"Flow Control\"></a>Flow Control</h3><h3 id=\"TCP-Connection-Management\"><a href=\"#TCP-Connection-Management\" class=\"headerlink\" title=\"TCP Connection Management\"></a>TCP Connection Management</h3><h2 id=\"Principles-of-Congestion-Control\"><a href=\"#Principles-of-Congestion-Control\" class=\"headerlink\" title=\"Principles of Congestion Control\"></a>Principles of Congestion Control</h2><h3 id=\"The-Causes-and-the-Costs-of-Congestion\"><a href=\"#The-Causes-and-the-Costs-of-Congestion\" class=\"headerlink\" title=\"The Causes and the Costs of Congestion\"></a>The Causes and the Costs of Congestion</h3><p><strong>Scenario 1: Two Senders, a Router with Infinite Buffers</strong><br><strong>Scenario 2: Two Senders and a Router with Finite Buffers</strong><br><strong>Scenario 3: Four Senders, Routers with Finite Buffers, and Multihop Paths</strong></p>\n<h3 id=\"Approaches-to-Congestion-Control\"><a href=\"#Approaches-to-Congestion-Control\" class=\"headerlink\" title=\"Approaches to Congestion Control\"></a>Approaches to Congestion Control</h3><h2 id=\"TCP-Congestion-Control\"><a href=\"#TCP-Congestion-Control\" class=\"headerlink\" title=\"TCP Congestion Control\"></a>TCP Congestion Control</h2><h3 id=\"Classic-TCP-Congestion-Control\"><a href=\"#Classic-TCP-Congestion-Control\" class=\"headerlink\" title=\"Classic TCP Congestion Control\"></a>Classic TCP Congestion Control</h3><p><strong>Slow Start</strong><br><strong>Congestion Avoidance</strong><br><strong>Fast Recovery</strong><br><strong>TCP Congestion Control: Retrospective</strong><br><strong>TCP Cubic</strong><br><strong>Macroscopic Description of TCP Reno Throughput</strong></p>\n<h3 id=\"Network-Assisted-Explicit-Congestion-Notification-and-Delayed-based-Congestion-Control\"><a href=\"#Network-Assisted-Explicit-Congestion-Notification-and-Delayed-based-Congestion-Control\" class=\"headerlink\" title=\"Network-Assisted Explicit Congestion Notification and Delayed-based Congestion Control\"></a>Network-Assisted Explicit Congestion Notification and Delayed-based Congestion Control</h3><p><strong>Explicit Congestion Notification</strong><br><strong>Delay-based Congestion Control</strong></p>\n<h3 id=\"Fairness\"><a href=\"#Fairness\" class=\"headerlink\" title=\"Fairness\"></a>Fairness</h3><p><strong>Fairness and UDP</strong><br><strong>Fairness and Parallel TCP Connections</strong></p>\n<h2 id=\"Evolution-of-Transport-Layer-Functionality\"><a href=\"#Evolution-of-Transport-Layer-Functionality\" class=\"headerlink\" title=\"Evolution of Transport-Layer Functionality\"></a>Evolution of Transport-Layer Functionality</h2><p><strong>QUIC: Quick UDP Internet Connections</strong></p>\n","encrypt":true}],"PostAsset":[{"_id":"source/_posts/arch-linux-setup-guide/archlinux.png","post":"cljf4hdt20003xtuj5jrva70r","slug":"archlinux.png","modified":1,"renderable":1},{"_id":"source/_posts/blender-learning-memo0/render_shader-nodes_shader_principled_example-1a.jpg","post":"cljf4hdt40009xtuj6os13itx","slug":"render_shader-nodes_shader_principled_example-1a.jpg","modified":1,"renderable":1},{"_id":"source/_posts/blender-learning-memo0/render_shader-nodes_shader_principled_example-2a.jpg","post":"cljf4hdt40009xtuj6os13itx","slug":"render_shader-nodes_shader_principled_example-2a.jpg","modified":1,"renderable":1},{"_id":"source/_posts/blender-learning-memo0/render_shader-nodes_shader_principled_example-2b.jpg","post":"cljf4hdt40009xtuj6os13itx","slug":"render_shader-nodes_shader_principled_example-2b.jpg","modified":1,"renderable":1},{"_id":"source/_posts/blender-learning-memo0/render_shader-nodes_shader_principled_node.png","post":"cljf4hdt40009xtuj6os13itx","slug":"render_shader-nodes_shader_principled_node.png","modified":1,"renderable":1},{"_id":"source/_posts/hystrix/hystrix.webp","post":"cljf4hdt6000jxtujda384bzm","slug":"hystrix.webp","modified":1,"renderable":1},{"_id":"source/_posts/java-security-issue/scrshot0.png","post":"cljf4hdt4000bxtujhm373fhj","slug":"scrshot0.png","modified":1,"renderable":1},{"_id":"source/_posts/fgo-frida-il2cpp-bridge/0.jpg","post":"cljf4hdt5000fxtujh06c1gax","slug":"0.jpg","modified":1,"renderable":1},{"_id":"source/_posts/jvm-metaspace-leakage-caused-by-loading-dynamic-class/0.png","post":"cljf4hdt8000txtuj5lcnd7by","slug":"0.png","modified":1,"renderable":1},{"_id":"source/_posts/jvm-metaspace-leakage-caused-by-loading-dynamic-class/1.png","post":"cljf4hdt8000txtuj5lcnd7by","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/jvm-metaspace-leakage-caused-by-loading-dynamic-class/2.png","post":"cljf4hdt8000txtuj5lcnd7by","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/jvm-metaspace-leakage-caused-by-loading-dynamic-class/3.png","post":"cljf4hdt8000txtuj5lcnd7by","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/jvm-metaspace-leakage-caused-by-loading-dynamic-class/4.png","post":"cljf4hdt8000txtuj5lcnd7by","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/jvm-metaspace-leakage-caused-by-loading-dynamic-class/5.png","post":"cljf4hdt8000txtuj5lcnd7by","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/jvm-metaspace-leakage-caused-by-loading-dynamic-class/6.png","post":"cljf4hdt8000txtuj5lcnd7by","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/rust-notes/char-size-1.png","post":"cljf4hdtg004nxtuj3xkocbuh","slug":"char-size-1.png","modified":1,"renderable":1},{"_id":"source/_posts/rust-notes/char-size-2.png","post":"cljf4hdtg004nxtuj3xkocbuh","slug":"char-size-2.png","modified":1,"renderable":1},{"_id":"source/_posts/lc-heap/max-heap-example.drawio.png","post":"cljf4hdth004sxtuj1ij92a84","slug":"max-heap-example.drawio.png","modified":1,"renderable":1},{"_id":"source/_posts/lc-heap/min-heap-deletion-opt.0.drawio.png","post":"cljf4hdth004sxtuj1ij92a84","slug":"min-heap-deletion-opt.0.drawio.png","modified":1,"renderable":1},{"_id":"source/_posts/lc-heap/min-heap-deletion-opt.1.drawio.png","post":"cljf4hdth004sxtuj1ij92a84","slug":"min-heap-deletion-opt.1.drawio.png","modified":1,"renderable":1},{"_id":"source/_posts/lc-heap/min-heap-deletion-opt.2.drawio.png","post":"cljf4hdth004sxtuj1ij92a84","slug":"min-heap-deletion-opt.2.drawio.png","modified":1,"renderable":1},{"_id":"source/_posts/lc-heap/min-heap-deletion-opt.3.drawio.png","post":"cljf4hdth004sxtuj1ij92a84","slug":"min-heap-deletion-opt.3.drawio.png","modified":1,"renderable":1},{"_id":"source/_posts/lc-heap/min-heap-deletion.0.drawio.png","post":"cljf4hdth004sxtuj1ij92a84","slug":"min-heap-deletion.0.drawio.png","modified":1,"renderable":1},{"_id":"source/_posts/lc-heap/min-heap-deletion.1.drawio.png","post":"cljf4hdth004sxtuj1ij92a84","slug":"min-heap-deletion.1.drawio.png","modified":1,"renderable":1},{"_id":"source/_posts/lc-heap/min-heap-insertion.0.drawio.png","post":"cljf4hdth004sxtuj1ij92a84","slug":"min-heap-insertion.0.drawio.png","modified":1,"renderable":1},{"_id":"source/_posts/lc-heap/min-heap-insertion.1.drawio.png","post":"cljf4hdth004sxtuj1ij92a84","slug":"min-heap-insertion.1.drawio.png","modified":1,"renderable":1},{"_id":"source/_posts/lc-heap/min-heap-insertion.2.drawio.png","post":"cljf4hdth004sxtuj1ij92a84","slug":"min-heap-insertion.2.drawio.png","modified":1,"renderable":1},{"_id":"source/_posts/lc-heap/min-heap-insertion.3.drawio.png","post":"cljf4hdth004sxtuj1ij92a84","slug":"min-heap-insertion.3.drawio.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch2/截屏2023-03-17 10.42.56.png","post":"cljf4hdti0056xtujg8fs27r6","slug":"截屏2023-03-17 10.42.56.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch2/截屏2023-03-17 11.07.13.png","post":"cljf4hdti0056xtujg8fs27r6","slug":"截屏2023-03-17 11.07.13.png","modified":1,"renderable":1},{"_id":"source/_posts/url-parsing-issue/rfc3986_url_segments.png","post":"cljf4hdth004vxtujeju65zw1","slug":"rfc3986_url_segments.png","modified":1,"renderable":1},{"_id":"source/_posts/url-parsing-issue/spring-issue-commit.png","post":"cljf4hdth004vxtujeju65zw1","slug":"spring-issue-commit.png","modified":1,"renderable":1},{"_id":"source/_posts/url-parsing-issue/uriComponents_parsing_regex.png","post":"cljf4hdth004vxtujeju65zw1","slug":"uriComponents_parsing_regex.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-14 21.10.56.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-14 21.10.56.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-14 21.51.57.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-14 21.51.57.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-14 22.06.50.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-14 22.06.50.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 10.57.16.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-15 10.57.16.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 14.01.32.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-15 14.01.32.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 14.22.39.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-15 14.22.39.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 14.25.06.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-15 14.25.06.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 14.35.29.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-15 14.35.29.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 20.37.43.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-15 20.37.43.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 20.38.01.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-15 20.38.01.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 21.37.10.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-15 21.37.10.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-15 21.40.53.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-15 21.40.53.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-16 14.23.27.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-16 14.23.27.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-16 14.27.20.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-16 14.27.20.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-16 15.00.39.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-16 15.00.39.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-16 15.16.17.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-16 15.16.17.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-16 20.41.47.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-16 20.41.47.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-16 21.46.11.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-16 21.46.11.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-16 22.17.56.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-16 22.17.56.png","modified":1,"renderable":1},{"_id":"source/_posts/reading-memo-networking-top-down-ch1/截屏2023-03-16 22.29.19.png","post":"cljf4hdtg004mxtuj41yw3q6u","slug":"截屏2023-03-16 22.29.19.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cljf4hdt00001xtuj1mbc4ge5","category_id":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdt9000yxtuj7br20k56"},{"post_id":"cljf4hdt00001xtuj1mbc4ge5","category_id":"cljf4hdt8000qxtuje9vr0ut3","_id":"cljf4hdt90011xtujea0m25vp"},{"post_id":"cljf4hdt8000vxtujeia51wsr","category_id":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdt90012xtuj7l1j3t2i"},{"post_id":"cljf4hdt8000vxtujeia51wsr","category_id":"cljf4hdt8000qxtuje9vr0ut3","_id":"cljf4hdt90014xtuj6l7m9t15"},{"post_id":"cljf4hdt20003xtuj5jrva70r","category_id":"cljf4hdt5000cxtujexwjfl6d","_id":"cljf4hdt9001bxtujenhh1cta"},{"post_id":"cljf4hdt20003xtuj5jrva70r","category_id":"cljf4hdt90013xtujej25cdic","_id":"cljf4hdta001fxtuj7vzc5l22"},{"post_id":"cljf4hdt5000gxtuj2om2c7kb","category_id":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdta001gxtujhnyl67ax"},{"post_id":"cljf4hdt5000gxtuj2om2c7kb","category_id":"cljf4hdt90017xtujf1r3fd60","_id":"cljf4hdta001jxtuj5hldechl"},{"post_id":"cljf4hdt6000jxtujda384bzm","category_id":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdta001lxtuj1134galp"},{"post_id":"cljf4hdt6000jxtujda384bzm","category_id":"cljf4hdt9001dxtuj3e18chpp","_id":"cljf4hdta001pxtuj9260b2oc"},{"post_id":"cljf4hdt30007xtuj4qhoc6ud","category_id":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdta001sxtuj1e20etv1"},{"post_id":"cljf4hdt30007xtuj4qhoc6ud","category_id":"cljf4hdta001hxtujgu3bhcih","_id":"cljf4hdta001uxtuj5ibkelpx"},{"post_id":"cljf4hdt7000kxtuj4fvzajmx","category_id":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdta001vxtuj0cvw6g42"},{"post_id":"cljf4hdt7000kxtuj4fvzajmx","category_id":"cljf4hdt90017xtujf1r3fd60","_id":"cljf4hdta001xxtuj0jf5ejsq"},{"post_id":"cljf4hdt7000nxtuj02j3f7v3","category_id":"cljf4hdt5000cxtujexwjfl6d","_id":"cljf4hdtb001zxtujhget1sy6"},{"post_id":"cljf4hdt7000nxtuj02j3f7v3","category_id":"cljf4hdta001rxtujeg5aeclq","_id":"cljf4hdtb0021xtujbdyshovx"},{"post_id":"cljf4hdt40009xtuj6os13itx","category_id":"cljf4hdt5000cxtujexwjfl6d","_id":"cljf4hdtb0024xtuj3rpc1arg"},{"post_id":"cljf4hdt40009xtuj6os13itx","category_id":"cljf4hdta001wxtujh86772o5","_id":"cljf4hdtb0025xtujfvd297xd"},{"post_id":"cljf4hdt7000pxtuj041zgfuq","category_id":"cljf4hdt5000cxtujexwjfl6d","_id":"cljf4hdtb0028xtuj3b1ybyr4"},{"post_id":"cljf4hdt7000pxtuj041zgfuq","category_id":"cljf4hdta001rxtujeg5aeclq","_id":"cljf4hdtb0029xtuj7nov3wsp"},{"post_id":"cljf4hdt4000bxtujhm373fhj","category_id":"cljf4hdt8000wxtuj78l3em3e","_id":"cljf4hdtb002gxtujcn1j0jl7"},{"post_id":"cljf4hdt4000bxtujhm373fhj","category_id":"cljf4hdtb0027xtuj630ia7fg","_id":"cljf4hdtb002jxtuj1m3q51e4"},{"post_id":"cljf4hdt5000fxtujh06c1gax","category_id":"cljf4hdt9000zxtujcstxbbtj","_id":"cljf4hdtb002mxtuj73qo4in8"},{"post_id":"cljf4hdt5000fxtujh06c1gax","category_id":"cljf4hdtb002cxtuj37gmd9vh","_id":"cljf4hdtc002oxtujf09b0c4b"},{"post_id":"cljf4hdt8000txtuj5lcnd7by","category_id":"cljf4hdt8000wxtuj78l3em3e","_id":"cljf4hdtc002qxtuj2d08ff2i"},{"post_id":"cljf4hdt8000txtuj5lcnd7by","category_id":"cljf4hdtb0027xtuj630ia7fg","_id":"cljf4hdtc002rxtujff2dhxbb"},{"post_id":"cljf4hdtg004nxtuj3xkocbuh","category_id":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdth004txtujbbde9po9"},{"post_id":"cljf4hdtg004pxtuj0pz6h6wv","category_id":"cljf4hdt5000cxtujexwjfl6d","_id":"cljf4hdth004xxtuj79dq7bgw"},{"post_id":"cljf4hdtg004pxtuj0pz6h6wv","category_id":"cljf4hdt90013xtujej25cdic","_id":"cljf4hdth0050xtuj919sft8g"},{"post_id":"cljf4hdtg004mxtuj41yw3q6u","category_id":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdti0054xtuj57axhow3"},{"post_id":"cljf4hdtg004mxtuj41yw3q6u","category_id":"cljf4hdtg004qxtuj3hm57axh","_id":"cljf4hdti0058xtujfer0c2fq"},{"post_id":"cljf4hdth004sxtuj1ij92a84","category_id":"cljf4hdt5000cxtujexwjfl6d","_id":"cljf4hdti005bxtuj46gnbxal"},{"post_id":"cljf4hdth004sxtuj1ij92a84","category_id":"cljf4hdta001rxtujeg5aeclq","_id":"cljf4hdti005extujhoyb8pgq"},{"post_id":"cljf4hdth004vxtujeju65zw1","category_id":"cljf4hdt8000wxtuj78l3em3e","_id":"cljf4hdti005gxtuj116v5omj"},{"post_id":"cljf4hdth004vxtujeju65zw1","category_id":"cljf4hdtb0027xtuj630ia7fg","_id":"cljf4hdti005ixtuj4y1ff3hu"},{"post_id":"cljf4hdtg004rxtuj5kwgfgyj","category_id":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdti005lxtujdpji8st9"},{"post_id":"cljf4hdtg004rxtuj5kwgfgyj","category_id":"cljf4hdth004wxtujfnccglbh","_id":"cljf4hdtj005nxtuj58cc3iok"},{"post_id":"cljf4hdti0056xtujg8fs27r6","category_id":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdtj005pxtuja89hdkq3"},{"post_id":"cljf4hdti0056xtujg8fs27r6","category_id":"cljf4hdtg004qxtuj3hm57axh","_id":"cljf4hdtj005rxtuj74kydw89"},{"post_id":"cljf4hdth004zxtuj8sgdcklp","category_id":"cljf4hdt30004xtujht6bfunm","_id":"cljf4hdtj005sxtuj8uvwdlc5"},{"post_id":"cljf4hdth004zxtuj8sgdcklp","category_id":"cljf4hdti0057xtuj8t8h6en1","_id":"cljf4hdtj005uxtuj5own9jxo"},{"post_id":"cljf4hdti0053xtuj389nevnh","category_id":"cljf4hdti005dxtuj1j2109ta","_id":"cljf4hdtj005wxtuj7inag7aw"}],"PostTag":[{"post_id":"cljf4hdt00001xtuj1mbc4ge5","tag_id":"cljf4hdt30005xtujh9pjfh4t","_id":"cljf4hdt7000oxtuj5rzg76wn"},{"post_id":"cljf4hdt00001xtuj1mbc4ge5","tag_id":"cljf4hdt5000dxtuj84zr6hix","_id":"cljf4hdt8000rxtujgrsehsbu"},{"post_id":"cljf4hdt00001xtuj1mbc4ge5","tag_id":"cljf4hdt6000ixtuj6u7m11v6","_id":"cljf4hdt8000uxtujfz1tc536"},{"post_id":"cljf4hdt20003xtuj5jrva70r","tag_id":"cljf4hdt7000mxtuj5iym9osd","_id":"cljf4hdt90016xtujefzn0az6"},{"post_id":"cljf4hdt20003xtuj5jrva70r","tag_id":"cljf4hdt8000sxtuj2m1vakpd","_id":"cljf4hdt90018xtuj1qwsh3ko"},{"post_id":"cljf4hdt20003xtuj5jrva70r","tag_id":"cljf4hdt9000xxtuje7tqaj7f","_id":"cljf4hdt9001axtujekj5c1vk"},{"post_id":"cljf4hdt20003xtuj5jrva70r","tag_id":"cljf4hdt90010xtujhy036rys","_id":"cljf4hdt9001cxtujdz36app4"},{"post_id":"cljf4hdt30007xtuj4qhoc6ud","tag_id":"cljf4hdt90015xtuj17c5201h","_id":"cljf4hdta001kxtuj0jw0hxbw"},{"post_id":"cljf4hdt30007xtuj4qhoc6ud","tag_id":"cljf4hdt90019xtuj0imrcv2n","_id":"cljf4hdta001nxtuj2pvch8ia"},{"post_id":"cljf4hdt30007xtuj4qhoc6ud","tag_id":"cljf4hdta001extujhlqjd26l","_id":"cljf4hdta001qxtujfi7t5oio"},{"post_id":"cljf4hdt40009xtuj6os13itx","tag_id":"cljf4hdta001ixtujf2crhhus","_id":"cljf4hdtb002bxtuj2e09drd0"},{"post_id":"cljf4hdt40009xtuj6os13itx","tag_id":"cljf4hdta001oxtuj0vwqgzuw","_id":"cljf4hdtb002dxtujg7qc9dtv"},{"post_id":"cljf4hdt40009xtuj6os13itx","tag_id":"cljf4hdta001txtuj2gcg992m","_id":"cljf4hdtb002fxtujbwqsdcyj"},{"post_id":"cljf4hdt40009xtuj6os13itx","tag_id":"cljf4hdta001yxtuj5l67948d","_id":"cljf4hdtb002ixtuj1wakdde8"},{"post_id":"cljf4hdt40009xtuj6os13itx","tag_id":"cljf4hdtb0022xtuj5d1bfm7r","_id":"cljf4hdtb002lxtuj2n2dbvo0"},{"post_id":"cljf4hdt40009xtuj6os13itx","tag_id":"cljf4hdtb0026xtuj85vgh0qp","_id":"cljf4hdtb002nxtujf5v5he03"},{"post_id":"cljf4hdt4000bxtujhm373fhj","tag_id":"cljf4hdt30005xtujh9pjfh4t","_id":"cljf4hdtc002uxtuj9man10pl"},{"post_id":"cljf4hdt4000bxtujhm373fhj","tag_id":"cljf4hdtb002axtujbnsb5c7n","_id":"cljf4hdtc002vxtujhkqcfjgi"},{"post_id":"cljf4hdt4000bxtujhm373fhj","tag_id":"cljf4hdtb002extuj1es49tku","_id":"cljf4hdtc002xxtuj8vh5hmk0"},{"post_id":"cljf4hdt4000bxtujhm373fhj","tag_id":"cljf4hdtb002kxtuj29r520p5","_id":"cljf4hdtc002yxtuj49ai2eqp"},{"post_id":"cljf4hdt4000bxtujhm373fhj","tag_id":"cljf4hdtc002pxtujeqb54414","_id":"cljf4hdtc0030xtuj833p84ds"},{"post_id":"cljf4hdt4000bxtujhm373fhj","tag_id":"cljf4hdtc002sxtuj11zhgwct","_id":"cljf4hdtc0031xtuja7j8d988"},{"post_id":"cljf4hdt5000fxtujh06c1gax","tag_id":"cljf4hdtc002txtuj7opta5yc","_id":"cljf4hdtc0034xtuj8em81qel"},{"post_id":"cljf4hdt5000fxtujh06c1gax","tag_id":"cljf4hdtc002wxtujebbehz8l","_id":"cljf4hdtc0035xtuj07sdgtnz"},{"post_id":"cljf4hdt5000fxtujh06c1gax","tag_id":"cljf4hdtc002zxtuj65eme13e","_id":"cljf4hdtc0037xtuj2enz5puc"},{"post_id":"cljf4hdt5000fxtujh06c1gax","tag_id":"cljf4hdtc0032xtuj24cd8jt3","_id":"cljf4hdtc0038xtuj329raojs"},{"post_id":"cljf4hdt5000gxtuj2om2c7kb","tag_id":"cljf4hdtc0033xtujcacxd0z5","_id":"cljf4hdtd003cxtuj8kjh6cke"},{"post_id":"cljf4hdt5000gxtuj2om2c7kb","tag_id":"cljf4hdtc0036xtuj88yh9rzi","_id":"cljf4hdtd003dxtuj9btc8p4w"},{"post_id":"cljf4hdt5000gxtuj2om2c7kb","tag_id":"cljf4hdtc0039xtujhw1wf3b9","_id":"cljf4hdtd003fxtuj7i7necyt"},{"post_id":"cljf4hdt5000gxtuj2om2c7kb","tag_id":"cljf4hdtc003axtuj7vjz96ua","_id":"cljf4hdtd003gxtuj5hnn9xvd"},{"post_id":"cljf4hdt6000jxtujda384bzm","tag_id":"cljf4hdtc003bxtuj3t2506xg","_id":"cljf4hdtd003kxtujbzoz00pj"},{"post_id":"cljf4hdt6000jxtujda384bzm","tag_id":"cljf4hdtd003extuj5byw866c","_id":"cljf4hdtd003lxtuj0m3ectvc"},{"post_id":"cljf4hdt6000jxtujda384bzm","tag_id":"cljf4hdt30005xtujh9pjfh4t","_id":"cljf4hdtd003nxtuj3yh07jj7"},{"post_id":"cljf4hdt6000jxtujda384bzm","tag_id":"cljf4hdtd003hxtujadntfb4y","_id":"cljf4hdtd003oxtuj07no3inm"},{"post_id":"cljf4hdt6000jxtujda384bzm","tag_id":"cljf4hdtd003ixtuj7dul4a37","_id":"cljf4hdtd003qxtujhswdaib6"},{"post_id":"cljf4hdt7000kxtuj4fvzajmx","tag_id":"cljf4hdtc0033xtujcacxd0z5","_id":"cljf4hdtd003txtuj0amfcise"},{"post_id":"cljf4hdt7000kxtuj4fvzajmx","tag_id":"cljf4hdtc0036xtuj88yh9rzi","_id":"cljf4hdtd003uxtujcm7f8prr"},{"post_id":"cljf4hdt7000kxtuj4fvzajmx","tag_id":"cljf4hdtc0039xtujhw1wf3b9","_id":"cljf4hdtd003wxtuj6w6xc86o"},{"post_id":"cljf4hdt7000kxtuj4fvzajmx","tag_id":"cljf4hdtc003axtuj7vjz96ua","_id":"cljf4hdte003xxtujh5nc7glb"},{"post_id":"cljf4hdt7000nxtuj02j3f7v3","tag_id":"cljf4hdtd003sxtujd2qt2hth","_id":"cljf4hdte0040xtuj2qlt0xz4"},{"post_id":"cljf4hdt7000nxtuj02j3f7v3","tag_id":"cljf4hdtd003vxtujd1ii6s1d","_id":"cljf4hdte0041xtujci8abhng"},{"post_id":"cljf4hdt7000nxtuj02j3f7v3","tag_id":"cljf4hdte003yxtuj0grz0wwe","_id":"cljf4hdte0043xtujbnbpej20"},{"post_id":"cljf4hdt7000pxtuj041zgfuq","tag_id":"cljf4hdtd003sxtujd2qt2hth","_id":"cljf4hdte0046xtujfw44cmuw"},{"post_id":"cljf4hdt7000pxtuj041zgfuq","tag_id":"cljf4hdtd003vxtujd1ii6s1d","_id":"cljf4hdte0047xtujfrp68juf"},{"post_id":"cljf4hdt7000pxtuj041zgfuq","tag_id":"cljf4hdte003yxtuj0grz0wwe","_id":"cljf4hdte0049xtujelqcedk6"},{"post_id":"cljf4hdt8000txtuj5lcnd7by","tag_id":"cljf4hdte0045xtujb0j57k6q","_id":"cljf4hdte004bxtujdgz25qco"},{"post_id":"cljf4hdt8000txtuj5lcnd7by","tag_id":"cljf4hdte0048xtujhgmz87cu","_id":"cljf4hdte004cxtuj50t2amh9"},{"post_id":"cljf4hdt8000txtuj5lcnd7by","tag_id":"cljf4hdt30005xtujh9pjfh4t","_id":"cljf4hdte004extuje705fyqk"},{"post_id":"cljf4hdt8000vxtujeia51wsr","tag_id":"cljf4hdt30005xtujh9pjfh4t","_id":"cljf4hdte004gxtujf39g5zna"},{"post_id":"cljf4hdt8000vxtujeia51wsr","tag_id":"cljf4hdte004axtuja5j4hrk3","_id":"cljf4hdte004hxtujdpl30rtq"},{"post_id":"cljf4hdt8000vxtujeia51wsr","tag_id":"cljf4hdte004dxtuj7dmr8ub0","_id":"cljf4hdte004ixtujb3is5doa"},{"post_id":"cljf4hdt8000vxtujeia51wsr","tag_id":"cljf4hdt5000dxtuj84zr6hix","_id":"cljf4hdte004jxtuj72mw06me"},{"post_id":"cljf4hdt8000vxtujeia51wsr","tag_id":"cljf4hdt6000ixtuj6u7m11v6","_id":"cljf4hdte004kxtujgmd7d80m"},{"post_id":"cljf4hdt8000vxtujeia51wsr","tag_id":"cljf4hdte004fxtujaftk2hv3","_id":"cljf4hdte004lxtuj93mvdy8z"},{"post_id":"cljf4hdth004sxtuj1ij92a84","tag_id":"cljf4hdtd003sxtujd2qt2hth","_id":"cljf4hdth004yxtujckne4d51"},{"post_id":"cljf4hdth004sxtuj1ij92a84","tag_id":"cljf4hdtd003vxtujd1ii6s1d","_id":"cljf4hdth0052xtujblrqg1ro"},{"post_id":"cljf4hdth004sxtuj1ij92a84","tag_id":"cljf4hdte003yxtuj0grz0wwe","_id":"cljf4hdti0055xtujhu8t1v6o"},{"post_id":"cljf4hdtg004mxtuj41yw3q6u","tag_id":"cljf4hdtg004oxtuj1zok4pt5","_id":"cljf4hdti005axtuj3ivaf5f7"},{"post_id":"cljf4hdtg004mxtuj41yw3q6u","tag_id":"cljf4hdth004uxtuj4rx151xl","_id":"cljf4hdti005cxtuj0gxfei5y"},{"post_id":"cljf4hdtg004nxtuj3xkocbuh","tag_id":"cljf4hdth0051xtujgrm246k4","_id":"cljf4hdti005hxtuj8ct6d1l8"},{"post_id":"cljf4hdtg004nxtuj3xkocbuh","tag_id":"cljf4hdti0059xtuj8dfpdx77","_id":"cljf4hdti005jxtuj0jeibagc"},{"post_id":"cljf4hdtg004pxtuj0pz6h6wv","tag_id":"cljf4hdt90010xtujhy036rys","_id":"cljf4hdtj005mxtujghrn49bp"},{"post_id":"cljf4hdtg004pxtuj0pz6h6wv","tag_id":"cljf4hdti005fxtujhnq68e1k","_id":"cljf4hdtj005oxtuj81t4dioo"},{"post_id":"cljf4hdtg004rxtuj5kwgfgyj","tag_id":"cljf4hdti005kxtuj28db0huu","_id":"cljf4hdtj005vxtujf1mi4k5r"},{"post_id":"cljf4hdtg004rxtuj5kwgfgyj","tag_id":"cljf4hdtj005qxtuj31612yn8","_id":"cljf4hdtj005xxtuj4jz4a1rl"},{"post_id":"cljf4hdth004vxtujeju65zw1","tag_id":"cljf4hdtj005qxtuj31612yn8","_id":"cljf4hdtj0061xtuj6qz91iqe"},{"post_id":"cljf4hdth004vxtujeju65zw1","tag_id":"cljf4hdtj005yxtuj9m786uw3","_id":"cljf4hdtj0062xtuj5a9mhjbw"},{"post_id":"cljf4hdth004vxtujeju65zw1","tag_id":"cljf4hdtj005zxtujbniggusy","_id":"cljf4hdtj0064xtujf5ttg85h"},{"post_id":"cljf4hdth004zxtuj8sgdcklp","tag_id":"cljf4hdtj005yxtuj9m786uw3","_id":"cljf4hdtj0066xtujgmzs2l06"},{"post_id":"cljf4hdth004zxtuj8sgdcklp","tag_id":"cljf4hdtj005qxtuj31612yn8","_id":"cljf4hdtj0067xtuj4ixnh71g"},{"post_id":"cljf4hdti0053xtuj389nevnh","tag_id":"cljf4hdtj0065xtuj80rd66jj","_id":"cljf4hdtj0069xtujbopo7ulw"},{"post_id":"cljf4hdti0056xtujg8fs27r6","tag_id":"cljf4hdtg004oxtuj1zok4pt5","_id":"cljf4hdtj006axtuj3ipr3ej0"},{"post_id":"cljf4hdti0056xtujg8fs27r6","tag_id":"cljf4hdtj0068xtujh9qe32sv","_id":"cljf4hdtj006bxtuj8doqfgki"}],"Tag":[{"name":"Java","_id":"cljf4hdt30005xtujh9pjfh4t"},{"name":"asynchronization","_id":"cljf4hdt5000dxtuj84zr6hix"},{"name":"concurrency","_id":"cljf4hdt6000ixtuj6u7m11v6"},{"name":"guide","_id":"cljf4hdt7000mxtuj5iym9osd"},{"name":"setup","_id":"cljf4hdt8000sxtuj2m1vakpd"},{"name":"Arch Linux","_id":"cljf4hdt9000xxtuje7tqaj7f"},{"name":"Linux","_id":"cljf4hdt90010xtujhy036rys"},{"name":"MySQL","_id":"cljf4hdt90015xtuj17c5201h"},{"name":"charset","_id":"cljf4hdt90019xtuj0imrcv2n"},{"name":"collation","_id":"cljf4hdta001extujhlqjd26l"},{"name":"blender","_id":"cljf4hdta001ixtujf2crhhus"},{"name":"shading","_id":"cljf4hdta001oxtuj0vwqgzuw"},{"name":"render","_id":"cljf4hdta001txtuj2gcg992m"},{"name":"cycles","_id":"cljf4hdta001yxtuj5l67948d"},{"name":"eevee","_id":"cljf4hdtb0022xtuj5d1bfm7r"},{"name":"BSDF","_id":"cljf4hdtb0026xtuj85vgh0qp"},{"name":"maven","_id":"cljf4hdtb002axtujbnsb5c7n"},{"name":"dependencies confliction","_id":"cljf4hdtb002extuj1es49tku"},{"name":"class load","_id":"cljf4hdtb002kxtuj29r520p5"},{"name":"class security check","_id":"cljf4hdtc002pxtujeqb54414"},{"name":"bug","_id":"cljf4hdtc002sxtuj11zhgwct"},{"name":"wallhack","_id":"cljf4hdtc002txtuj7opta5yc"},{"name":"injection","_id":"cljf4hdtc002wxtujebbehz8l"},{"name":"reverse engineering","_id":"cljf4hdtc002zxtuj65eme13e"},{"name":"fgo","_id":"cljf4hdtc0032xtuj24cd8jt3"},{"name":"language","_id":"cljf4hdtc0033xtujcacxd0z5"},{"name":"japanese","_id":"cljf4hdtc0036xtuj88yh9rzi"},{"name":"文法","_id":"cljf4hdtc0039xtujhw1wf3b9"},{"name":"grammar","_id":"cljf4hdtc003axtuj7vjz96ua"},{"name":"Netflix Hystrix","_id":"cljf4hdtc003bxtuj3t2506xg"},{"name":"Spring Cloud","_id":"cljf4hdtd003extuj5byw866c"},{"name":"microservice","_id":"cljf4hdtd003hxtujadntfb4y"},{"name":"distributed services","_id":"cljf4hdtd003ixtuj7dul4a37"},{"name":"data structures","_id":"cljf4hdtd003sxtujd2qt2hth"},{"name":"leetcode","_id":"cljf4hdtd003vxtujd1ii6s1d"},{"name":"algorithm","_id":"cljf4hdte003yxtuj0grz0wwe"},{"name":"JVM","_id":"cljf4hdte0045xtujb0j57k6q"},{"name":"JVM Memory","_id":"cljf4hdte0048xtujhgmz87cu"},{"name":"virtual threads","_id":"cljf4hdte004axtuja5j4hrk3"},{"name":"fiber","_id":"cljf4hdte004dxtuj7dmr8ub0"},{"name":"continuations","_id":"cljf4hdte004fxtujaftk2hv3"},{"name":"networking","_id":"cljf4hdtg004oxtuj1zok4pt5"},{"name":"http","_id":"cljf4hdth004uxtuj4rx151xl"},{"name":"rust","_id":"cljf4hdth0051xtujgrm246k4"},{"name":"programing","_id":"cljf4hdti0059xtuj8dfpdx77"},{"name":"shell script","_id":"cljf4hdti005fxtujhnq68e1k"},{"name":"RabbitMQ","_id":"cljf4hdti005kxtuj28db0huu"},{"name":"Spring","_id":"cljf4hdtj005qxtuj31612yn8"},{"name":"URI","_id":"cljf4hdtj005yxtuj9m786uw3"},{"name":"issue","_id":"cljf4hdtj005zxtujbniggusy"},{"name":"todo list","_id":"cljf4hdtj0065xtuj80rd66jj"},{"name":"tcp/ip","_id":"cljf4hdtj0068xtujh9qe32sv"}]}}