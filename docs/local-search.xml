<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Project Loom 预览</title>
      <link href="/2022/07/14/project-loom-preview/"/>
      <url>/2022/07/14/project-loom-preview/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> asynchronization </tag>
            
            <tag> concurrency </tag>
            
            <tag> virtual threads </tag>
            
            <tag> fiber </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Class签名信息不匹配引起的依赖冲突</title>
      <link href="/2022/07/14/java-security-issue/"/>
      <url>/2022/07/14/java-security-issue/</url>
      
        <content type="html"><![CDATA[<h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><p>线上某个服务升级zk到<code>3.4.14</code>, 引入依赖后无法启动。</p><p>报错信息：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>SecurityException</span><span class="token operator">:</span> <span class="token keyword">class</span> <span class="token string">"javax.annotation.ManagedBean"</span>'s signer information does not match signer information of other classes in the same <span class="token keyword">package</span><span class="token namespace">at</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>ClassLoader</span><span class="token punctuation">.</span><span class="token function">checkCerts</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">891</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>ClassLoader</span><span class="token punctuation">.</span><span class="token function">preDefineClass</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">661</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>ClassLoader</span><span class="token punctuation">.</span><span class="token function">defineClass</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">754</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span>SecureClassLoader</span><span class="token punctuation">.</span><span class="token function">defineClass</span><span class="token punctuation">(</span><span class="token class-name">SecureClassLoader</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">142</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>WebappClassLoaderBase</span><span class="token punctuation">.</span><span class="token function">findClassInternal</span><span class="token punctuation">(</span><span class="token class-name">WebappClassLoaderBase</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2408</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>WebappClassLoaderBase</span><span class="token punctuation">.</span><span class="token function">findClass</span><span class="token punctuation">(</span><span class="token class-name">WebappClassLoaderBase</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">855</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>WebappClassLoaderBase</span><span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token class-name">WebappClassLoaderBase</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1327</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>loader<span class="token punctuation">.</span></span>WebappClassLoaderBase</span><span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token class-name">WebappClassLoaderBase</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1180</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Class</span><span class="token punctuation">.</span><span class="token function">forName0</span><span class="token punctuation">(</span><span class="token class-name">Native</span> <span class="token class-name">Method</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">348</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>原因如错误信息所说，同package下有不同签名信息，属于依赖冲突。<code>javax.annotation.ManagedBean</code>的package是<code>javax.annotation</code>，找一下还有哪个jar里面有这个package：<br><img src="/2022/07/14/java-security-issue/scrshot0.png" alt="搜索图"></p><p>然后找一下这两个包是什么依赖引入的（有一个肯定是zk😊):</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mvn dependency:tree -Dverbose -Dincludes<span class="token operator">=</span>com.google.code.findbugs,org.eclipse.jetty.orbit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">+</span><span class="token operator">-</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>zookeeper<span class="token operator">:</span>zookeeper<span class="token operator">:</span>jar<span class="token operator">:</span><span class="token number">3.4</span><span class="token number">.14</span><span class="token operator">:</span>compile<span class="token operator">|</span>  \<span class="token operator">-</span> com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>spotbugs<span class="token operator">:</span>spotbugs<span class="token operator">-</span>annotations<span class="token operator">:</span>jar<span class="token operator">:</span><span class="token number">3.1</span><span class="token number">.9</span><span class="token operator">:</span>compile<span class="token operator">|</span>     \<span class="token operator">-</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>code<span class="token punctuation">.</span>findbugs<span class="token operator">:</span>jsr305<span class="token operator">:</span>jar<span class="token operator">:</span><span class="token number">3.0</span><span class="token number">.2</span><span class="token operator">:</span>compile\<span class="token operator">-</span> com<span class="token punctuation">.</span>dangdang<span class="token operator">:</span>elastic<span class="token operator">-</span>job<span class="token operator">-</span>lite<span class="token operator">-</span>lifecycle<span class="token operator">:</span>jar<span class="token operator">:</span><span class="token number">2.1</span><span class="token number">.5</span><span class="token operator">:</span>compile   \<span class="token operator">-</span> com<span class="token punctuation">.</span>dangdang<span class="token operator">:</span>elastic<span class="token operator">-</span>job<span class="token operator">-</span>common<span class="token operator">-</span>restful<span class="token operator">:</span>jar<span class="token operator">:</span><span class="token number">2.1</span><span class="token number">.5</span><span class="token operator">:</span>compile      \<span class="token operator">-</span> org<span class="token punctuation">.</span>eclipse<span class="token punctuation">.</span>jetty<span class="token punctuation">.</span>aggregate<span class="token operator">:</span>jetty<span class="token operator">-</span>all<span class="token operator">-</span>server<span class="token operator">:</span>jar<span class="token operator">:</span><span class="token number">8.1</span><span class="token number">.19</span><span class="token punctuation">.</span>v20160209<span class="token operator">:</span>compile         <span class="token operator">+</span><span class="token operator">-</span> org<span class="token punctuation">.</span>eclipse<span class="token punctuation">.</span>jetty<span class="token punctuation">.</span>orbit<span class="token operator">:</span>javax<span class="token punctuation">.</span>servlet<span class="token operator">:</span>jar<span class="token operator">:</span><span class="token number">3.0</span><span class="token number">.0</span><span class="token punctuation">.</span>v201112011016<span class="token operator">:</span>compile         <span class="token operator">+</span><span class="token operator">-</span> org<span class="token punctuation">.</span>eclipse<span class="token punctuation">.</span>jetty<span class="token punctuation">.</span>orbit<span class="token operator">:</span>javax<span class="token punctuation">.</span>security<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>message<span class="token operator">:</span>jar<span class="token operator">:</span><span class="token number">1.0</span><span class="token number">.0</span><span class="token punctuation">.</span>v201108011116<span class="token operator">:</span>compile         <span class="token operator">+</span><span class="token operator">-</span> org<span class="token punctuation">.</span>eclipse<span class="token punctuation">.</span>jetty<span class="token punctuation">.</span>orbit<span class="token operator">:</span>javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>glassfish<span class="token operator">:</span>jar<span class="token operator">:</span><span class="token number">1.4</span><span class="token number">.1</span><span class="token punctuation">.</span>v201005082020<span class="token operator">:</span>compile         <span class="token operator">|</span>  \<span class="token operator">-</span> <span class="token punctuation">(</span>org<span class="token punctuation">.</span>eclipse<span class="token punctuation">.</span>jetty<span class="token punctuation">.</span>orbit<span class="token operator">:</span>javax<span class="token punctuation">.</span>activation<span class="token operator">:</span>jar<span class="token operator">:</span><span class="token number">1.1</span><span class="token number">.0</span><span class="token punctuation">.</span>v201105071233<span class="token operator">:</span>compile <span class="token operator">-</span> omitted <span class="token keyword">for</span> duplicate<span class="token punctuation">)</span>         <span class="token operator">+</span><span class="token operator">-</span> org<span class="token punctuation">.</span>eclipse<span class="token punctuation">.</span>jetty<span class="token punctuation">.</span>orbit<span class="token operator">:</span>javax<span class="token punctuation">.</span>activation<span class="token operator">:</span>jar<span class="token operator">:</span><span class="token number">1.1</span><span class="token number">.0</span><span class="token punctuation">.</span>v201105071233<span class="token operator">:</span>compile         \<span class="token operator">-</span> org<span class="token punctuation">.</span>eclipse<span class="token punctuation">.</span>jetty<span class="token punctuation">.</span>orbit<span class="token operator">:</span>javax<span class="token punctuation">.</span>annotation<span class="token operator">:</span>jar<span class="token operator">:</span><span class="token number">1.1</span><span class="token number">.0</span><span class="token punctuation">.</span>v201108011116<span class="token operator">:</span>compile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>排掉任意一个就OK了，大概率是jetty做了签名，毕竟是个server（可执行代码）。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote><p><a href="https://stackoverflow.com/questions/2877262/java-securityexception-signer-information-does-not-match">Java SecurityException: signer information does not match</a></p></blockquote><pre class="line-numbers language-text" data-language="text"><code class="language-text">This happens when classes belonging to the same package are loaded from different JAR files, and those JAR files have signatures signed with different certificates - or, perhaps more often, at least one is signed and one or more others are not (which includes classes loaded from directories since those AFAIK cannot be signed).So either make sure all JARs (or at least those which contain classes from the same packages) are signed using the same certificate, or remove the signatures from the manifest of JAR files with overlapping packages.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> maven </tag>
            
            <tag> dependencies confliction </tag>
            
            <tag> class load </tag>
            
            <tag> class security check </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异步/并发</title>
      <link href="/2022/07/10/asynchronization/"/>
      <url>/2022/07/10/asynchronization/</url>
      
        <content type="html"><![CDATA[<h2 id="Future"><a href="#Future" class="headerlink" title="Future"></a>Future</h2><p>基本的异步模型，主要方法有<code>get()</code>、<code>get(time,timeUnit)</code>、<code>isDone()</code>等。</p><h2 id="CompletableFuture"><a href="#CompletableFuture" class="headerlink" title="CompletableFuture"></a>CompletableFuture</h2><p>支持回调，更好的支持多个异步任务的流程控制，比如先后顺序，成功或失败之后的流转。</p><h3 id="假如有A、B两个任务，B需要在A之后执行："><a href="#假如有A、B两个任务，B需要在A之后执行：" class="headerlink" title="假如有A、B两个任务，B需要在A之后执行："></a>假如有A、B两个任务，B需要在A之后执行：</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> aQuery <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">queryA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exceptionally</span><span class="token punctuation">(</span>e <span class="token operator">-></span> <span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"failed to execute aQuery"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//aQuery成功后继续执行bQuery</span><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">></span></span> bQuery <span class="token operator">=</span> cfQuery<span class="token punctuation">.</span><span class="token function">thenApplyAsync</span><span class="token punctuation">(</span>aResult <span class="token operator">-></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>aResult <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token function">queryB</span><span class="token punctuation">(</span>aResult<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exceptionally</span><span class="token punctuation">(</span>e <span class="token operator">-></span> <span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"failed to execute bQuery"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// bQuery成功后打印结果</span>bQuery<span class="token punctuation">.</span><span class="token function">thenAccept</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果不依赖CompletableFuture的话：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> aFuture <span class="token operator">=</span> <span class="token function">asyncQueryA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> aResult <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">&#123;</span>    aResult <span class="token operator">=</span> aFuture<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"failed to execute asyncQueryA"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">String</span> bResult <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>aResult <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> bFuture <span class="token operator">=</span> <span class="token function">asyncQueryB</span><span class="token punctuation">(</span>aResult<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">try</span><span class="token punctuation">&#123;</span>        bResult <span class="token operator">=</span> bFuture<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"failed to execute asyncQueryB"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bResult<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="假如有A、B两个任务，A或B任意一个任务执行完成就结束："><a href="#假如有A、B两个任务，A或B任意一个任务执行完成就结束：" class="headerlink" title="假如有A、B两个任务，A或B任意一个任务执行完成就结束："></a>假如有A、B两个任务，A或B任意一个任务执行完成就结束：</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//aQuery</span><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> aQuery <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">queryA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exceptionally</span><span class="token punctuation">(</span>e <span class="token operator">-></span> <span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"failed to execute aQuery"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//bQuery</span><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">></span></span> bQuery <span class="token operator">=</span> cfQuery<span class="token punctuation">.</span><span class="token function">thenApplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">queryB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exceptionally</span><span class="token punctuation">(</span>e <span class="token operator">-></span> <span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"failed to execute bQuery"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> aOrBQuery <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">anyOf</span><span class="token punctuation">(</span>aQuery<span class="token punctuation">,</span> bQuery<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 任意一个任务成功后打印结果</span>aOrBQuery<span class="token punctuation">.</span><span class="token function">thenAccept</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这种情况如果不依赖CompletableFuture的话……：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> aFuture <span class="token operator">=</span> <span class="token function">asyncQueryA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> bFuture <span class="token operator">=</span> <span class="token function">asyncQueryB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> failedTask <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>aFuture<span class="token punctuation">.</span><span class="token function">isDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">try</span><span class="token punctuation">&#123;</span>            result <span class="token operator">=</span> aFuture<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"failed to execute asyncQueryA"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            failedTask<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>bFuture<span class="token punctuation">.</span><span class="token function">isDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">try</span><span class="token punctuation">&#123;</span>            result <span class="token operator">=</span> bFuture<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"failed to execute asyncQueryB"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            failedTask<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 不写==2, 防止以后加任务cdef等等时忘记修改这个判断值引起死循环</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>failedTask <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="实现细节和注意点"><a href="#实现细节和注意点" class="headerlink" title="实现细节和注意点"></a>实现细节和注意点</h3><ol><li><code>thenAccept</code>或者<code>exceptionally</code>这种方法是在调用线程中执行的，会阻塞调用线程，<code>supplyAsync</code>或者<code>thenApplyAsync</code>这种名字里带Async的会被提交到线程池执行。</li><li>如果不指定线程池的话，默认使用的是<code>ForkJoinPool</code>的<code>CommonPool</code>线程池（默认的coreSize和poolSize是8还是几来着，反正很少），可能会和其他的任务共享线程池，也许会互相抢占线程资源。</li><li><code>CompletionStage</code>定义流程控制的能力，各种流程组合的实际动作都基于<code>CompletableFuture.Completion</code>实现的类</li></ol><h2 id="RxJava"><a href="#RxJava" class="headerlink" title="RxJava"></a>RxJava</h2><p>（待续）</p><h2 id="Fiber-x2F-Coroutines"><a href="#Fiber-x2F-Coroutines" class="headerlink" title="Fiber&#x2F;Coroutines"></a>Fiber&#x2F;Coroutines</h2><p><a href="/2022/07/14/project-loom-preview/index.html">Project Loom Preview</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> asynchronization </tag>
            
            <tag> concurrency </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「に」と「で」作为场所助词时的区别</title>
      <link href="/2022/06/29/jp-ni-de-basyou/"/>
      <url>/2022/06/29/jp-ni-de-basyou/</url>
      
        <content type="html"><![CDATA[<h1 id="例句"><a href="#例句" class="headerlink" title="例句"></a>例句</h1><ol><li>今日はずっと家<code>に</code>います。</li><li>明日はずっと家<code>で</code>ゲームをします。</li><li>あそこ<code>に</code>山が見えます。（あそこ<code>から</code>山が見えます。）</li><li>友達の家<code>に</code>携帯を忘れました。</li><li>友達の家<code>で</code>携帯を無くしました。</li><li>ここ<code>に</code>車を停めてください。・ここ<code>で</code>車を停めでください。</li></ol><h1 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h1><p><code>に</code>作为场所&#x2F;地点助词的时候，表达的是一种静态的结果或者一种状态，<code>で</code>则表达一个动作或者一个行为。</p><blockquote><p>今日はずっと家<code>に</code>います。</p></blockquote><p>表达“存在”是一种状态。</p><blockquote><p>明日はずっと家<code>で</code>ゲームをします。</p></blockquote><p>表达“打游戏”是一个动作。</p><blockquote><p>あそこ<code>に</code>山が見えます。</p></blockquote><p>表达的“能被看见”是一个状态。</p><blockquote><p>友達の家<code>に</code>携帯を忘れました。</p></blockquote><p>表达“落在某处”是一个事实&#x2F;状态。</p><blockquote><p>友達の家<code>で</code>携帯を無くしました。</p></blockquote><p>表达“弄丢”是一个动作。</p><p><code>从“弄丢了”这个动作发生开始，就一直处于”忘了“的状态。</code></p><blockquote><p>ここ<code>に</code>車を停めてください。</p></blockquote><p>把车停在这里，表达的是在这里保持一种停着的状态。</p><blockquote><p>ここ<code>で</code>車を停めでください。</p></blockquote><p>在这里停车，表达的是“停”这个动作，至于“停”完了是保持“停”的状态还是继续发生“动”的后续动作并不是重点。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">再比如说：寝る，有两个意思，一个是“睡觉　眠る”，一个是“躺着 横たわる・横になる”「ここで寝る」表示的是在这里睡觉，因为睡觉是个动作，至于你这个动作做了会怎么样那不重要，就在这里睡就完事了。「ここに寝る」表示在这里躺着，怎么躺着的不重要，倒下去还是慢慢躺下去或者后空翻接转体三周半摔在上面都不重要，最终变成躺着就可以，只要最后是在ここ躺着的状态都OK。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Lanaguage </category>
          
      </categories>
      
      
        <tags>
            
            <tag> language </tag>
            
            <tag> japanese </tag>
            
            <tag> 文法 </tag>
            
            <tag> grammar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文法「ところ」</title>
      <link href="/2022/06/23/jp-tokoro/"/>
      <url>/2022/06/23/jp-tokoro/</url>
      
        <content type="html"><![CDATA[<h1 id="N4"><a href="#N4" class="headerlink" title="N4"></a>N4</h1><h2 id="原型或は意志型・ている・た-＋-ところだ"><a href="#原型或は意志型・ている・た-＋-ところだ" class="headerlink" title="原型或は意志型・ている・た　＋　ところだ"></a>原型或は意志型・ている・た　＋　ところだ</h2><p>動作をするタイミングを表す表現です。</p><blockquote><p>今は寝るところだ。<br>さっきは寝ているところだ。</p></blockquote><h2 id="のところ"><a href="#のところ" class="headerlink" title="のところ"></a>のところ</h2><p>今の状況を表す表現です。</p><blockquote><p>今のところ、寝ることはできない。</p></blockquote><h1 id="N2"><a href="#N2" class="headerlink" title="N2"></a>N2</h1><h2 id="たところ（が）"><a href="#たところ（が）" class="headerlink" title="たところ（が）"></a>たところ（が）</h2><p>逆接を表す表現です。</p><blockquote><p>羊を数えたところが、眠れなっかた。</p></blockquote><h2 id="たところ"><a href="#たところ" class="headerlink" title="たところ"></a>たところ</h2><p>B結果がどうなるかどうか分からず・B結果を期待せずにA行動を行った。<br>A行動はB結果のきっかけだ。</p><blockquote><p>単にベッドに着いたところ、ちゃんと寝る始めた。</p></blockquote><h2 id="ところを"><a href="#ところを" class="headerlink" title="ところを"></a>ところを</h2><p>A動作をする時に、Bが発生した・していた。</p><blockquote><p>寝ているところを騒音に起こした。</p></blockquote><h2 id="ところだった・でした"><a href="#ところだった・でした" class="headerlink" title="ところだった・でした"></a>ところだった・でした</h2><p>A条件が異なれば、B結果になる。<br>B事項が発生する前にA条件で回避したことができた。<br>A条件で、危うくB結果になった。</p><blockquote><p>寝不足のせいで、さっき歩く時寝るところだった。</p></blockquote><h2 id="ところを見ると"><a href="#ところを見ると" class="headerlink" title="ところを見ると"></a>ところを見ると</h2><p>A状況から、B状況を推測する表現です。</p><blockquote><p>瞼がすごく重く見えるところを見ると、さぞ昨日の夜は夜更かしをしたな。</p></blockquote><h2 id="ところまで"><a href="#ところまで" class="headerlink" title="ところまで"></a>ところまで</h2><p>動作は到達できる限界点を表す表現です。</p><blockquote><p>出来るところまで寝てください。</p></blockquote><h2 id="ていたところだ・〜ところに〜・〜ところへ〜"><a href="#ていたところだ・〜ところに〜・〜ところへ〜" class="headerlink" title="ていたところだ・〜ところに〜・〜ところへ〜"></a>ていたところだ・〜ところに〜・〜ところへ〜</h2><p>ちょうどAをする前に・をしている時に・が終わった時にBが発生した。</p><blockquote><p>寝ようといたところに、チャイムが鳴った。</p></blockquote><h1 id="N1"><a href="#N1" class="headerlink" title="N1"></a>N1</h1><h2 id="ところ・ところを"><a href="#ところ・ところを" class="headerlink" title="ところ・ところを"></a>ところ・ところを</h2><p>相手に対する謝罪・依頼・挨拶などの場合に使う。</p><blockquote><p>お忙しいところ中申し訳ございませんが、少し休暇の話ですが…</p></blockquote><h2 id="たところで"><a href="#たところで" class="headerlink" title="たところで"></a>たところで</h2><p>「１」A動作が終わった後すぐB動作が発生したことを表す。</p><blockquote><p>ベッドに着いたところですぐに寝た。</p></blockquote><p>「２」A事項が仮に成立したとしても、B事項に影響はほぼないことを表す表現です。</p><blockquote><p>今起きるところで世界は平和になるはずない。</p></blockquote><h2 id="ところで"><a href="#ところで" class="headerlink" title="ところで"></a>ところで</h2><p>話題を変える表現です。</p><blockquote><p>ところで寝ませんか？一緒に。</p></blockquote><h2 id="〜たら・ば〜ところだ"><a href="#〜たら・ば〜ところだ" class="headerlink" title="〜たら・ば〜ところだ"></a>〜たら・ば〜ところだ</h2><p>実際には起こらなかったA事項は、もし起こっていればB状況になる表現です。</p><blockquote><p>徹夜をしたら、起きないところだ。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Lanaguage </category>
          
      </categories>
      
      
        <tags>
            
            <tag> language </tag>
            
            <tag> japanese </tag>
            
            <tag> 文法 </tag>
            
            <tag> grammar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hystrix</title>
      <link href="/2022/06/22/hystrix/"/>
      <url>/2022/06/22/hystrix/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/Netflix/Hystrix/wiki">官方文档</a></p></blockquote><h2 id="Hystrix的主要功能"><a href="#Hystrix的主要功能" class="headerlink" title="Hystrix的主要功能"></a>Hystrix的主要功能</h2><ol><li>线程拆分、隔离</li><li>降级、熔断</li><li>超时</li><li>缓存</li><li>监控</li></ol><h3 id="线程拆分、隔离"><a href="#线程拆分、隔离" class="headerlink" title="线程拆分、隔离"></a>线程拆分、隔离</h3><p>任务线程和请求线程隔离，每种任务（command）使用不同的线程池，相互间隔离。</p><h3 id="降级"><a href="#降级" class="headerlink" title="降级"></a>降级</h3><p>超时、异常、线程池饱和都会执行降级</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommandHelloWorld</span> <span class="token keyword">extends</span> <span class="token class-name">HystrixCommand</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>  <span class="token keyword">public</span> <span class="token class-name">CommandHelloWorld</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token class-name">HystrixCommandGroupKey<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">asKey</span><span class="token punctuation">(</span><span class="token string">"ExampleGroup"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">protected</span> <span class="token class-name">String</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 这里是正常业务</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">protected</span> <span class="token class-name">String</span> <span class="token function">getFallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 降级后的内容</span>      <span class="token comment">// 1. 如果这里不是固定的内容还有“降级业务”，</span>      <span class="token comment">// 需要在这里创建新的command，相当于再加一级。</span>      <span class="token comment">// 2. 如果这里“降级业务”是查询缓存一类的低I/O行为</span>      <span class="token comment">// 可以考虑使用“信号量”</span>    <span class="token keyword">return</span> <span class="token string">"dummy message"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>降级策略</p><ul><li>fail fast 快速失败：run中直接抛出错误</li><li>fail slient 无声失败：返回空内容，比如空map、list、null、new Object等</li><li>static&#x2F;stubbed 静态&#x2F;组装默认对象： 返回静态内容或者new一个默认值的对象</li><li>cache 缓存：查询有一定数据版本延迟的远程内容比如缓存（在上面注释里面有提）</li></ul><h3 id="熔断"><a href="#熔断" class="headerlink" title="熔断"></a>熔断</h3><p><code>关闭</code>状态，如果一段时间总的请求数达到<code>circuitBreaker.requestVolumeThreshold</code>且失败的请求数大于<code>circuitBreaker.errorThresholdPercentage</code>这个百分比，断路器就会进入<code>打开</code>状态，打开状态下所有的请求都会直接执行降级逻辑，然后在<code>circuitBreaker.sleepWindowInMilliseconds</code>这个时间后会进入<code>半开</code>状态，半开状态下会尝试放一个请求，如果：</p><ol><li>该请求成功，则会进入<code>关闭</code>状态</li><li>该请求失败，保持<code>打开</code>状态（将当前时间设置为打开时间，再次等待<code>circuitBreaker.sleepWindowInMilliseconds</code>进入<code>半开</code>）</li></ol><p>根据<a href="#%E9%99%8D%E7%BA%A7">降级</a>，hystrix的熔断降级条件可以概括为<code>高延迟</code>、<code>低服务质量</code>、<code>超限并发</code></p><h3 id="任务的超时配置"><a href="#任务的超时配置" class="headerlink" title="任务的超时配置"></a>任务的超时配置</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">CommandHelloWorld</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token class-name">Setter</span>    <span class="token punctuation">.</span><span class="token function">withGroupKey</span><span class="token punctuation">(</span><span class="token class-name">HystrixCommandGroupKey<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">asKey</span><span class="token punctuation">(</span><span class="token string">"ExampleGroup"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">andCommandPropertiesDefaults</span><span class="token punctuation">(</span>      <span class="token class-name">HystrixCommandProperties<span class="token punctuation">.</span>Setter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment">// 设置1s超时</span>      <span class="token punctuation">.</span><span class="token function">withExecutionTimeoutInMilliseconds</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>超时会调用<code>getFallback()</code></p><h3 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h3><p>（HystrixRequestContext、略）</p><h3 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h3><p>（hystrix-metrics-event-stream、略）</p><p><img src="/2022/06/22/hystrix/hystrix.webp" alt="hystrix"></p>]]></content>
      
      
      <categories>
          
          <category> Distributed services </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Netflix Hystrix </tag>
            
            <tag> Spring Cloud </tag>
            
            <tag> microservice </tag>
            
            <tag> distributed services </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blender学习笔记0</title>
      <link href="/2022/06/18/blender-learning-memo0/"/>
      <url>/2022/06/18/blender-learning-memo0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>参照<a href="https://docs.blender.org/manual/zh-hans/3.1/render/shader_nodes/shader/principled.html">官方文档</a>学习🙂</p></blockquote><h2 id="着色器shader"><a href="#着色器shader" class="headerlink" title="着色器shader"></a>着色器<code>shader</code></h2><h3 id="原理化BSDFpricipled-BSDF"><a href="#原理化BSDFpricipled-BSDF" class="headerlink" title="原理化BSDFpricipled BSDF"></a>原理化BSDF<code>pricipled BSDF</code></h3><p>自带的eevee和cycles（或cycles-e之类的衍生）渲染器使用的着色器。</p><blockquote><p>如果使用octane渲染器，就要用universal material着色器，但基本的着色原理大差不差</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p><img src="/2022/06/18/blender-learning-memo0/render_shader-nodes_shader_principled_node.png" alt="principled BSDF"></p><h4 id="基础色Base-Color"><a href="#基础色Base-Color" class="headerlink" title="基础色Base Color"></a>基础色<code>Base Color</code></h4><p>漫射或金属表面颜色。</p><h4 id="次表面Subsurface"><a href="#次表面Subsurface" class="headerlink" title="次表面Subsurface"></a>次表面<code>Subsurface</code></h4><p>漫反射和次表面散射之间的混合。并非漫反射和次表面散射之间的简单混合，而是会与次表面半径的数值进行相乘运算。</p><h4 id="次表面半径Subsurface-Radius"><a href="#次表面半径Subsurface-Radius" class="headerlink" title="次表面半径Subsurface Radius"></a>次表面半径<code>Subsurface Radius</code></h4><p>光散射到表面下方的平均距离。较高的半径可以使外观更柔和，因为光线会流入阴影区域并穿过物体。散射距离是针对RGB通道单独指定的，对于具有较强红光散射的皮肤材质，渲染效果较佳。X，Y和Z的数值会分别映射到R，G和B的值。</p><h4 id="次表面颜色Subsurface-Color"><a href="#次表面颜色Subsurface-Color" class="headerlink" title="次表面颜色Subsurface Color"></a>次表面颜色<code>Subsurface Color</code></h4><p>次表面基础颜色。</p><h4 id="次表面折射率Subsurface-IOR（只支持cycles）"><a href="#次表面折射率Subsurface-IOR（只支持cycles）" class="headerlink" title="次表面折射率Subsurface IOR（只支持cycles）"></a>次表面折射率<code>Subsurface IOR</code>（只支持cycles）</h4><p>次表面散射的折射率。</p><h4 id="次表面各向异性Subsurface-Anisotropy（只支持cycles）"><a href="#次表面各向异性Subsurface-Anisotropy（只支持cycles）" class="headerlink" title="次表面各向异性Subsurface Anisotropy（只支持cycles）"></a>次表面各向异性<code>Subsurface Anisotropy</code>（只支持cycles）</h4><p>控制次表面散射的方向性。</p><h4 id="金属度Metallic"><a href="#金属度Metallic" class="headerlink" title="金属度Metallic"></a>金属度<code>Metallic</code></h4><p>从无金属到全金属的混合材质模式。数值为1.0时表现为基础颜色叠加完全镜面反射着色，不含任何漫射或透明属性。数值为0.0时材质变现为底层的漫射或透明层样子，但顶部仍保留着一层反射层。</p><h4 id="镜面反射Specular"><a href="#镜面反射Specular" class="headerlink" title="镜面反射Specular"></a>镜面反射<code>Specular</code></h4><p>非传导性高光反射量。表面沿法线方向的反射率常设定在0-8％范围内。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">可以使用下面这个特殊情况下的菲涅耳公式，来计算具有已知折射率的真实材质计算高光值：    specular = ((ior - 1)/(ior + 1))^2 / 0.08 例如：    水: 折射率 = 1.33, 高光 = 0.25    玻璃: 折射率 = 1.5, 高光 = 0.5    钻石: 折射率 = 2.417, 高光 = 2.15由于确实存在反射率高于8％的材料，因此该处允许取值大于1。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="高光染色Specular-Tint"><a href="#高光染色Specular-Tint" class="headerlink" title="高光染色Specular Tint"></a>高光染色<code>Specular Tint</code></h4><p>使用基础色对朝向面进行高光反射，而镜面反射保持白色。</p><p>普通电介质具有无色反射，因此该参数在技术上并不具有物理学上的正确性，但可用于模拟具有复杂表面结构的材质外观。</p><h4 id="粗糙度Roughness"><a href="#粗糙度Roughness" class="headerlink" title="粗糙度Roughness"></a>粗糙度<code>Roughness</code></h4><p>用于确定漫反射和镜面反射时，物体表面的微平面粗糙度。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">从旧版的 光泽 BSDF 着色器节点转换时，应使用原始值的平方根。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="各向异性过滤Anisotropic（只支持cycles）"><a href="#各向异性过滤Anisotropic（只支持cycles）" class="headerlink" title="各向异性过滤Anisotropic（只支持cycles）"></a>各向异性过滤<code>Anisotropic</code>（只支持cycles）</h4><p>镜面反射的各向异性量。较高的设定值可提供沿切线方向的细长高光；设定为负值则会给出垂直于切线方向的高光。</p><h4 id="各向异性旋转Anisotropic-Rotation（只支持cycles）"><a href="#各向异性旋转Anisotropic-Rotation（只支持cycles）" class="headerlink" title="各向异性旋转Anisotropic Rotation（只支持cycles）"></a>各向异性旋转<code>Anisotropic Rotation</code>（只支持cycles）</h4><p>旋转各向异性的方向，取值为1.0时，旋转一周。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">与 各向异性 BSDF 着色器节点不同，该节点的高光延伸方向会旋转90°。可通过增加0.25的旋转值进行更正。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/06/18/blender-learning-memo0/render_shader-nodes_shader_principled_example-2a.jpg" alt="Anisotropic &amp; Roughness 1"><br><img src="/2022/06/18/blender-learning-memo0/render_shader-nodes_shader_principled_example-2b.jpg" alt="Anisotropic &amp; Roughness 2"></p><h4 id="光泽Sheen"><a href="#光泽Sheen" class="headerlink" title="光泽Sheen"></a>光泽<code>Sheen</code></h4><p>边缘附近类似天鹅绒材质的反射数量，用于模拟布料等材质。</p><ul><li>也可以用于表现人脸或者皮肤上面的汗毛效果，在光照下微微的发光</li></ul><h4 id="光泽染色Sheen-Tint"><a href="#光泽染色Sheen-Tint" class="headerlink" title="光泽染色Sheen Tint"></a>光泽染色<code>Sheen Tint</code></h4><p>在白色和基础色之间进行混合，以获得光泽反射效果。</p><h4 id="清漆Clearcoat"><a href="#清漆Clearcoat" class="headerlink" title="清漆Clearcoat"></a>清漆<code>Clearcoat</code></h4><p>物体顶部的白色高光层。适用于汽车油漆等材质的模拟。</p><h4 id="清漆粗糙度Clearcoat-Roughness"><a href="#清漆粗糙度Clearcoat-Roughness" class="headerlink" title="清漆粗糙度Clearcoat Roughness"></a>清漆粗糙度<code>Clearcoat Roughness</code></h4><p>清漆的粗糙度。</p><h4 id="IOR"><a href="#IOR" class="headerlink" title="IOR"></a>IOR</h4><p>折射率。</p><h4 id="传递采样Transmission"><a href="#传递采样Transmission" class="headerlink" title="传递采样Transmission"></a>传递采样<code>Transmission</code></h4><p>数值设定为0时，表面完全不透明；数值设定为1时，表面为玻璃状。不同的取值代表上述两种状态的混合效果。</p><h4 id="透射粗糙度Transmission-Roughness（只支持cycles）"><a href="#透射粗糙度Transmission-Roughness（只支持cycles）" class="headerlink" title="透射粗糙度Transmission Roughness（只支持cycles）"></a>透射粗糙度<code>Transmission Roughness</code>（只支持cycles）</h4><p>与 GGX 分布一起，用于控制透射光的粗糙度。</p><h4 id="自发光-发射-Emission"><a href="#自发光-发射-Emission" class="headerlink" title="自发光(发射)Emission"></a>自发光(发射)<code>Emission</code></h4><p>来自表面的自发光，与自发光着色器类似。</p><h4 id="自发光强度Emission-Strength"><a href="#自发光强度Emission-Strength" class="headerlink" title="自发光强度Emission Strength"></a>自发光强度<code>Emission Strength</code></h4><p>发射光的强度。值 1.0 将确保图像中的对象具有与自发光颜色完全相同的颜色，即使其“无阴影”。</p><h4 id="Alpha"><a href="#Alpha" class="headerlink" title="Alpha"></a>Alpha</h4><p>控制表面的透明度，数值设定为1.0时，表面完全不透明。通常连接到 “图像纹理” 着色器节点的Alpha输出接口。</p><h4 id="法向Normal"><a href="#法向Normal" class="headerlink" title="法向Normal"></a>法向<code>Normal</code></h4><p>控制基础图层的法线方向。</p><h4 id="清漆法线Clearcoat-Normal"><a href="#清漆法线Clearcoat-Normal" class="headerlink" title="清漆法线Clearcoat Normal"></a>清漆法线<code>Clearcoat Normal</code></h4><p>控制 清漆 图层的法线方向。</p><h4 id="切向-正切-Tangent"><a href="#切向-正切-Tangent" class="headerlink" title="切向(正切)Tangent"></a>切向(正切)<code>Tangent</code></h4><p>控制 各向异性 图层的法线方向。</p><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><h4 id="分布"><a href="#分布" class="headerlink" title="分布"></a>分布</h4><ul><li>GGX<ul><li>比 多重散射 GGX 渲染速度快，但不够精确。选择它后，可以启用 透射粗糙度 输入选项。</li></ul></li><li>多重散射 GGX<ul><li>会计算微平面之间的多次反弹和散射。这样就可以使物体不会因为过度变暗而显得突兀。</li></ul></li></ul><h4 id="次表面方法"><a href="#次表面方法" class="headerlink" title="次表面方法"></a>次表面方法</h4><p>模拟次表面散射的渲染方式。eevee不支持</p><ul><li>克里斯坦森-伯利<ul><li>基于物理的体积散射的近似值。这种方法不如随机游走准确，但是在某些情况下，这种方法会更快地解决噪声。</li></ul></li><li>随机游走（固定半径）<ul><li>为薄而弯曲的物体提供准确的结果。 Random Walk 在网格内部使用真正的体积散射，这意味着它最适合封闭网格。网格中的重叠面和孔可能会导致问题。</li></ul></li><li>随机游走<ul><li>行为类似于随机游走（固定半径），但根据颜色、次表面各向异性和次表面 IOR 调整次表面半径。因此，此方法试图保留比随机游走（固定半径）更多的表面细节和颜色。</li></ul></li></ul><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><p><img src="/2022/06/18/blender-learning-memo0/render_shader-nodes_shader_principled_example-1a.jpg" alt="principled example 1"></p>]]></content>
      
      
      <categories>
          
          <category> Blender </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blender </tag>
            
            <tag> shading </tag>
            
            <tag> render </tag>
            
            <tag> cycles </tag>
            
            <tag> eevee </tag>
            
            <tag> BSDF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL中的大小写敏感排序规则</title>
      <link href="/2022/06/17/case-sensitive-collation-in-mysql/"/>
      <url>/2022/06/17/case-sensitive-collation-in-mysql/</url>
      
        <content type="html"><![CDATA[<h2 id="utf8mb4字符集排序规则"><a href="#utf8mb4字符集排序规则" class="headerlink" title="utf8mb4字符集排序规则"></a>utf8mb4字符集排序规则</h2><p>在MySQL8.0.1之前，utf8mb4没有cs排序规则，大小写敏感的排序规则只能用<code>utf8mb4_bin</code>，然后通过类似于<code>SELECT ... ORDER BY column COLLATE utf8_croatian_ci.</code>的方法来得到更“human”的排序结果。（bin的排序方式按照类似ACSII顺序，比如大小写的字母不一定会在一起）</p><ul><li><a href="https://forums.mysql.com/read.php?103,156527,198794#msg-198794">SELECT * FROM mytable WHERE name COLLATE utf8_bin &#x3D;”azolia”</a></li><li><a href="https://forums.mysql.com/read.php?103,19380,200971#msg-200971">SELECT … ORDER BY column COLLATE utf8_croatian_ci</a></li></ul><p>MySQL8.0.1之后的版本支持utf8mb4字符集的大小写敏感排序规则（utf8mb4_0900_*_as_cs）</p><blockquote><p>0900是指unicode的版本，同utf8mb4_general_520_ci的520，都应该是指排序算法版本（一种类似谁前谁后的排序规则），没有细究<br>as表示accent sensitive（竟然支持了重音排序，他真的，我哭死…）</p></blockquote><ul><li><a href="https://dev.mysql.com/blog-archive/mysql-8-0-1-accent-and-case-sensitive-collations-for-utf8mb4/">MySQL 8.0.1: Accent and case sensitive collations for utf8mb4</a></li><li><a href="https://dev.mysql.com/blog-archive/new-collations-in-mysql-8-0-0/">New collations in MySQL 8.0.0</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> charset </tag>
            
            <tag> collation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些好用的工具</title>
      <link href="/2022/06/14/useful-utils/"/>
      <url>/2022/06/14/useful-utils/</url>
      
        <content type="html"><![CDATA[<h2 id="UriComponentsBuilder"><a href="#UriComponentsBuilder" class="headerlink" title="UriComponentsBuilder"></a>UriComponentsBuilder</h2><p><code>org.springframework.web.util.UriComponentsBuilder</code></p><blockquote><p>spring带的解析uri工具</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://domain:port/path1/subpath1?param0=0&amp;param1=1"</span><span class="token punctuation">;</span><span class="token class-name">UriComponentsBuilder</span><span class="token punctuation">.</span><span class="token function">fromHttpUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">UriComponentsBuilder</span><span class="token punctuation">.</span><span class="token function">fromUri</span><span class="token punctuation">(</span>URI<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">UriComponentsBuilder</span><span class="token punctuation">.</span><span class="token function">fromUriString</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>uriComponents<span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// e.g. domain</span>uriComponents<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// e.g. /path1/subpath1</span>uriComponents<span class="token punctuation">.</span><span class="token function">getPathSegments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// e.g. [path1, subpath1]</span>uriComponents<span class="token punctuation">.</span><span class="token function">getScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// e.g. http</span>uriComponents<span class="token punctuation">.</span><span class="token function">getQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [param0:0, param1:1]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> URI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring rabbitMQ binding配置的“陷阱”</title>
      <link href="/2022/06/14/spring-rabbitmq-binding-trap/"/>
      <url>/2022/06/14/spring-rabbitmq-binding-trap/</url>
      
        <content type="html"><![CDATA[<h2 id="Spring-RabbitMQ-bindings"><a href="#Spring-RabbitMQ-bindings" class="headerlink" title="Spring RabbitMQ bindings"></a>Spring RabbitMQ bindings</h2><blockquote><p>exchange的<code>auto-declare</code>配置同时作用于binding，如果声明新的queue，但是绑定的exchange的auto-declare为false，则不会在既有的exchange上进行绑定</p></blockquote><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">rabbit:</span>queue</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>queue0.id<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>queue.0.name<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">rabbit:</span>fanout-exchange</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>exchange.0.name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">rabbit:</span>bindings</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">rabbit:</span>binding</span> <span class="token attr-name">queue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>queue0.id<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">rabbit:</span>bindings</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">rabbit:</span>fanout-exchange</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>解析binding的入口：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">   <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doParseBindings</span><span class="token punctuation">(</span><span class="token class-name">Element</span> element<span class="token punctuation">,</span> <span class="token class-name">ParserContext</span> parserContext<span class="token punctuation">,</span><span class="token class-name">String</span> exchangeName<span class="token punctuation">,</span> <span class="token class-name">Element</span> bindings<span class="token punctuation">,</span> <span class="token class-name">AbstractExchangeParser</span> parser<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>bindings <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Element</span> binding <span class="token operator">:</span> <span class="token class-name">DomUtils</span><span class="token punctuation">.</span><span class="token function">getChildElementsByTagName</span><span class="token punctuation">(</span>bindings<span class="token punctuation">,</span> BINDING_ELE<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token comment">// 解析rabbit:binding</span><span class="token class-name">BeanDefinitionBuilder</span> bindingBuilder <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseBinding</span><span class="token punctuation">(</span>exchangeName<span class="token punctuation">,</span> binding<span class="token punctuation">,</span>parserContext<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">// 这里是重点，解析bindings的时候，传入的是element，也就是rabbit:fanout-exchange对应的元素</span><span class="token class-name">NamespaceUtils</span><span class="token punctuation">.</span><span class="token function">parseDeclarationControls</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> bindingBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">BeanDefinition</span> beanDefinition <span class="token operator">=</span> bindingBuilder<span class="token punctuation">.</span><span class="token function">getBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">(</span>beanDefinition<span class="token punctuation">,</span> parserContext<span class="token punctuation">.</span><span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">generateBeanName</span><span class="token punctuation">(</span>beanDefinition<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> parserContext<span class="token punctuation">.</span><span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每个binding的自动声明<code>shouldDeclare</code>属性的设置：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * Parses 'auto-declare' and 'declared-by' attributes. * * @param element The element. * @param builder The builder. */</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">parseDeclarationControls</span><span class="token punctuation">(</span><span class="token class-name">Element</span> element<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionBuilder</span> builder<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token comment">// 这里用exchange的auto-declare属性为每个binding设置shouldDeclare值</span><span class="token class-name">NamespaceUtils</span><span class="token punctuation">.</span><span class="token function">setValueIfAttributeDefined</span><span class="token punctuation">(</span>builder<span class="token punctuation">,</span> element<span class="token punctuation">,</span> <span class="token string">"auto-declare"</span><span class="token punctuation">,</span> <span class="token string">"shouldDeclare"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> admins <span class="token operator">=</span> element<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"declared-by"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>admins<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> adminBeanNames <span class="token operator">=</span> admins<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">ManagedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanReference</span><span class="token punctuation">></span></span> adminBeanRefs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ManagedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanReference</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> adminBeanName <span class="token operator">:</span> adminBeanNames<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>adminBeanRefs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RuntimeBeanReference</span><span class="token punctuation">(</span>adminBeanName<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>builder<span class="token punctuation">.</span><span class="token function">addPropertyValue</span><span class="token punctuation">(</span><span class="token string">"adminsThatShouldDeclare"</span><span class="token punctuation">,</span> adminBeanRefs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">NamespaceUtils</span><span class="token punctuation">.</span><span class="token function">setValueIfAttributeDefined</span><span class="token punctuation">(</span>builder<span class="token punctuation">,</span> element<span class="token punctuation">,</span> <span class="token string">"ignore-declaration-exceptions"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>shouldDeclare</code>在声明中的作用:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * Remove any instances that should not be declared by this admin. * @param declarables the collection of &#123;@link Declarable&#125;s. * @return a new collection containing &#123;@link Declarable&#125;s that should be declared by this * admin. */</span><span class="token keyword">private</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Declarable</span><span class="token punctuation">></span></span> <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token function">filterDeclarables</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> declarables<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> filtered <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">T</span> declarable <span class="token operator">:</span> declarables<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> adminsWithWhichToDeclare <span class="token operator">=</span> declarable<span class="token punctuation">.</span><span class="token function">getDeclaringAdmins</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 此处只保留shouldDeclare=true的bean</span><span class="token keyword">if</span> <span class="token punctuation">(</span>declarable<span class="token punctuation">.</span><span class="token function">shouldDeclare</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>adminsWithWhichToDeclare<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> adminsWithWhichToDeclare<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>filtered<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>declarable<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> filtered<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>初始化的部分：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * Declares all the exchanges, queues and bindings in the enclosing application context, if any. It should be safe * (but unnecessary) to call this method more than once. */</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">final</span> <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Exchange</span><span class="token punctuation">></span></span> exchanges <span class="token operator">=</span> <span class="token function">filterDeclarables</span><span class="token punctuation">(</span>contextExchanges<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">final</span> <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Queue</span><span class="token punctuation">></span></span> queues <span class="token operator">=</span> <span class="token function">filterDeclarables</span><span class="token punctuation">(</span>contextQueues<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// 这里过滤掉了shouldDeclare=false的binding</span><span class="token keyword">final</span> <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Binding</span><span class="token punctuation">></span></span> bindings <span class="token operator">=</span> <span class="token function">filterDeclarables</span><span class="token punctuation">(</span>contextBindings<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>rabbitTemplate<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChannelCallback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">doInRabbit</span><span class="token punctuation">(</span><span class="token class-name">Channel</span> channel<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span><span class="token function">declareExchanges</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> exchanges<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Exchange</span><span class="token punctuation">[</span>exchanges<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">declareQueues</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> queues<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Queue</span><span class="token punctuation">[</span>queues<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">// 向rabbit声明binding的部分</span><span class="token function">declareBindings</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> bindings<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Binding</span><span class="token punctuation">[</span>bindings<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Declarations finished"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RabbitMQ </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arch Linux 安装笔记</title>
      <link href="/2022/04/19/arch-linux-setup-guide/"/>
      <url>/2022/04/19/arch-linux-setup-guide/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://wiki.archlinux.org/">https://wiki.archlinux.org/</a></p></blockquote><h2 id="基本系统安装"><a href="#基本系统安装" class="headerlink" title="基本系统安装"></a>基本系统安装</h2><h3 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h3><ul><li>检查网络<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ip</span> <span class="token function">link</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>更新系统时间<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">timedatectl set-ntp <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3 id="准备磁盘"><a href="#准备磁盘" class="headerlink" title="准备磁盘"></a>准备磁盘</h3><ul><li>分区<ul><li><p>查看当前磁盘信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">fdisk</span> -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>进入分区</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">fdisk</span> /dev/the_disk_to_be_partitioned（要被分区的磁盘）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>uefi参考：</p><table><thead><tr><th>挂载点</th><th>分区</th><th>分区类型</th><th>大小</th></tr></thead><tbody><tr><td>&#x2F;mnt&#x2F;boot&#x2F;EFI</td><td>&#x2F;dev&#x2F;efi_system_partition</td><td>EFI系统分区</td><td>300M</td></tr><tr><td>[swap] <strong>移动设备建议不要</strong></td><td>&#x2F;dev&#x2F;swap_partition&#x2F;</td><td>Linux swap (交换空间)</td><td>&gt; 512M (2G if physical ram &gt; 4G)</td></tr><tr><td>&#x2F;mnt</td><td>&#x2F;dev&#x2F;root_partition</td><td>Linux x86-64 根目录 (&#x2F;)</td><td>剩余空间</td></tr></tbody></table></li><li><p><em>移动设备的情况下:</em></p><table><thead><tr><th>挂载点</th><th>分区</th><th>分区类型</th><th>大小</th></tr></thead><tbody><tr><td><em>none</em></td><td><em>none</em></td><td>BIOS启动分区</td><td>1M</td></tr><tr><td>&#x2F;mnt&#x2F;boot&#x2F;EFI</td><td>&#x2F;dev&#x2F;efi_system_partition</td><td>EFI系统分区</td><td>300M</td></tr><tr><td>&#x2F;mnt</td><td>&#x2F;dev&#x2F;root_partition</td><td>Linux x86-64 根目录 (&#x2F;)</td><td>剩余空间</td></tr></tbody></table></li><li><p>格式化分区</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mkfs.ext4 /dev/root_partition（根分区）<span class="token comment"># 移动设备关闭日志 mkfs.ext4 -O "^has_journal" /dev/root_partition（根分区）</span><span class="token function">mkswap</span> /dev/swap_partition（交换空间分区）mkfs.fat -F <span class="token number">32</span> /dev/efi_system_partition<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>挂载分区&amp;启用交换空间</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mount</span> /dev/root_partition（根分区） /mnt<span class="token function">mount</span> /dev/efi_system_partition /mnt/boot/efi<span class="token function">swapon</span> /dev/swap_partition（交换空间分区）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h3 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h3><ul><li><p>设置cn源</p><p>第一种方法</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function">curl</span> <span class="token string">'https://archlinux.org/mirrorlist/?country=CN&amp;prototcol=http&amp;protocol=https&amp;ip_version=4'</span> <span class="token operator">></span> /etc/pacman.d/mirrorlist <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token builtin class-name">echo</span> /etc/pacman.d/mirrorlist <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token function">sudo</span> <span class="token function">vim</span> /etc/pacman.d/mirrorlist <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token builtin class-name">echo</span> <span class="token string">'pacman mirror list updated'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  然后将<code>/etc/pacman.d/mirrorlist</code>中注释去掉</p><p>第二种方法</p><p>在<code>/etc/pacman.d/mirrorlist</code>中搜索CN，放到最前面，推荐aliyun的源</p></li><li><p>安装系统&amp;软件包</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pacstrap /mnt base base-devel linux linux-firmware <span class="token function">vim</span> <span class="token function">vi</span> <span class="token function">sudo</span> <span class="token function">git</span><span class="token comment"># 移动设备 可以使用基于BFQ的io调度内核linux-zen，把linux换成linux-zen</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>  <em>参考：<a href="https://www.kernel.org/doc/html/latest/block/bfq-iosched.html">BFQ</a></em></p></li></ul><h2 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h2><h3 id="系统引导"><a href="#系统引导" class="headerlink" title="系统引导"></a>系统引导</h3><ul><li>配置fstab  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">genfstab -U /mnt <span class="token operator">>></span> /mnt/etc/fstab<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>安装grub  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pacman -S efibootmgr grub<span class="token comment"># uefi</span>grub-install --target<span class="token operator">=</span>x86_64-efi --efi-directory<span class="token operator">=</span><span class="token punctuation">&#123;</span>挂载点,如/mnt/boot/EFI<span class="token punctuation">&#125;</span> --bootloader-id<span class="token operator">=</span>GRUB<span class="token comment"># bios(非GPT分区无需其他空间，但GPT分区需要有一块1M的BIOS boot分区)</span>grub-install --target<span class="token operator">=</span>i386-pc /dev/sdX<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>  <em>移动设备的情况下</em></li></ul><p>  假设分区顺序是：<br>    - BIOS<br>    - EFI<br>    - root<br>  要先在这块设备上写入引导信息，运行<code>gdisk /dev/sdX</code></p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># gdisk /dev/sdX</span>Command <span class="token punctuation">(</span>? <span class="token keyword">for</span> <span class="token builtin class-name">help</span><span class="token punctuation">)</span>: rRecovery/transformation <span class="token builtin class-name">command</span> <span class="token punctuation">(</span>? <span class="token keyword">for</span> <span class="token builtin class-name">help</span><span class="token punctuation">)</span>: hWARNING<span class="token operator">!</span> Hybrid MBRs are flaky and dangerous<span class="token operator">!</span> If you decide not to use one,just hit the Enter key at the below prompt and your MBR partition table willbe untouched.Type from one to three GPT partition numbers, separated by spaces, to be added to the hybrid MBR, <span class="token keyword">in</span> sequence: <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span>Place EFI GPT <span class="token punctuation">(</span>0xEE<span class="token punctuation">)</span> partition first <span class="token keyword">in</span> MBR <span class="token punctuation">(</span>good <span class="token keyword">for</span> GRUB<span class="token punctuation">)</span>? <span class="token punctuation">(</span>Y/N<span class="token punctuation">)</span>: NCreating entry <span class="token keyword">for</span> GPT partition <span class="token comment">#1 (MBR partition #1)</span>Enter an MBR hex code <span class="token punctuation">(</span>default EF<span class="token punctuation">)</span>: Set the bootable flag? <span class="token punctuation">(</span>Y/N<span class="token punctuation">)</span>: NCreating entry <span class="token keyword">for</span> GPT partition <span class="token comment">#2 (MBR partition #2)</span>Enter an MBR hex code <span class="token punctuation">(</span>default EF<span class="token punctuation">)</span>: Set the bootable flag? <span class="token punctuation">(</span>Y/N<span class="token punctuation">)</span>: NCreating entry <span class="token keyword">for</span> GPT partition <span class="token comment">#3 (MBR partition #3)</span>Enter an MBR hex code <span class="token punctuation">(</span>default <span class="token number">83</span><span class="token punctuation">)</span>: Set the bootable flag? <span class="token punctuation">(</span>Y/N<span class="token punctuation">)</span>: YRecovery/transformation <span class="token builtin class-name">command</span> <span class="token punctuation">(</span>? <span class="token keyword">for</span> <span class="token builtin class-name">help</span><span class="token punctuation">)</span>: xExpert <span class="token builtin class-name">command</span> <span class="token punctuation">(</span>? <span class="token keyword">for</span> <span class="token builtin class-name">help</span><span class="token punctuation">)</span>: hExpert <span class="token builtin class-name">command</span> <span class="token punctuation">(</span>? <span class="token keyword">for</span> <span class="token builtin class-name">help</span><span class="token punctuation">)</span>: wFinal checks complete. About to <span class="token function">write</span> GPT data. THIS WILL OVERWRITE EXISTINGPARTITIONS<span class="token operator">!</span><span class="token operator">!</span>Do you want to proceed? <span class="token punctuation">(</span>Y/N<span class="token punctuation">)</span>: Y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>如果不需要兼容，不用做这一步，混合分区会在设备上存在两个分区表，系统识别这个设备分区的时候具体的行为完全依赖于系统的实现，非常不稳定</strong></p></blockquote><blockquote><p><strong>注意：写完hybrid之后，默认的windows中就只认MBR分区，假设分区按上面的例子，且还有一个4号分区，那么由于MBR的限制</strong><br><strong>在windows中第四个分区是无法正确识别文件系统的，如果要使用第四个分区且要通过MBR引导，那么这里就要在MBR写入134分区</strong><br><strong>ESP分区可以不用写到MBR里</strong></p></blockquote>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pacman -S efibootmgr grub amd-ucode intel-ucode<span class="token comment"># uefi + MBR(BIOS)混合启动</span>grub-install --target<span class="token operator">=</span>x86_64-efi --efi-directory<span class="token operator">=</span><span class="token punctuation">&#123;</span>挂载点,如/mnt/boot/EFI<span class="token punctuation">&#125;</span> --removable --bootloader-id<span class="token operator">=</span>GRUB --boot-directory<span class="token operator">=</span><span class="token punctuation">&#123;</span>root挂载点,如/mnt<span class="token punctuation">&#125;</span>/bootgrub-install --target<span class="token operator">=</span>i386-pc --recheck --boot-directory<span class="token operator">=</span>/DATA_MOUNTPOINT/boot /dev/sdX <span class="token comment">#注意这里是整个设备</span><span class="token comment"># 作为保险</span>grub-install --target<span class="token operator">=</span>i386-pc --recheck --boot-directory<span class="token operator">=</span>/DATA_MOUNTPOINT/boot /dev/<span class="token punctuation">&#123;</span>root的那个分区<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>切换到已经安装的系统</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arch-chroot /mnt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置grub.cfg</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">grub-mkconfig</span> -o /boot/grub/grub.cfg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3 id="系统初始化设置"><a href="#系统初始化设置" class="headerlink" title="系统初始化设置"></a>系统初始化设置</h3><ul><li>设置时区  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtimehwclock --systohc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>本地化  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">locale-gen<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>  – 移动设备最小化磁盘访问,把日志放到内存<br>  修改<code>/etc/systemd/journald.conf.d/usbstick.conf</code><br>  写入<br>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>Journal<span class="token punctuation">]</span><span class="token assign-left variable">Storage</span><span class="token operator">=</span>volatile<span class="token assign-left variable">RuntimeMaxUse</span><span class="token operator">=</span>30M<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></p><ul><li>initramfs<br>  如果是移动设备，将<code>/etc/mkinitcpio.conf</code>中<code>HOOKS</code>里面的<code>block</code>和<code>keyboard</code>放到<code>autodetect</code>前面，然后  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mkinitcpio -P<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>  创建<code>/etc/locale.conf</code>,设置<code>LANG=en_US.UTF-8</code></p><ul><li><p>hostname<br>  创建<code>/etc/hostname</code>,写入主机名</p></li><li><p>root密码</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">passwd</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>hosts<br>  向<code>/etc/hosts</code>写入</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">127.0</span>.0.1 localhost::1 localhost<span class="token number">127.0</span>.0.1 <span class="token punctuation">&#123;</span>hostname<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>安装网络工具</p></li></ul><p>  *networkmanager已经不使用dhcpcd, 因此需要安装dhclient<br>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pacman -S iw wpa_supplicant dialog dhcpcd dhclient netctl networkmanager network-manager-applet gnome-keyring<span class="token comment"># 设置网络开机启动</span>systemctl <span class="token builtin class-name">enable</span> NetworkManager.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></p><ul><li>新增用户  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> -m -G users,audio,lp,optical,storage,video,wheel,power -s /bin/bash 普通用户名<span class="token function">passwd</span> 普通用户名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>  运行<code>visudo</code>, 去掉<code>%wheel ALL=(ALL) ALL</code>注释</li></ul><p><strong>到这里基本已经完成最小系统的配置和安装，在继续之前，改启动项然后reboot</strong></p><h2 id="DE-x2F-WM-x2F-DM"><a href="#DE-x2F-WM-x2F-DM" class="headerlink" title="DE&#x2F;WM&#x2F;DM"></a>DE&#x2F;WM&#x2F;DM</h2><ul><li><p>安装xorg</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S xorg xorg-xinit<span class="token comment">## 移动设备要安装</span><span class="token comment"># xf86-input-synaptics 支持触控板</span><span class="token comment"># xf86-video-vesa, xf86-video-ati, xf86-video-intel, xf86-video-amdgpu, xf86-video-nouveau and xf86-video-fbdev. 大多数的开源显卡驱动</span><span class="token comment">#  libeatmydata  可以禁用fsync，比如对于firefox：eatmydata firefox</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>安装字体</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S terminus-font <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>安装DE</p><ul><li>Mate<ul><li>安装mate<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S mate mate-extra<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>配置xinitrc<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> /etc/X11/xinit/xinitrc ~/.xinitrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>把最后的启动换成<code>exec mate-session</code></li></ul></li><li>XFCE<ul><li>安装xfce<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S xfce4 xfce4-goodies<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>配置xinitrc<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> /etc/X11/xinit/xinitrc ~/.xinitrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>把最后的启动换成<code>exec startxfce4</code></li></ul></li></ul></li><li><p>仅安装WM</p><p><em>(略)</em></p></li><li><p>安装DM</p><ul><li>lightdm<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S lightdm-gtk-greeter<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="支持hyper-v增强模式"><a href="#支持hyper-v增强模式" class="headerlink" title="支持hyper-v增强模式"></a>支持hyper-v增强模式</h3>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://www.github.com/Microsoft/linux-vm-tools<span class="token builtin class-name">cd</span> linux-vm-tools/arch<span class="token comment"># 要先开代理</span>./make<span class="token punctuation">..</span>../install<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后记得在win中用管理员设置</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">Set-VM -VMName &lt;your_vm_name&gt;  -EnhancedSessionTransportType HvSocket<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  <strong>如果无法通过增强模式连接</strong></p><p>  <a href="https://wiki.archlinux.org/title/Xrdp#loginctl_or_systemctl_--user_not_working">arch wiki [loginctl or systemctl –user not working]</a></p><p>  Try commenting out all the references to <code>systemd-home</code> in <code>/etc/pam.d/system-auth</code>, see <a href="https://github.com/neutrinolabs/xrdp/issues/1684">github issue</a></p><h3 id="alias"><a href="#alias" class="headerlink" title="alias"></a>alias</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">alias</span> <span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">'sudo'</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">ls</span><span class="token operator">=</span><span class="token string">'ls --color=auto'</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">la</span><span class="token operator">=</span><span class="token string">'ls -a --color=auto'</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">ll</span><span class="token operator">=</span><span class="token string">'ls -l --color=auto'</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">lla</span><span class="token operator">=</span><span class="token string">'ls -l -a --color=auto'</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">pac</span><span class="token operator">=</span><span class="token string">'pacman -S'</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">pacyu</span><span class="token operator">=</span><span class="token string">'pacman -Syu'</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">spac</span><span class="token operator">=</span><span class="token string">'sudo pacman -S'</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">spacyu</span><span class="token operator">=</span><span class="token string">'sudo pacman -Syu'</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">v</span><span class="token operator">=</span><span class="token string">'vim'</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">sv</span><span class="token operator">=</span><span class="token string">'sudo vim'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="rsync备份"><a href="#rsync备份" class="headerlink" title="rsync备份"></a>rsync备份</h3><ul><li>安装rsync<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S <span class="token function">rsync</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>backup.sh<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token builtin class-name">echo</span> <span class="token string">'==> start to backup... type device:'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token builtin class-name">read</span> device <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token builtin class-name">echo</span> <span class="token string">'==> type mount dir:'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token builtin class-name">read</span> mount_dir <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token builtin class-name">echo</span> <span class="token string">'==> umount $device...'</span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token function">umount</span> <span class="token variable">$device</span><span class="token punctuation">;</span><span class="token punctuation">\</span><span class="token builtin class-name">echo</span> <span class="token string">'==> umount /mnt/$mount_dir...'</span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token function">umount</span> /mnt/<span class="token variable">$mount_dir</span><span class="token punctuation">;</span> <span class="token builtin class-name">echo</span> <span class="token string">'==> remove /mnt/$mount_dir...'</span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token function">rm</span> -rf /mnt/<span class="token variable">$mount_dir</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token builtin class-name">echo</span> <span class="token string">'==> create directory /mnt/$mount_dir...'</span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token function">mkdir</span> /mnt/<span class="token variable">$mount_dir</span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token builtin class-name">echo</span> <span class="token string">'==> mount $device to /mnt/$mount_dir...'</span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token function">mount</span> <span class="token variable">$device</span> /mnt/<span class="token variable">$mount_dir</span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token builtin class-name">echo</span> <span class="token string">'==> create direcotry /mnt/$mount_dir/system_bakcup...'</span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token function">mkdir</span> /mnt/<span class="token variable">$mount_dir</span>/system_backup<span class="token punctuation">;</span><span class="token builtin class-name">echo</span> <span class="token string">'==> start to sync files to /mnt/$mount_dir/system_backup...'</span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token function">rsync</span> --archive --one-file-system --hard-links <span class="token punctuation">\</span>--acls --xattrs --sparse <span class="token punctuation">\</span>--human-readable --numeric-ids --delete --delete-excluded <span class="token punctuation">\</span>--itemize-changes --verbose --progress <span class="token punctuation">\</span>--exclude<span class="token operator">=</span><span class="token string">'*~'</span> <span class="token punctuation">\</span>--exclude<span class="token operator">=</span><span class="token string">'$device'</span> <span class="token punctuation">\</span>--exclude<span class="token operator">=</span><span class="token string">'/mnt'</span> <span class="token punctuation">\</span>--exclude<span class="token operator">=</span><span class="token string">'/dev'</span> <span class="token punctuation">\</span>--exclude<span class="token operator">=</span><span class="token string">'/var/tmp'</span> <span class="token punctuation">\</span>--exclude<span class="token operator">=</span><span class="token string">'/tmp'</span> <span class="token punctuation">\</span>/ /mnt/<span class="token variable">$mount_dir</span>/system_backup <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token builtin class-name">echo</span> <span class="token string">'==> finished.'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="中文及字体设置"><a href="#中文及字体设置" class="headerlink" title="中文及字体设置"></a>中文及字体设置</h3><ul><li>语言配置<br>去掉<code>/etc/locale.gen</code>中的<code>zh_CN.UTF-8 UTF-8</code>和<code>en_US.UTF-8 UTF-8</code>的注释</li></ul><p>根据需要在<code>~/.xinitrc</code>或者<code>~/.bashrc</code>配置</p><p><strong>在<code>~/.xinitrc</code>中配置要注意在<code>exec xxx</code>之前</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>zh_CN.UTF-8<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANGUAGE</span></span><span class="token operator">=</span>zh_CN:en_US<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>字体配置<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S wqy-bitmapfont wqy-microhei noto-fonts noto-fonts-emoji<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>设置<code>~/.config/fontconfig/fonts.conf</code><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">fontconfig</span> <span class="token name">SYSTEM</span> <span class="token string">'fonts.dtd'</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fontconfig</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 显示器使用的像素排列方式 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>font<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>edit</span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assign<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rgba<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>const</span><span class="token punctuation">></span></span>rgb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>const</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>edit</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 字体微调的程度, 可选 hintnone, hintslight (默认), hintmedium, hintfull. --></span>  <span class="token comment">&lt;!-- 更高的 hinting 等级可使字体更锐利，同时也会损失更多的细节 --></span>  <span class="token comment">&lt;!-- 如果显示器的 DPI 高得不像话 (>=300), 可关闭 hinting, 字体会自然对齐像素 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>font<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>edit</span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assign<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hintstyle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>const</span><span class="token punctuation">></span></span>hintslight<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>const</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>edit</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 抗锯齿. 除非屏幕DPI奇高否则建议开启 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>font<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>edit</span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assign<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>antialias<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bool</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bool</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>edit</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 全局默认字体　--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>edit</span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prepend<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>Terminus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>edit</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 全局默认英文字体 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span> <span class="token attr-name">compare</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>contains<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lang<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>en<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>edit</span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prepend<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>Terminus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>edit</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 全局默认中文字体 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span> <span class="token attr-name">compare</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>contains<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lang<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>zh<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>edit</span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prepend<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>edit</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 默认无衬线字体 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pattern<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span> <span class="token attr-name">qual</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>any<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>sans-serif<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>edit</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prepend<span class="token punctuation">"</span></span> <span class="token attr-name">binding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>same<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>Terminus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>edit</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 默认衬线字体 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pattern<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span> <span class="token attr-name">qual</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>any<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>serif<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>edit</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prepend<span class="token punctuation">"</span></span> <span class="token attr-name">binding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>same<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>Terminus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>edit</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 默认等宽字体 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pattern<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span> <span class="token attr-name">qual</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>any<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>monospace<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>edit</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prepend<span class="token punctuation">"</span></span> <span class="token attr-name">binding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>same<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>Terminus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>edit</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 字体替换 --></span>  <span class="token comment">&lt;!--SimSun, Microsoft YaHei, SimHei -> WenQuanYi Micro Hei --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pattern<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>宋体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>edit</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assign<span class="token punctuation">"</span></span> <span class="token attr-name">binding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>strong<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>          <span class="token comment">&lt;!-- &lt;string>Noto Serif CJK SC&lt;/string> --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>edit</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pattern<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>SimSun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>edit</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assign<span class="token punctuation">"</span></span> <span class="token attr-name">binding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>strong<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>          <span class="token comment">&lt;!-- &lt;string>Noto Serif CJK SC&lt;/string> --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>edit</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pattern<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span> <span class="token attr-name">qual</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>any<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>SimSun-18030<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>edit</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assign<span class="token punctuation">"</span></span> <span class="token attr-name">binding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>same<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>         <span class="token comment">&lt;!-- &lt;string>Noto Serif CJK SC&lt;/string> --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>edit</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pattern<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span> <span class="token attr-name">qual</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>any<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>Microsoft YaHei<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>edit</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assign<span class="token punctuation">"</span></span> <span class="token attr-name">binding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>same<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>edit</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pattern<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span> <span class="token attr-name">qual</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>any<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>SimHei<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>edit</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assign<span class="token punctuation">"</span></span> <span class="token attr-name">binding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>same<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>edit</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pattern<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>Times New Roman<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>edit</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>append<span class="token punctuation">"</span></span> <span class="token attr-name">binding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>strong<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>edit</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pattern<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>Terminus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>edit</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>family<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>append<span class="token punctuation">"</span></span> <span class="token attr-name">binding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>strong<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>edit</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 备用字体优先顺序 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>alias</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>sans-serif<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prefer</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Terminus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Color Emoji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Emoji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK SC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK TC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK JP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK KR<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prefer</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>alias</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>alias</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>serif<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prefer</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Terminus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Color Emoji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Emoji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK SC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK TC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK JP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK KR<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Emoji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prefer</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>alias</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>alias</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>monospace<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prefer</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Terminus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Color Emoji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Emoji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK SC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK TC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK JP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK KR<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prefer</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>alias</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fontconfig</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>设置字体偏好:<code>/etc/fonts/conf.d/64-language-selector-prefer.conf</code><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">fontconfig</span> <span class="token name">SYSTEM</span> <span class="token string">'fonts.dtd'</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fontconfig</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>alias</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>sans-serif<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prefer</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Terminus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Color Emoji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Emoji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK SC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK TC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK JP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK KR<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prefer</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>alias</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>alias</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>serif<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prefer</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Terminus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Color Emoji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Emoji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK SC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK TC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK JP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK KR<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Emoji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prefer</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>alias</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>alias</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>monospace<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prefer</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Terminus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>WenQuanYi WenQuanYi Bitmap Song<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Color Emoji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Emoji<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK SC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK TC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK JP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>family</span><span class="token punctuation">></span></span>Noto Sans CJK KR<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>family</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prefer</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>alias</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fontconfig</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="安装fcitx5"><a href="#安装fcitx5" class="headerlink" title="安装fcitx5"></a>安装fcitx5</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S fcitx5-im fcitx5-chinese-addons fcitx5-mozc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="xfce的声音"><a href="#xfce的声音" class="headerlink" title="xfce的声音"></a>xfce的声音</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S alsa-utils pulseaudio pulseaudio-alsa <span class="token punctuation">\</span> pavucontrol      <span class="token comment">#与xfce4 panel里面的插件配合使用,必须要有这个进程</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>xfce4 panel设置里面添加一个pulseaudio plugin的插件</p><p><code>alsamixer</code> F6选择声卡,然后把mm的M键去掉,上下箭头调节,auto-mute disable了以后,loopback enable. reboot重启,这时候xfce4的插件就可以调节声音了</p><h3 id="安装chrome"><a href="#安装chrome" class="headerlink" title="安装chrome"></a>安装chrome</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#AUR 助手</span><span class="token function">git</span> clone https://aur.archlinux.org/yay-git.git<span class="token builtin class-name">cd</span> yay-gitmakepkg -si<span class="token comment">#yay不要用root</span>yay -S google-chrome<span class="token comment">#升级</span>yay -Syu<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="安装clash"><a href="#安装clash" class="headerlink" title="安装clash"></a>安装clash</h3><p>看<a href="https://blog.linioi.com/posts/clash-on-arch/">这</a><br>或者<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases">class for windows</a></p><h3 id="支持ntfs"><a href="#支持ntfs" class="headerlink" title="支持ntfs"></a>支持ntfs</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S ntfs-3g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> setup </tag>
            
            <tag> Arch Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell脚本笔记</title>
      <link href="/2022/03/19/shell-some-memos-for-shell-script/"/>
      <url>/2022/03/19/shell-some-memos-for-shell-script/</url>
      
        <content type="html"><![CDATA[<ul><li><p>接受用户输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">read</span> var<span class="token builtin class-name">echo</span> <span class="token string">"input value is <span class="token variable">$var</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>成功后执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> somefile <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">"removed"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>失败后执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> filenotexists <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">"nothing removed"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>重定向输出</p><ul><li><p><code>1</code>代表<code>stdout</code>, 标准输出</p></li><li><p><code>2</code>代表<code>stderr</code>, 标准错误输出</p></li><li><p><code>&amp;</code>代表”按照相同方式输出”</p></li><li><p><code>dev/null</code>是null文件，可以理解为一个“黑洞”设备，所有输入都会被丢弃</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"blabla"</span> <span class="token operator">></span> dest.file<span class="token comment"># 输出所有输出到文件</span><span class="token builtin class-name">echo</span> <span class="token string">"blabla"</span> <span class="token number">1</span> <span class="token operator">></span> dest.file<span class="token comment"># 只输出错误输出到文件</span><span class="token function">rm</span> filenotexists <span class="token number">2</span> <span class="token operator">></span> err.log<span class="token comment"># 输出所有输出到文件</span><span class="token function">rm</span> somefile <span class="token number">1</span> <span class="token operator">></span> dest.file <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span><span class="token comment"># 输出非错误输出到文件</span><span class="token function">rm</span> somefile <span class="token number">1</span> <span class="token operator">></span> dest.file <span class="token number">2</span> <span class="token operator">></span> dev/null<span class="token comment"># 创建两条管道</span><span class="token function">rm</span> somefile <span class="token number">1</span> <span class="token operator">></span> log <span class="token number">2</span> <span class="token operator">></span> log<span class="token comment"># 2的管道继承于1</span><span class="token function">rm</span> somefile <span class="token number">1</span> <span class="token operator">></span> log <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建固定大小的空文件</p><p>当<code>dev/zero</code>作为输入流的时候，会产生无限的0 (不是ASCII的’0’)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># input file is /dev/zero</span><span class="token comment"># output file is file</span><span class="token comment"># write 10 times</span><span class="token comment"># 1024 bytes every time</span><span class="token comment"># so it creates a 10k blank file</span><span class="token function">dd</span> <span class="token assign-left variable">if</span><span class="token operator">=</span>/dev/zero <span class="token assign-left variable">of</span><span class="token operator">=</span>file <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">10</span> <span class="token assign-left variable">bs</span><span class="token operator">=</span><span class="token number">1024</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>if else</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">a</span><span class="token operator">=</span><span class="token number">10</span><span class="token assign-left variable">b</span><span class="token operator">=</span><span class="token number">20</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$a</span> <span class="token operator">==</span> <span class="token variable">$b</span> <span class="token punctuation">]</span><span class="token keyword">then</span>   <span class="token builtin class-name">echo</span> <span class="token string">"a is equal to b"</span><span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token variable">$a</span> -gt <span class="token variable">$b</span> <span class="token punctuation">]</span><span class="token keyword">then</span>   <span class="token builtin class-name">echo</span> <span class="token string">"a greater than b"</span><span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token variable">$a</span> -lt <span class="token variable">$b</span> <span class="token punctuation">]</span><span class="token keyword">then</span>   <span class="token builtin class-name">echo</span> <span class="token string">"a less than b"</span><span class="token keyword">else</span>   <span class="token builtin class-name">echo</span> <span class="token string">""</span><span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>追加到文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">file1 <span class="token operator">>></span> file2<span class="token builtin class-name">echo</span> <span class="token string">"tails"</span> <span class="token operator">>></span> <span class="token function">file</span><span class="token function">date</span> <span class="token operator">>></span> <span class="token function">file</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> shell script </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>错误的动态类加载方式引发的metaspace内存泄漏</title>
      <link href="/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/"/>
      <url>/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/</url>
      
        <content type="html"><![CDATA[<h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><p>通过<code>ClassLoader#defineClass</code>方法重复定义指定<code>name</code>的类, HotSpot JVM最终会在metaspace中抛出OOM。</p><h2 id="ClassLoader-defineClass的行为"><a href="#ClassLoader-defineClass的行为" class="headerlink" title="ClassLoader#defineClass的行为"></a><code>ClassLoader#defineClass</code>的行为</h2><p><img src="/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/0.png" alt="defineClass"></p><p><code>ClassLoader#defineClass</code>是JVM本地方法, 主要的执行步骤:</p><ol><li><p>解析class文件并检查class文件格式是否正确。</p><p><img src="/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/1.png" alt="vm specification"></p></li><li><p>根据<code>name</code>检查<code>systemDictionary</code>中class对应的类数据Klass&#x2F;KlassHandler是否已经加载过。</p></li></ol><h2 id="HotSpot-VM解析class的时候实际行为"><a href="#HotSpot-VM解析class的时候实际行为" class="headerlink" title="HotSpot VM解析class的时候实际行为"></a>HotSpot VM解析class的时候实际行为</h2><p>在解析和检查class格式过程中, HotSpot VM同时也在metaspace中产生了对应class文件的结构数据 (class code, vtable, itable, etc.)。 所以即使传入的<code>name</code>完全一样, 也会在metaspace中不断产生“重复”的class数据。</p><p><img src="/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/2.png" alt="native define class"></p><p><img src="/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/3.png" alt="find klass in dict"></p><p><img src="/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/4.png" alt="check if class already defined"></p><p>选择在解析的过程中保留完整的class数据（这里“完整”指的是相对与解析一部分之后丢弃一部分的做法），除了不这么做会增加代码复杂度、增加class数据解析的次数、产生更多的内存碎片之外，另一个考虑是正确且规范的动态类加载方式应该是通过<code>ClassLoader#loadClass()</code>来进行，而不是直接调用native方法，因为直接调用native方法并不会得到不一样的结果。</p><p><img src="/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/5.png" alt="loadClass in java"></p><h2 id="metaspace中Class数据的GC时机"><a href="#metaspace中Class数据的GC时机" class="headerlink" title="metaspace中Class数据的GC时机"></a>metaspace中Class数据的GC时机</h2><p>实际上没有特定针对metaspace的GC行为，GC总是在堆中工作。但当堆中包含metaspace的class数据指针的class对象被执行回收时，class数据占用的空间也会被同时释放。</p><p><img src="/2022/03/17/jvm-metaspace-leakage-caused-by-loading-dynamic-class/6.png" alt="metaspace &#39;GC&#39;"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JVM </tag>
            
            <tag> JVM Memory </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Frida-il2cpp-bridge script for fate/go</title>
      <link href="/2022/03/17/fgo-frida-il2cpp-bridge/"/>
      <url>/2022/03/17/fgo-frida-il2cpp-bridge/</url>
      
        <content type="html"><![CDATA[<p>hack script for fgo based on <a href="https://github.com/frida/frida">frida</a> and <a href="https://github.com/vfsfitvnm/frida-il2cpp-bridge">frida-il2cpp-bridge</a> </p><h3 id="Supports"><a href="#Supports" class="headerlink" title="Supports"></a>Supports</h3><ul><li><p>bilibili fate go v2.36.0</p></li><li><p>aniplex fate go v2.49.0</p><p><em>fate go in other channels&#x2F;platforms&#x2F;versions may be functional but it’s not tested</em></p></li></ul><h3 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h3><h4 id="For-Android"><a href="#For-Android" class="headerlink" title="For Android"></a>For Android</h4><p>*<em>Android 10 or 11 is recommended, among testing in android 9 sometimes game may crash</em></p><ul><li><p>Install nodeJs for NPM</p></li><li><p>Install frida and frida-tools with <code> npm install frida &amp;&amp; npm install frida-tools</code></p></li><li><p>Download latest frida-server from <a href="https://github.com/frida/frida/releases">https://github.com/frida/frida/releases</a></p></li><li><p>Start rooted device, rettach with <code> adb root</code></p></li><li><p>Install game apk</p></li><li><p>Copy <em><strong>frida-server</strong></em> file to device directory such as <em><strong>&#x2F;data&#x2F;local&#x2F;tmp</strong></em></p></li><li><p>Run <code>adb shell</code> to connect to device</p></li><li><p>Change <em><strong>frida-server</strong></em> file permission with <code>chmod 777 &#123;directory&#125;/frida-server</code></p></li><li><p>Navigate to directory and run server with <code>./frida-server</code></p></li></ul><h4 id="For-IOS"><a href="#For-IOS" class="headerlink" title="For IOS"></a>For IOS</h4><ul><li>TODO</li></ul><h4 id="Run-script"><a href="#Run-script" class="headerlink" title="Run script"></a>Run script</h4><ul><li><p>See comments in <em><strong>fgo_hack_script.ts</strong></em>, and change codes according to the <em>fgo</em> version</p><ul><li>there is some tiny diffrences between <em>bili fatego</em> and <em>aniplex fatego</em></li></ul></li><li><p>Build with <code>./build_aniplex.sh</code> or <code>./build_bili.sh</code></p></li><li><p>Run with <code>./run.sh com.bilibili.fgo</code> or <code>./run.sh com.aniplex.fategrandorder</code></p><ul><li>you could now see some logs (if codes like <code>console.log(...)</code> is uncommented) when starting battle</li></ul></li><li><p>Have fun.</p></li></ul><h3 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h3><p><img src="/images/0.jpg" alt="in battle"></p><h4 id="active"><a href="#active" class="headerlink" title="active"></a>active</h4><ol><li><p>Increase player’s servant hp (by 500,000)</p></li><li><p>Set all skills lv to 10 (both servant’s and master’s)</p></li><li><p>Change all skills charge turn down (to 1)</p></li><li><p>Try to disable codestage anti-cheat engine (notice that there is <strong>NO WAY</strong> to cheat safely cause anyway the battle data will be sent to game server)</p></li></ol><h4 id="inactive"><a href="#inactive" class="headerlink" title="inactive"></a>inactive</h4><ol><li><p>Never die (reset hp every time servant dies)</p></li><li><p>Increase attack &amp; defence np rate</p></li><li><p>Increase attack star rate</p></li></ol><h3 id="Issues"><a href="#Issues" class="headerlink" title="Issues"></a>Issues</h3><ul><li><p>Could not ran with X64-based simulator such as MuMu (tested) at this time (<a href="https://github.com/vfsfitvnm/frida-il2cpp-bridge">frida-il2cpp-bridge</a> version 0.7.9)</p></li><li><p>Features in <a href="#inactive">inactive</a> may invoked too frequently that may cause some leakage</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Amateur Exp. </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wallhack </tag>
            
            <tag> injection </tag>
            
            <tag> reverse engineering </tag>
            
            <tag> fgo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
